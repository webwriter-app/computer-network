import "./chunk-CBEIUQ5X.js";

// node_modules/cytoscape/dist/cytoscape.esm.min.js
function e(t3) {
  return (e = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e9) {
    return typeof e9;
  } : function(e9) {
    return e9 && "function" == typeof Symbol && e9.constructor === Symbol && e9 !== Symbol.prototype ? "symbol" : typeof e9;
  })(t3);
}
function t(e9, t3) {
  if (!(e9 instanceof t3))
    throw new TypeError("Cannot call a class as a function");
}
function n(e9, t3) {
  for (var n2 = 0; n2 < t3.length; n2++) {
    var r2 = t3[n2];
    r2.enumerable = r2.enumerable || false, r2.configurable = true, "value" in r2 && (r2.writable = true), Object.defineProperty(e9, r2.key, r2);
  }
}
function r(e9, t3, r2) {
  return t3 && n(e9.prototype, t3), r2 && n(e9, r2), Object.defineProperty(e9, "prototype", { writable: false }), e9;
}
function i(e9, t3, n2) {
  return t3 in e9 ? Object.defineProperty(e9, t3, { value: n2, enumerable: true, configurable: true, writable: true }) : e9[t3] = n2, e9;
}
function a(e9, t3) {
  return function(e10) {
    if (Array.isArray(e10))
      return e10;
  }(e9) || function(e10, t4) {
    var n2 = null == e10 ? null : "undefined" != typeof Symbol && e10[Symbol.iterator] || e10["@@iterator"];
    if (null == n2)
      return;
    var r2, i2, a2 = [], o2 = true, s2 = false;
    try {
      for (n2 = n2.call(e10); !(o2 = (r2 = n2.next()).done) && (a2.push(r2.value), !t4 || a2.length !== t4); o2 = true)
        ;
    } catch (e11) {
      s2 = true, i2 = e11;
    } finally {
      try {
        o2 || null == n2.return || n2.return();
      } finally {
        if (s2)
          throw i2;
      }
    }
    return a2;
  }(e9, t3) || function(e10, t4) {
    if (!e10)
      return;
    if ("string" == typeof e10)
      return o(e10, t4);
    var n2 = Object.prototype.toString.call(e10).slice(8, -1);
    "Object" === n2 && e10.constructor && (n2 = e10.constructor.name);
    if ("Map" === n2 || "Set" === n2)
      return Array.from(e10);
    if ("Arguments" === n2 || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
      return o(e10, t4);
  }(e9, t3) || function() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }();
}
function o(e9, t3) {
  (null == t3 || t3 > e9.length) && (t3 = e9.length);
  for (var n2 = 0, r2 = new Array(t3); n2 < t3; n2++)
    r2[n2] = e9[n2];
  return r2;
}
var s = "undefined" == typeof window ? null : window;
var l = s ? s.navigator : null;
s && s.document;
var u = e("");
var c = e({});
var d = e(function() {
});
var h = "undefined" == typeof HTMLElement ? "undefined" : e(HTMLElement);
var p = function(e9) {
  return e9 && e9.instanceString && g(e9.instanceString) ? e9.instanceString() : null;
};
var f = function(t3) {
  return null != t3 && e(t3) == u;
};
var g = function(t3) {
  return null != t3 && e(t3) === d;
};
var v = function(e9) {
  return !x(e9) && (Array.isArray ? Array.isArray(e9) : null != e9 && e9 instanceof Array);
};
var y = function(t3) {
  return null != t3 && e(t3) === c && !v(t3) && t3.constructor === Object;
};
var m = function(t3) {
  return null != t3 && e(t3) === e(1) && !isNaN(t3);
};
var b = function(e9) {
  return "undefined" === h ? void 0 : null != e9 && e9 instanceof HTMLElement;
};
var x = function(e9) {
  return w(e9) || E(e9);
};
var w = function(e9) {
  return "collection" === p(e9) && e9._private.single;
};
var E = function(e9) {
  return "collection" === p(e9) && !e9._private.single;
};
var k = function(e9) {
  return "core" === p(e9);
};
var C = function(e9) {
  return "stylesheet" === p(e9);
};
var S = function(e9) {
  return null == e9 || !("" !== e9 && !e9.match(/^\s+$/));
};
var P = function(t3) {
  return function(t4) {
    return null != t4 && e(t4) === c;
  }(t3) && g(t3.then);
};
var D = function(e9, t3) {
  t3 || (t3 = function() {
    if (1 === arguments.length)
      return arguments[0];
    if (0 === arguments.length)
      return "undefined";
    for (var e10 = [], t4 = 0; t4 < arguments.length; t4++)
      e10.push(arguments[t4]);
    return e10.join("$");
  });
  var n2 = function n3() {
    var r2, i2 = this, a2 = arguments, o2 = t3.apply(i2, a2), s2 = n3.cache;
    return (r2 = s2[o2]) || (r2 = s2[o2] = e9.apply(i2, a2)), r2;
  };
  return n2.cache = {}, n2;
};
var T = D(function(e9) {
  return e9.replace(/([A-Z])/g, function(e10) {
    return "-" + e10.toLowerCase();
  });
});
var _ = D(function(e9) {
  return e9.replace(/(-\w)/g, function(e10) {
    return e10[1].toUpperCase();
  });
});
var M = D(function(e9, t3) {
  return e9 + t3[0].toUpperCase() + t3.substring(1);
}, function(e9, t3) {
  return e9 + "$" + t3;
});
var B = function(e9) {
  return S(e9) ? e9 : e9.charAt(0).toUpperCase() + e9.substring(1);
};
var N = "(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))";
var z = function(e9, t3) {
  return e9 < t3 ? -1 : e9 > t3 ? 1 : 0;
};
var I = null != Object.assign ? Object.assign.bind(Object) : function(e9) {
  for (var t3 = arguments, n2 = 1; n2 < t3.length; n2++) {
    var r2 = t3[n2];
    if (null != r2)
      for (var i2 = Object.keys(r2), a2 = 0; a2 < i2.length; a2++) {
        var o2 = i2[a2];
        e9[o2] = r2[o2];
      }
  }
  return e9;
};
var A = function(e9) {
  return (v(e9) ? e9 : null) || function(e10) {
    return L[e10.toLowerCase()];
  }(e9) || function(e10) {
    if ((4 === e10.length || 7 === e10.length) && "#" === e10[0]) {
      var t3, n2, r2;
      return 4 === e10.length ? (t3 = parseInt(e10[1] + e10[1], 16), n2 = parseInt(e10[2] + e10[2], 16), r2 = parseInt(e10[3] + e10[3], 16)) : (t3 = parseInt(e10[1] + e10[2], 16), n2 = parseInt(e10[3] + e10[4], 16), r2 = parseInt(e10[5] + e10[6], 16)), [t3, n2, r2];
    }
  }(e9) || function(e10) {
    var t3, n2 = new RegExp("^rgb[a]?\\(((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)(?:\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))))?\\)$").exec(e10);
    if (n2) {
      t3 = [];
      for (var r2 = [], i2 = 1; i2 <= 3; i2++) {
        var a2 = n2[i2];
        if ("%" === a2[a2.length - 1] && (r2[i2] = true), a2 = parseFloat(a2), r2[i2] && (a2 = a2 / 100 * 255), a2 < 0 || a2 > 255)
          return;
        t3.push(Math.floor(a2));
      }
      var o2 = r2[1] || r2[2] || r2[3], s2 = r2[1] && r2[2] && r2[3];
      if (o2 && !s2)
        return;
      var l2 = n2[4];
      if (void 0 !== l2) {
        if ((l2 = parseFloat(l2)) < 0 || l2 > 1)
          return;
        t3.push(l2);
      }
    }
    return t3;
  }(e9) || function(e10) {
    var t3, n2, r2, i2, a2, o2, s2, l2;
    function u2(e11, t4, n3) {
      return n3 < 0 && (n3 += 1), n3 > 1 && (n3 -= 1), n3 < 1 / 6 ? e11 + 6 * (t4 - e11) * n3 : n3 < 0.5 ? t4 : n3 < 2 / 3 ? e11 + (t4 - e11) * (2 / 3 - n3) * 6 : e11;
    }
    var c2 = new RegExp("^hsl[a]?\\(((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?)))\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%])\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%])(?:\\s*,\\s*((?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))))?\\)$").exec(e10);
    if (c2) {
      if ((n2 = parseInt(c2[1])) < 0 ? n2 = (360 - -1 * n2 % 360) % 360 : n2 > 360 && (n2 %= 360), n2 /= 360, (r2 = parseFloat(c2[2])) < 0 || r2 > 100)
        return;
      if (r2 /= 100, (i2 = parseFloat(c2[3])) < 0 || i2 > 100)
        return;
      if (i2 /= 100, void 0 !== (a2 = c2[4]) && ((a2 = parseFloat(a2)) < 0 || a2 > 1))
        return;
      if (0 === r2)
        o2 = s2 = l2 = Math.round(255 * i2);
      else {
        var d2 = i2 < 0.5 ? i2 * (1 + r2) : i2 + r2 - i2 * r2, h2 = 2 * i2 - d2;
        o2 = Math.round(255 * u2(h2, d2, n2 + 1 / 3)), s2 = Math.round(255 * u2(h2, d2, n2)), l2 = Math.round(255 * u2(h2, d2, n2 - 1 / 3));
      }
      t3 = [o2, s2, l2, a2];
    }
    return t3;
  }(e9);
};
var L = { transparent: [0, 0, 0, 0], aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], grey: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] };
var O = function(e9) {
  for (var t3 = e9.map, n2 = e9.keys, r2 = n2.length, i2 = 0; i2 < r2; i2++) {
    var a2 = n2[i2];
    if (y(a2))
      throw Error("Tried to set map with object key");
    i2 < n2.length - 1 ? (null == t3[a2] && (t3[a2] = {}), t3 = t3[a2]) : t3[a2] = e9.value;
  }
};
var R = function(e9) {
  for (var t3 = e9.map, n2 = e9.keys, r2 = n2.length, i2 = 0; i2 < r2; i2++) {
    var a2 = n2[i2];
    if (y(a2))
      throw Error("Tried to get map with object key");
    if (null == (t3 = t3[a2]))
      return t3;
  }
  return t3;
};
var V = function(e9) {
  var t3 = typeof e9;
  return null != e9 && ("object" == t3 || "function" == t3);
};
var F = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {};
var j = "object" == typeof F && F && F.Object === Object && F;
var q = "object" == typeof self && self && self.Object === Object && self;
var Y = j || q || Function("return this")();
var X = function() {
  return Y.Date.now();
};
var W = /\s/;
var H = function(e9) {
  for (var t3 = e9.length; t3-- && W.test(e9.charAt(t3)); )
    ;
  return t3;
};
var K = /^\s+/;
var G = function(e9) {
  return e9 ? e9.slice(0, H(e9) + 1).replace(K, "") : e9;
};
var U = Y.Symbol;
var Z = Object.prototype;
var $ = Z.hasOwnProperty;
var Q = Z.toString;
var J = U ? U.toStringTag : void 0;
var ee = function(e9) {
  var t3 = $.call(e9, J), n2 = e9[J];
  try {
    e9[J] = void 0;
    var r2 = true;
  } catch (e10) {
  }
  var i2 = Q.call(e9);
  return r2 && (t3 ? e9[J] = n2 : delete e9[J]), i2;
};
var te = Object.prototype.toString;
var ne = function(e9) {
  return te.call(e9);
};
var re = U ? U.toStringTag : void 0;
var ie = function(e9) {
  return null == e9 ? void 0 === e9 ? "[object Undefined]" : "[object Null]" : re && re in Object(e9) ? ee(e9) : ne(e9);
};
var ae = function(e9) {
  return null != e9 && "object" == typeof e9;
};
var oe = function(e9) {
  return "symbol" == typeof e9 || ae(e9) && "[object Symbol]" == ie(e9);
};
var se = /^[-+]0x[0-9a-f]+$/i;
var le = /^0b[01]+$/i;
var ue = /^0o[0-7]+$/i;
var ce = parseInt;
var de = function(e9) {
  if ("number" == typeof e9)
    return e9;
  if (oe(e9))
    return NaN;
  if (V(e9)) {
    var t3 = "function" == typeof e9.valueOf ? e9.valueOf() : e9;
    e9 = V(t3) ? t3 + "" : t3;
  }
  if ("string" != typeof e9)
    return 0 === e9 ? e9 : +e9;
  e9 = G(e9);
  var n2 = le.test(e9);
  return n2 || ue.test(e9) ? ce(e9.slice(2), n2 ? 2 : 8) : se.test(e9) ? NaN : +e9;
};
var he = Math.max;
var pe = Math.min;
var fe = function(e9, t3, n2) {
  var r2, i2, a2, o2, s2, l2, u2 = 0, c2 = false, d2 = false, h2 = true;
  if ("function" != typeof e9)
    throw new TypeError("Expected a function");
  function p2(t4) {
    var n3 = r2, a3 = i2;
    return r2 = i2 = void 0, u2 = t4, o2 = e9.apply(a3, n3);
  }
  function f2(e10) {
    return u2 = e10, s2 = setTimeout(v2, t3), c2 ? p2(e10) : o2;
  }
  function g2(e10) {
    var n3 = e10 - l2;
    return void 0 === l2 || n3 >= t3 || n3 < 0 || d2 && e10 - u2 >= a2;
  }
  function v2() {
    var e10 = X();
    if (g2(e10))
      return y2(e10);
    s2 = setTimeout(v2, function(e11) {
      var n3 = t3 - (e11 - l2);
      return d2 ? pe(n3, a2 - (e11 - u2)) : n3;
    }(e10));
  }
  function y2(e10) {
    return s2 = void 0, h2 && r2 ? p2(e10) : (r2 = i2 = void 0, o2);
  }
  function m2() {
    var e10 = X(), n3 = g2(e10);
    if (r2 = arguments, i2 = this, l2 = e10, n3) {
      if (void 0 === s2)
        return f2(l2);
      if (d2)
        return clearTimeout(s2), s2 = setTimeout(v2, t3), p2(l2);
    }
    return void 0 === s2 && (s2 = setTimeout(v2, t3)), o2;
  }
  return t3 = de(t3) || 0, V(n2) && (c2 = !!n2.leading, a2 = (d2 = "maxWait" in n2) ? he(de(n2.maxWait) || 0, t3) : a2, h2 = "trailing" in n2 ? !!n2.trailing : h2), m2.cancel = function() {
    void 0 !== s2 && clearTimeout(s2), u2 = 0, r2 = l2 = i2 = s2 = void 0;
  }, m2.flush = function() {
    return void 0 === s2 ? o2 : y2(X());
  }, m2;
};
var ge = s ? s.performance : null;
var ve = ge && ge.now ? function() {
  return ge.now();
} : function() {
  return Date.now();
};
var ye = function() {
  if (s) {
    if (s.requestAnimationFrame)
      return function(e9) {
        s.requestAnimationFrame(e9);
      };
    if (s.mozRequestAnimationFrame)
      return function(e9) {
        s.mozRequestAnimationFrame(e9);
      };
    if (s.webkitRequestAnimationFrame)
      return function(e9) {
        s.webkitRequestAnimationFrame(e9);
      };
    if (s.msRequestAnimationFrame)
      return function(e9) {
        s.msRequestAnimationFrame(e9);
      };
  }
  return function(e9) {
    e9 && setTimeout(function() {
      e9(ve());
    }, 1e3 / 60);
  };
}();
var me = function(e9) {
  return ye(e9);
};
var be = ve;
var xe = 65599;
var we = function(e9) {
  for (var t3, n2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 9261, r2 = n2; !(t3 = e9.next()).done; )
    r2 = r2 * xe + t3.value | 0;
  return r2;
};
var Ee = function(e9) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 9261;
  return t3 * xe + e9 | 0;
};
var ke = function(e9) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 5381;
  return (t3 << 5) + t3 + e9 | 0;
};
var Ce = function(e9) {
  return 2097152 * e9[0] + e9[1];
};
var Se = function(e9, t3) {
  return [Ee(e9[0], t3[0]), ke(e9[1], t3[1])];
};
var Pe = function(e9, t3) {
  var n2 = { value: 0, done: false }, r2 = 0, i2 = e9.length;
  return we({ next: function() {
    return r2 < i2 ? n2.value = e9.charCodeAt(r2++) : n2.done = true, n2;
  } }, t3);
};
var De = function() {
  return Te(arguments);
};
var Te = function(e9) {
  for (var t3, n2 = 0; n2 < e9.length; n2++) {
    var r2 = e9[n2];
    t3 = 0 === n2 ? Pe(r2) : Pe(r2, t3);
  }
  return t3;
};
var _e = true;
var Me = null != console.warn;
var Be = null != console.trace;
var Ne = Number.MAX_SAFE_INTEGER || 9007199254740991;
var ze = function() {
  return true;
};
var Ie = function() {
  return false;
};
var Ae = function() {
  return 0;
};
var Le = function() {
};
var Oe = function(e9) {
  throw new Error(e9);
};
var Re = function(e9) {
  if (void 0 === e9)
    return _e;
  _e = !!e9;
};
var Ve = function(e9) {
  Re() && (Me ? console.warn(e9) : (console.log(e9), Be && console.trace()));
};
var Fe = function(e9) {
  return null == e9 ? e9 : v(e9) ? e9.slice() : y(e9) ? function(e10) {
    return I({}, e10);
  }(e9) : e9;
};
var je = function(e9, t3) {
  for (t3 = e9 = ""; e9++ < 36; t3 += 51 * e9 & 52 ? (15 ^ e9 ? 8 ^ Math.random() * (20 ^ e9 ? 16 : 4) : 4).toString(16) : "-")
    ;
  return t3;
};
var qe = {};
var Ye = function() {
  return qe;
};
var Xe = function(e9) {
  var t3 = Object.keys(e9);
  return function(n2) {
    for (var r2 = {}, i2 = 0; i2 < t3.length; i2++) {
      var a2 = t3[i2], o2 = null == n2 ? void 0 : n2[a2];
      r2[a2] = void 0 === o2 ? e9[a2] : o2;
    }
    return r2;
  };
};
var We = function(e9, t3, n2) {
  for (var r2 = e9.length - 1; r2 >= 0 && (e9[r2] !== t3 || (e9.splice(r2, 1), !n2)); r2--)
    ;
};
var He = function(e9) {
  e9.splice(0, e9.length);
};
var Ke = function(e9, t3, n2) {
  return n2 && (t3 = M(n2, t3)), e9[t3];
};
var Ge = function(e9, t3, n2, r2) {
  n2 && (t3 = M(n2, t3)), e9[t3] = r2;
};
var Ue = "undefined" != typeof Map ? Map : function() {
  function e9() {
    t(this, e9), this._obj = {};
  }
  return r(e9, [{ key: "set", value: function(e10, t3) {
    return this._obj[e10] = t3, this;
  } }, { key: "delete", value: function(e10) {
    return this._obj[e10] = void 0, this;
  } }, { key: "clear", value: function() {
    this._obj = {};
  } }, { key: "has", value: function(e10) {
    return void 0 !== this._obj[e10];
  } }, { key: "get", value: function(e10) {
    return this._obj[e10];
  } }]), e9;
}();
var Ze = function() {
  function e9(n2) {
    if (t(this, e9), this._obj = /* @__PURE__ */ Object.create(null), this.size = 0, null != n2) {
      var r2;
      r2 = null != n2.instanceString && n2.instanceString() === this.instanceString() ? n2.toArray() : n2;
      for (var i2 = 0; i2 < r2.length; i2++)
        this.add(r2[i2]);
    }
  }
  return r(e9, [{ key: "instanceString", value: function() {
    return "set";
  } }, { key: "add", value: function(e10) {
    var t3 = this._obj;
    1 !== t3[e10] && (t3[e10] = 1, this.size++);
  } }, { key: "delete", value: function(e10) {
    var t3 = this._obj;
    1 === t3[e10] && (t3[e10] = 0, this.size--);
  } }, { key: "clear", value: function() {
    this._obj = /* @__PURE__ */ Object.create(null);
  } }, { key: "has", value: function(e10) {
    return 1 === this._obj[e10];
  } }, { key: "toArray", value: function() {
    var e10 = this;
    return Object.keys(this._obj).filter(function(t3) {
      return e10.has(t3);
    });
  } }, { key: "forEach", value: function(e10, t3) {
    return this.toArray().forEach(e10, t3);
  } }]), e9;
}();
var $e = "undefined" !== ("undefined" == typeof Set ? "undefined" : e(Set)) ? Set : Ze;
var Qe = function(e9, t3) {
  var n2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
  if (void 0 !== e9 && void 0 !== t3 && k(e9)) {
    var r2 = t3.group;
    if (null == r2 && (r2 = t3.data && null != t3.data.source && null != t3.data.target ? "edges" : "nodes"), "nodes" === r2 || "edges" === r2) {
      this.length = 1, this[0] = this;
      var i2 = this._private = { cy: e9, single: true, data: t3.data || {}, position: t3.position || { x: 0, y: 0 }, autoWidth: void 0, autoHeight: void 0, autoPadding: void 0, compoundBoundsClean: false, listeners: [], group: r2, style: {}, rstyle: {}, styleCxts: [], styleKeys: {}, removed: true, selected: !!t3.selected, selectable: void 0 === t3.selectable || !!t3.selectable, locked: !!t3.locked, grabbed: false, grabbable: void 0 === t3.grabbable || !!t3.grabbable, pannable: void 0 === t3.pannable ? "edges" === r2 : !!t3.pannable, active: false, classes: new $e(), animation: { current: [], queue: [] }, rscratch: {}, scratch: t3.scratch || {}, edges: [], children: [], parent: t3.parent && t3.parent.isNode() ? t3.parent : null, traversalCache: {}, backgrounding: false, bbCache: null, bbCacheShift: { x: 0, y: 0 }, bodyBounds: null, overlayBounds: null, labelBounds: { all: null, source: null, target: null, main: null }, arrowBounds: { source: null, target: null, "mid-source": null, "mid-target": null } };
      if (null == i2.position.x && (i2.position.x = 0), null == i2.position.y && (i2.position.y = 0), t3.renderedPosition) {
        var a2 = t3.renderedPosition, o2 = e9.pan(), s2 = e9.zoom();
        i2.position = { x: (a2.x - o2.x) / s2, y: (a2.y - o2.y) / s2 };
      }
      var l2 = [];
      v(t3.classes) ? l2 = t3.classes : f(t3.classes) && (l2 = t3.classes.split(/\s+/));
      for (var u2 = 0, c2 = l2.length; u2 < c2; u2++) {
        var d2 = l2[u2];
        d2 && "" !== d2 && i2.classes.add(d2);
      }
      this.createEmitter();
      var h2 = t3.style || t3.css;
      h2 && (Ve("Setting a `style` bypass at element creation should be done only when absolutely necessary.  Try to use the stylesheet instead."), this.style(h2)), (void 0 === n2 || n2) && this.restore();
    } else
      Oe("An element must be of type `nodes` or `edges`; you specified `" + r2 + "`");
  } else
    Oe("An element must have a core reference and parameters set");
};
var Je = function(e9) {
  return e9 = { bfs: e9.bfs || !e9.dfs, dfs: e9.dfs || !e9.bfs }, function(t3, n2, r2) {
    var i2;
    y(t3) && !x(t3) && (t3 = (i2 = t3).roots || i2.root, n2 = i2.visit, r2 = i2.directed), r2 = 2 !== arguments.length || g(n2) ? r2 : n2, n2 = g(n2) ? n2 : function() {
    };
    for (var a2, o2 = this._private.cy, s2 = t3 = f(t3) ? this.filter(t3) : t3, l2 = [], u2 = [], c2 = {}, d2 = {}, h2 = {}, p2 = 0, v2 = this.byGroup(), m2 = v2.nodes, b2 = v2.edges, w2 = 0; w2 < s2.length; w2++) {
      var E2 = s2[w2], k2 = E2.id();
      E2.isNode() && (l2.unshift(E2), e9.bfs && (h2[k2] = true, u2.push(E2)), d2[k2] = 0);
    }
    for (var C2 = function() {
      var t4 = e9.bfs ? l2.shift() : l2.pop(), i3 = t4.id();
      if (e9.dfs) {
        if (h2[i3])
          return "continue";
        h2[i3] = true, u2.push(t4);
      }
      var o3, s3 = d2[i3], f2 = c2[i3], g2 = null != f2 ? f2.source() : null, v3 = null != f2 ? f2.target() : null, y2 = null == f2 ? void 0 : t4.same(g2) ? v3[0] : g2[0];
      if (true === (o3 = n2(t4, f2, y2, p2++, s3)))
        return a2 = t4, "break";
      if (false === o3)
        return "break";
      for (var x2 = t4.connectedEdges().filter(function(e10) {
        return (!r2 || e10.source().same(t4)) && b2.has(e10);
      }), w3 = 0; w3 < x2.length; w3++) {
        var E3 = x2[w3], k3 = E3.connectedNodes().filter(function(e10) {
          return !e10.same(t4) && m2.has(e10);
        }), C3 = k3.id();
        0 === k3.length || h2[C3] || (k3 = k3[0], l2.push(k3), e9.bfs && (h2[C3] = true, u2.push(k3)), c2[C3] = E3, d2[C3] = d2[i3] + 1);
      }
    }; 0 !== l2.length; ) {
      var S2 = C2();
      if ("continue" !== S2 && "break" === S2)
        break;
    }
    for (var P2 = o2.collection(), D2 = 0; D2 < u2.length; D2++) {
      var T2 = u2[D2], _2 = c2[T2.id()];
      null != _2 && P2.push(_2), P2.push(T2);
    }
    return { path: o2.collection(P2), found: o2.collection(a2) };
  };
};
var et = { breadthFirstSearch: Je({ bfs: true }), depthFirstSearch: Je({ dfs: true }) };
et.bfs = et.breadthFirstSearch, et.dfs = et.depthFirstSearch;
var tt = function(e9, t3) {
  return e9(t3 = { exports: {} }, t3.exports), t3.exports;
}(function(e9, t3) {
  (function() {
    var t4, n2, r2, i2, a2, o2, s2, l2, u2, c2, d2, h2, p2, f2, g2;
    r2 = Math.floor, c2 = Math.min, n2 = function(e10, t5) {
      return e10 < t5 ? -1 : e10 > t5 ? 1 : 0;
    }, u2 = function(e10, t5, i3, a3, o3) {
      var s3;
      if (null == i3 && (i3 = 0), null == o3 && (o3 = n2), i3 < 0)
        throw new Error("lo must be non-negative");
      for (null == a3 && (a3 = e10.length); i3 < a3; )
        o3(t5, e10[s3 = r2((i3 + a3) / 2)]) < 0 ? a3 = s3 : i3 = s3 + 1;
      return [].splice.apply(e10, [i3, i3 - i3].concat(t5)), t5;
    }, o2 = function(e10, t5, r3) {
      return null == r3 && (r3 = n2), e10.push(t5), f2(e10, 0, e10.length - 1, r3);
    }, a2 = function(e10, t5) {
      var r3, i3;
      return null == t5 && (t5 = n2), r3 = e10.pop(), e10.length ? (i3 = e10[0], e10[0] = r3, g2(e10, 0, t5)) : i3 = r3, i3;
    }, l2 = function(e10, t5, r3) {
      var i3;
      return null == r3 && (r3 = n2), i3 = e10[0], e10[0] = t5, g2(e10, 0, r3), i3;
    }, s2 = function(e10, t5, r3) {
      var i3;
      return null == r3 && (r3 = n2), e10.length && r3(e10[0], t5) < 0 && (t5 = (i3 = [e10[0], t5])[0], e10[0] = i3[1], g2(e10, 0, r3)), t5;
    }, i2 = function(e10, t5) {
      var i3, a3, o3, s3, l3, u3;
      for (null == t5 && (t5 = n2), l3 = [], a3 = 0, o3 = (s3 = function() {
        u3 = [];
        for (var t6 = 0, n3 = r2(e10.length / 2); 0 <= n3 ? t6 < n3 : t6 > n3; 0 <= n3 ? t6++ : t6--)
          u3.push(t6);
        return u3;
      }.apply(this).reverse()).length; a3 < o3; a3++)
        i3 = s3[a3], l3.push(g2(e10, i3, t5));
      return l3;
    }, p2 = function(e10, t5, r3) {
      var i3;
      if (null == r3 && (r3 = n2), -1 !== (i3 = e10.indexOf(t5)))
        return f2(e10, 0, i3, r3), g2(e10, i3, r3);
    }, d2 = function(e10, t5, r3) {
      var a3, o3, l3, u3, c3;
      if (null == r3 && (r3 = n2), !(o3 = e10.slice(0, t5)).length)
        return o3;
      for (i2(o3, r3), l3 = 0, u3 = (c3 = e10.slice(t5)).length; l3 < u3; l3++)
        a3 = c3[l3], s2(o3, a3, r3);
      return o3.sort(r3).reverse();
    }, h2 = function(e10, t5, r3) {
      var o3, s3, l3, d3, h3, p3, f3, g3, v2;
      if (null == r3 && (r3 = n2), 10 * t5 <= e10.length) {
        if (!(l3 = e10.slice(0, t5).sort(r3)).length)
          return l3;
        for (s3 = l3[l3.length - 1], d3 = 0, p3 = (f3 = e10.slice(t5)).length; d3 < p3; d3++)
          r3(o3 = f3[d3], s3) < 0 && (u2(l3, o3, 0, null, r3), l3.pop(), s3 = l3[l3.length - 1]);
        return l3;
      }
      for (i2(e10, r3), v2 = [], h3 = 0, g3 = c2(t5, e10.length); 0 <= g3 ? h3 < g3 : h3 > g3; 0 <= g3 ? ++h3 : --h3)
        v2.push(a2(e10, r3));
      return v2;
    }, f2 = function(e10, t5, r3, i3) {
      var a3, o3, s3;
      for (null == i3 && (i3 = n2), a3 = e10[r3]; r3 > t5 && i3(a3, o3 = e10[s3 = r3 - 1 >> 1]) < 0; )
        e10[r3] = o3, r3 = s3;
      return e10[r3] = a3;
    }, g2 = function(e10, t5, r3) {
      var i3, a3, o3, s3, l3;
      for (null == r3 && (r3 = n2), a3 = e10.length, l3 = t5, o3 = e10[t5], i3 = 2 * t5 + 1; i3 < a3; )
        (s3 = i3 + 1) < a3 && !(r3(e10[i3], e10[s3]) < 0) && (i3 = s3), e10[t5] = e10[i3], i3 = 2 * (t5 = i3) + 1;
      return e10[t5] = o3, f2(e10, l3, t5, r3);
    }, t4 = function() {
      function e10(e11) {
        this.cmp = null != e11 ? e11 : n2, this.nodes = [];
      }
      return e10.push = o2, e10.pop = a2, e10.replace = l2, e10.pushpop = s2, e10.heapify = i2, e10.updateItem = p2, e10.nlargest = d2, e10.nsmallest = h2, e10.prototype.push = function(e11) {
        return o2(this.nodes, e11, this.cmp);
      }, e10.prototype.pop = function() {
        return a2(this.nodes, this.cmp);
      }, e10.prototype.peek = function() {
        return this.nodes[0];
      }, e10.prototype.contains = function(e11) {
        return -1 !== this.nodes.indexOf(e11);
      }, e10.prototype.replace = function(e11) {
        return l2(this.nodes, e11, this.cmp);
      }, e10.prototype.pushpop = function(e11) {
        return s2(this.nodes, e11, this.cmp);
      }, e10.prototype.heapify = function() {
        return i2(this.nodes, this.cmp);
      }, e10.prototype.updateItem = function(e11) {
        return p2(this.nodes, e11, this.cmp);
      }, e10.prototype.clear = function() {
        return this.nodes = [];
      }, e10.prototype.empty = function() {
        return 0 === this.nodes.length;
      }, e10.prototype.size = function() {
        return this.nodes.length;
      }, e10.prototype.clone = function() {
        var t5;
        return (t5 = new e10()).nodes = this.nodes.slice(0), t5;
      }, e10.prototype.toArray = function() {
        return this.nodes.slice(0);
      }, e10.prototype.insert = e10.prototype.push, e10.prototype.top = e10.prototype.peek, e10.prototype.front = e10.prototype.peek, e10.prototype.has = e10.prototype.contains, e10.prototype.copy = e10.prototype.clone, e10;
    }(), e9.exports = t4;
  }).call(F);
});
var nt = Xe({ root: null, weight: function(e9) {
  return 1;
}, directed: false });
var rt = { dijkstra: function(e9) {
  if (!y(e9)) {
    var t3 = arguments;
    e9 = { root: t3[0], weight: t3[1], directed: t3[2] };
  }
  var n2 = nt(e9), r2 = n2.root, i2 = n2.weight, a2 = n2.directed, o2 = this, s2 = i2, l2 = f(r2) ? this.filter(r2)[0] : r2[0], u2 = {}, c2 = {}, d2 = {}, h2 = this.byGroup(), p2 = h2.nodes, g2 = h2.edges;
  g2.unmergeBy(function(e10) {
    return e10.isLoop();
  });
  for (var v2 = function(e10) {
    return u2[e10.id()];
  }, m2 = function(e10, t4) {
    u2[e10.id()] = t4, b2.updateItem(e10);
  }, b2 = new tt(function(e10, t4) {
    return v2(e10) - v2(t4);
  }), x2 = 0; x2 < p2.length; x2++) {
    var w2 = p2[x2];
    u2[w2.id()] = w2.same(l2) ? 0 : 1 / 0, b2.push(w2);
  }
  for (var E2 = function(e10, t4) {
    for (var n3, r3 = (a2 ? e10.edgesTo(t4) : e10.edgesWith(t4)).intersect(g2), i3 = 1 / 0, o3 = 0; o3 < r3.length; o3++) {
      var l3 = r3[o3], u3 = s2(l3);
      (u3 < i3 || !n3) && (i3 = u3, n3 = l3);
    }
    return { edge: n3, dist: i3 };
  }; b2.size() > 0; ) {
    var k2 = b2.pop(), C2 = v2(k2), S2 = k2.id();
    if (d2[S2] = C2, C2 !== 1 / 0)
      for (var P2 = k2.neighborhood().intersect(p2), D2 = 0; D2 < P2.length; D2++) {
        var T2 = P2[D2], _2 = T2.id(), M2 = E2(k2, T2), B2 = C2 + M2.dist;
        B2 < v2(T2) && (m2(T2, B2), c2[_2] = { node: k2, edge: M2.edge });
      }
  }
  return { distanceTo: function(e10) {
    var t4 = f(e10) ? p2.filter(e10)[0] : e10[0];
    return d2[t4.id()];
  }, pathTo: function(e10) {
    var t4 = f(e10) ? p2.filter(e10)[0] : e10[0], n3 = [], r3 = t4, i3 = r3.id();
    if (t4.length > 0)
      for (n3.unshift(t4); c2[i3]; ) {
        var a3 = c2[i3];
        n3.unshift(a3.edge), n3.unshift(a3.node), i3 = (r3 = a3.node).id();
      }
    return o2.spawn(n3);
  } };
} };
var it = { kruskal: function(e9) {
  e9 = e9 || function(e10) {
    return 1;
  };
  for (var t3 = this.byGroup(), n2 = t3.nodes, r2 = t3.edges, i2 = n2.length, a2 = new Array(i2), o2 = n2, s2 = function(e10) {
    for (var t4 = 0; t4 < a2.length; t4++) {
      if (a2[t4].has(e10))
        return t4;
    }
  }, l2 = 0; l2 < i2; l2++)
    a2[l2] = this.spawn(n2[l2]);
  for (var u2 = r2.sort(function(t4, n3) {
    return e9(t4) - e9(n3);
  }), c2 = 0; c2 < u2.length; c2++) {
    var d2 = u2[c2], h2 = d2.source()[0], p2 = d2.target()[0], f2 = s2(h2), g2 = s2(p2), v2 = a2[f2], y2 = a2[g2];
    f2 !== g2 && (o2.merge(d2), v2.merge(y2), a2.splice(g2, 1));
  }
  return o2;
} };
var at = Xe({ root: null, goal: null, weight: function(e9) {
  return 1;
}, heuristic: function(e9) {
  return 0;
}, directed: false });
var ot = { aStar: function(e9) {
  var t3 = this.cy(), n2 = at(e9), r2 = n2.root, i2 = n2.goal, a2 = n2.heuristic, o2 = n2.directed, s2 = n2.weight;
  r2 = t3.collection(r2)[0], i2 = t3.collection(i2)[0];
  var l2, u2, c2 = r2.id(), d2 = i2.id(), h2 = {}, p2 = {}, f2 = {}, g2 = new tt(function(e10, t4) {
    return p2[e10.id()] - p2[t4.id()];
  }), v2 = new $e(), y2 = {}, m2 = {}, b2 = function(e10, t4) {
    g2.push(e10), v2.add(t4);
  };
  b2(r2, c2), h2[c2] = 0, p2[c2] = a2(r2);
  for (var x2, w2 = 0; g2.size() > 0; ) {
    if (l2 = g2.pop(), u2 = l2.id(), v2.delete(u2), w2++, u2 === d2) {
      for (var E2 = [], k2 = i2, C2 = d2, S2 = m2[C2]; E2.unshift(k2), null != S2 && E2.unshift(S2), null != (k2 = y2[C2]); )
        S2 = m2[C2 = k2.id()];
      return { found: true, distance: h2[u2], path: this.spawn(E2), steps: w2 };
    }
    f2[u2] = true;
    for (var P2 = l2._private.edges, D2 = 0; D2 < P2.length; D2++) {
      var T2 = P2[D2];
      if (this.hasElementWithId(T2.id()) && (!o2 || T2.data("source") === u2)) {
        var _2 = T2.source(), M2 = T2.target(), B2 = _2.id() !== u2 ? _2 : M2, N2 = B2.id();
        if (this.hasElementWithId(N2) && !f2[N2]) {
          var z2 = h2[u2] + s2(T2);
          x2 = N2, v2.has(x2) ? z2 < h2[N2] && (h2[N2] = z2, p2[N2] = z2 + a2(B2), y2[N2] = l2, m2[N2] = T2) : (h2[N2] = z2, p2[N2] = z2 + a2(B2), b2(B2, N2), y2[N2] = l2, m2[N2] = T2);
        }
      }
    }
  }
  return { found: false, distance: void 0, path: void 0, steps: w2 };
} };
var st = Xe({ weight: function(e9) {
  return 1;
}, directed: false });
var lt = { floydWarshall: function(e9) {
  for (var t3 = this.cy(), n2 = st(e9), r2 = n2.weight, i2 = n2.directed, a2 = r2, o2 = this.byGroup(), s2 = o2.nodes, l2 = o2.edges, u2 = s2.length, c2 = u2 * u2, d2 = function(e10) {
    return s2.indexOf(e10);
  }, h2 = function(e10) {
    return s2[e10];
  }, p2 = new Array(c2), g2 = 0; g2 < c2; g2++) {
    var v2 = g2 % u2, y2 = (g2 - v2) / u2;
    p2[g2] = y2 === v2 ? 0 : 1 / 0;
  }
  for (var m2 = new Array(c2), b2 = new Array(c2), x2 = 0; x2 < l2.length; x2++) {
    var w2 = l2[x2], E2 = w2.source()[0], k2 = w2.target()[0];
    if (E2 !== k2) {
      var C2 = d2(E2), S2 = d2(k2), P2 = C2 * u2 + S2, D2 = a2(w2);
      if (p2[P2] > D2 && (p2[P2] = D2, m2[P2] = S2, b2[P2] = w2), !i2) {
        var T2 = S2 * u2 + C2;
        !i2 && p2[T2] > D2 && (p2[T2] = D2, m2[T2] = C2, b2[T2] = w2);
      }
    }
  }
  for (var _2 = 0; _2 < u2; _2++)
    for (var M2 = 0; M2 < u2; M2++)
      for (var B2 = M2 * u2 + _2, N2 = 0; N2 < u2; N2++) {
        var z2 = M2 * u2 + N2, I2 = _2 * u2 + N2;
        p2[B2] + p2[I2] < p2[z2] && (p2[z2] = p2[B2] + p2[I2], m2[z2] = m2[B2]);
      }
  var A2 = function(e10) {
    return d2(function(e11) {
      return (f(e11) ? t3.filter(e11) : e11)[0];
    }(e10));
  };
  return { distance: function(e10, t4) {
    var n3 = A2(e10), r3 = A2(t4);
    return p2[n3 * u2 + r3];
  }, path: function(e10, n3) {
    var r3 = A2(e10), i3 = A2(n3), a3 = h2(r3);
    if (r3 === i3)
      return a3.collection();
    if (null == m2[r3 * u2 + i3])
      return t3.collection();
    var o3, s3 = t3.collection(), l3 = r3;
    for (s3.merge(a3); r3 !== i3; )
      l3 = r3, r3 = m2[r3 * u2 + i3], o3 = b2[l3 * u2 + r3], s3.merge(o3), s3.merge(h2(r3));
    return s3;
  } };
} };
var ut = Xe({ weight: function(e9) {
  return 1;
}, directed: false, root: null });
var ct = { bellmanFord: function(e9) {
  var t3 = this, n2 = ut(e9), r2 = n2.weight, i2 = n2.directed, a2 = n2.root, o2 = r2, s2 = this, l2 = this.cy(), u2 = this.byGroup(), c2 = u2.edges, d2 = u2.nodes, h2 = d2.length, p2 = new Ue(), g2 = false, v2 = [];
  a2 = l2.collection(a2)[0], c2.unmergeBy(function(e10) {
    return e10.isLoop();
  });
  for (var y2 = c2.length, m2 = function(e10) {
    var t4 = p2.get(e10.id());
    return t4 || (t4 = {}, p2.set(e10.id(), t4)), t4;
  }, b2 = function(e10) {
    return (f(e10) ? l2.$(e10) : e10)[0];
  }, x2 = 0; x2 < h2; x2++) {
    var w2 = d2[x2], E2 = m2(w2);
    w2.same(a2) ? E2.dist = 0 : E2.dist = 1 / 0, E2.pred = null, E2.edge = null;
  }
  for (var k2 = false, C2 = function(e10, t4, n3, r3, i3, a3) {
    var o3 = r3.dist + a3;
    o3 < i3.dist && !n3.same(r3.edge) && (i3.dist = o3, i3.pred = e10, i3.edge = n3, k2 = true);
  }, S2 = 1; S2 < h2; S2++) {
    k2 = false;
    for (var P2 = 0; P2 < y2; P2++) {
      var D2 = c2[P2], T2 = D2.source(), _2 = D2.target(), M2 = o2(D2), B2 = m2(T2), N2 = m2(_2);
      C2(T2, 0, D2, B2, N2, M2), i2 || C2(_2, 0, D2, N2, B2, M2);
    }
    if (!k2)
      break;
  }
  if (k2)
    for (var z2 = [], I2 = 0; I2 < y2; I2++) {
      var A2 = c2[I2], L2 = A2.source(), O2 = A2.target(), R2 = o2(A2), V2 = m2(L2).dist, F2 = m2(O2).dist;
      if (V2 + R2 < F2 || !i2 && F2 + R2 < V2) {
        if (g2 || (Ve("Graph contains a negative weight cycle for Bellman-Ford"), g2 = true), false === e9.findNegativeWeightCycles)
          break;
        var j2 = [];
        V2 + R2 < F2 && j2.push(L2), !i2 && F2 + R2 < V2 && j2.push(O2);
        for (var q2 = j2.length, Y2 = 0; Y2 < q2; Y2++) {
          var X2 = j2[Y2], W2 = [X2];
          W2.push(m2(X2).edge);
          for (var H2 = m2(X2).pred; -1 === W2.indexOf(H2); )
            W2.push(H2), W2.push(m2(H2).edge), H2 = m2(H2).pred;
          for (var K2 = (W2 = W2.slice(W2.indexOf(H2)))[0].id(), G2 = 0, U2 = 2; U2 < W2.length; U2 += 2)
            W2[U2].id() < K2 && (K2 = W2[U2].id(), G2 = U2);
          (W2 = W2.slice(G2).concat(W2.slice(0, G2))).push(W2[0]);
          var Z2 = W2.map(function(e10) {
            return e10.id();
          }).join(",");
          -1 === z2.indexOf(Z2) && (v2.push(s2.spawn(W2)), z2.push(Z2));
        }
      }
    }
  return { distanceTo: function(e10) {
    return m2(b2(e10)).dist;
  }, pathTo: function(e10) {
    for (var n3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : a2, r3 = b2(e10), i3 = [], o3 = r3; ; ) {
      if (null == o3)
        return t3.spawn();
      var l3 = m2(o3), u3 = l3.edge, c3 = l3.pred;
      if (i3.unshift(o3[0]), o3.same(n3) && i3.length > 0)
        break;
      null != u3 && i3.unshift(u3), o3 = c3;
    }
    return s2.spawn(i3);
  }, hasNegativeWeightCycle: g2, negativeWeightCycles: v2 };
} };
var dt = Math.sqrt(2);
var ht = function(e9, t3, n2) {
  0 === n2.length && Oe("Karger-Stein must be run on a connected (sub)graph");
  for (var r2 = n2[e9], i2 = r2[1], a2 = r2[2], o2 = t3[i2], s2 = t3[a2], l2 = n2, u2 = l2.length - 1; u2 >= 0; u2--) {
    var c2 = l2[u2], d2 = c2[1], h2 = c2[2];
    (t3[d2] === o2 && t3[h2] === s2 || t3[d2] === s2 && t3[h2] === o2) && l2.splice(u2, 1);
  }
  for (var p2 = 0; p2 < l2.length; p2++) {
    var f2 = l2[p2];
    f2[1] === s2 ? (l2[p2] = f2.slice(), l2[p2][1] = o2) : f2[2] === s2 && (l2[p2] = f2.slice(), l2[p2][2] = o2);
  }
  for (var g2 = 0; g2 < t3.length; g2++)
    t3[g2] === s2 && (t3[g2] = o2);
  return l2;
};
var pt = function(e9, t3, n2, r2) {
  for (; n2 > r2; ) {
    var i2 = Math.floor(Math.random() * t3.length);
    t3 = ht(i2, e9, t3), n2--;
  }
  return t3;
};
var ft = { kargerStein: function() {
  var e9 = this, t3 = this.byGroup(), n2 = t3.nodes, r2 = t3.edges;
  r2.unmergeBy(function(e10) {
    return e10.isLoop();
  });
  var i2 = n2.length, a2 = r2.length, o2 = Math.ceil(Math.pow(Math.log(i2) / Math.LN2, 2)), s2 = Math.floor(i2 / dt);
  if (!(i2 < 2)) {
    for (var l2 = [], u2 = 0; u2 < a2; u2++) {
      var c2 = r2[u2];
      l2.push([u2, n2.indexOf(c2.source()), n2.indexOf(c2.target())]);
    }
    for (var d2 = 1 / 0, h2 = [], p2 = new Array(i2), f2 = new Array(i2), g2 = new Array(i2), v2 = function(e10, t4) {
      for (var n3 = 0; n3 < i2; n3++)
        t4[n3] = e10[n3];
    }, y2 = 0; y2 <= o2; y2++) {
      for (var m2 = 0; m2 < i2; m2++)
        f2[m2] = m2;
      var b2 = pt(f2, l2.slice(), i2, s2), x2 = b2.slice();
      v2(f2, g2);
      var w2 = pt(f2, b2, s2, 2), E2 = pt(g2, x2, s2, 2);
      w2.length <= E2.length && w2.length < d2 ? (d2 = w2.length, h2 = w2, v2(f2, p2)) : E2.length <= w2.length && E2.length < d2 && (d2 = E2.length, h2 = E2, v2(g2, p2));
    }
    for (var k2 = this.spawn(h2.map(function(e10) {
      return r2[e10[0]];
    })), C2 = this.spawn(), S2 = this.spawn(), P2 = p2[0], D2 = 0; D2 < p2.length; D2++) {
      var T2 = p2[D2], _2 = n2[D2];
      T2 === P2 ? C2.merge(_2) : S2.merge(_2);
    }
    var M2 = function(t4) {
      var n3 = e9.spawn();
      return t4.forEach(function(t5) {
        n3.merge(t5), t5.connectedEdges().forEach(function(t6) {
          e9.contains(t6) && !k2.contains(t6) && n3.merge(t6);
        });
      }), n3;
    }, B2 = [M2(C2), M2(S2)];
    return { cut: k2, components: B2, partition1: C2, partition2: S2 };
  }
  Oe("At least 2 nodes are required for Karger-Stein algorithm");
} };
var gt = function(e9, t3, n2) {
  return { x: e9.x * t3 + n2.x, y: e9.y * t3 + n2.y };
};
var vt = function(e9, t3, n2) {
  return { x: (e9.x - n2.x) / t3, y: (e9.y - n2.y) / t3 };
};
var yt = function(e9) {
  return { x: e9[0], y: e9[1] };
};
var mt = function(e9, t3) {
  return Math.atan2(t3, e9) - Math.PI / 2;
};
var bt = Math.log2 || function(e9) {
  return Math.log(e9) / Math.log(2);
};
var xt = function(e9) {
  return e9 > 0 ? 1 : e9 < 0 ? -1 : 0;
};
var wt = function(e9, t3) {
  return Math.sqrt(Et(e9, t3));
};
var Et = function(e9, t3) {
  var n2 = t3.x - e9.x, r2 = t3.y - e9.y;
  return n2 * n2 + r2 * r2;
};
var kt = function(e9) {
  for (var t3 = e9.length, n2 = 0, r2 = 0; r2 < t3; r2++)
    n2 += e9[r2];
  for (var i2 = 0; i2 < t3; i2++)
    e9[i2] = e9[i2] / n2;
  return e9;
};
var Ct = function(e9, t3, n2, r2) {
  return (1 - r2) * (1 - r2) * e9 + 2 * (1 - r2) * r2 * t3 + r2 * r2 * n2;
};
var St = function(e9, t3, n2, r2) {
  return { x: Ct(e9.x, t3.x, n2.x, r2), y: Ct(e9.y, t3.y, n2.y, r2) };
};
var Pt = function(e9, t3, n2) {
  return Math.max(e9, Math.min(n2, t3));
};
var Dt = function(e9) {
  if (null == e9)
    return { x1: 1 / 0, y1: 1 / 0, x2: -1 / 0, y2: -1 / 0, w: 0, h: 0 };
  if (null != e9.x1 && null != e9.y1) {
    if (null != e9.x2 && null != e9.y2 && e9.x2 >= e9.x1 && e9.y2 >= e9.y1)
      return { x1: e9.x1, y1: e9.y1, x2: e9.x2, y2: e9.y2, w: e9.x2 - e9.x1, h: e9.y2 - e9.y1 };
    if (null != e9.w && null != e9.h && e9.w >= 0 && e9.h >= 0)
      return { x1: e9.x1, y1: e9.y1, x2: e9.x1 + e9.w, y2: e9.y1 + e9.h, w: e9.w, h: e9.h };
  }
};
var Tt = function(e9, t3, n2) {
  e9.x1 = Math.min(e9.x1, t3), e9.x2 = Math.max(e9.x2, t3), e9.w = e9.x2 - e9.x1, e9.y1 = Math.min(e9.y1, n2), e9.y2 = Math.max(e9.y2, n2), e9.h = e9.y2 - e9.y1;
};
var _t = function(e9) {
  var t3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
  return e9.x1 -= t3, e9.x2 += t3, e9.y1 -= t3, e9.y2 += t3, e9.w = e9.x2 - e9.x1, e9.h = e9.y2 - e9.y1, e9;
};
var Mt = function(e9) {
  var t3, n2, r2, i2, o2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [0];
  if (1 === o2.length)
    t3 = n2 = r2 = i2 = o2[0];
  else if (2 === o2.length)
    t3 = r2 = o2[0], i2 = n2 = o2[1];
  else if (4 === o2.length) {
    var s2 = a(o2, 4);
    t3 = s2[0], n2 = s2[1], r2 = s2[2], i2 = s2[3];
  }
  return e9.x1 -= i2, e9.x2 += n2, e9.y1 -= t3, e9.y2 += r2, e9.w = e9.x2 - e9.x1, e9.h = e9.y2 - e9.y1, e9;
};
var Bt = function(e9, t3) {
  e9.x1 = t3.x1, e9.y1 = t3.y1, e9.x2 = t3.x2, e9.y2 = t3.y2, e9.w = e9.x2 - e9.x1, e9.h = e9.y2 - e9.y1;
};
var Nt = function(e9, t3) {
  return !(e9.x1 > t3.x2) && (!(t3.x1 > e9.x2) && (!(e9.x2 < t3.x1) && (!(t3.x2 < e9.x1) && (!(e9.y2 < t3.y1) && (!(t3.y2 < e9.y1) && (!(e9.y1 > t3.y2) && !(t3.y1 > e9.y2)))))));
};
var zt = function(e9, t3, n2) {
  return e9.x1 <= t3 && t3 <= e9.x2 && e9.y1 <= n2 && n2 <= e9.y2;
};
var It = function(e9, t3) {
  return zt(e9, t3.x1, t3.y1) && zt(e9, t3.x2, t3.y2);
};
var At = function(e9, t3, n2, r2, i2, a2, o2) {
  var s2, l2 = Jt(i2, a2), u2 = i2 / 2, c2 = a2 / 2, d2 = r2 - c2 - o2;
  if ((s2 = Kt(e9, t3, n2, r2, n2 - u2 + l2 - o2, d2, n2 + u2 - l2 + o2, d2, false)).length > 0)
    return s2;
  var h2 = n2 + u2 + o2;
  if ((s2 = Kt(e9, t3, n2, r2, h2, r2 - c2 + l2 - o2, h2, r2 + c2 - l2 + o2, false)).length > 0)
    return s2;
  var p2 = r2 + c2 + o2;
  if ((s2 = Kt(e9, t3, n2, r2, n2 - u2 + l2 - o2, p2, n2 + u2 - l2 + o2, p2, false)).length > 0)
    return s2;
  var f2, g2 = n2 - u2 - o2;
  if ((s2 = Kt(e9, t3, n2, r2, g2, r2 - c2 + l2 - o2, g2, r2 + c2 - l2 + o2, false)).length > 0)
    return s2;
  var v2 = n2 - u2 + l2, y2 = r2 - c2 + l2;
  if ((f2 = Wt(e9, t3, n2, r2, v2, y2, l2 + o2)).length > 0 && f2[0] <= v2 && f2[1] <= y2)
    return [f2[0], f2[1]];
  var m2 = n2 + u2 - l2, b2 = r2 - c2 + l2;
  if ((f2 = Wt(e9, t3, n2, r2, m2, b2, l2 + o2)).length > 0 && f2[0] >= m2 && f2[1] <= b2)
    return [f2[0], f2[1]];
  var x2 = n2 + u2 - l2, w2 = r2 + c2 - l2;
  if ((f2 = Wt(e9, t3, n2, r2, x2, w2, l2 + o2)).length > 0 && f2[0] >= x2 && f2[1] >= w2)
    return [f2[0], f2[1]];
  var E2 = n2 - u2 + l2, k2 = r2 + c2 - l2;
  return (f2 = Wt(e9, t3, n2, r2, E2, k2, l2 + o2)).length > 0 && f2[0] <= E2 && f2[1] >= k2 ? [f2[0], f2[1]] : [];
};
var Lt = function(e9, t3, n2, r2, i2, a2, o2) {
  var s2 = o2, l2 = Math.min(n2, i2), u2 = Math.max(n2, i2), c2 = Math.min(r2, a2), d2 = Math.max(r2, a2);
  return l2 - s2 <= e9 && e9 <= u2 + s2 && c2 - s2 <= t3 && t3 <= d2 + s2;
};
var Ot = function(e9, t3, n2, r2, i2, a2, o2, s2, l2) {
  var u2 = Math.min(n2, o2, i2) - l2, c2 = Math.max(n2, o2, i2) + l2, d2 = Math.min(r2, s2, a2) - l2, h2 = Math.max(r2, s2, a2) + l2;
  return !(e9 < u2 || e9 > c2 || t3 < d2 || t3 > h2);
};
var Rt = function(e9, t3, n2, r2, i2, a2, o2, s2) {
  var l2 = [];
  !function(e10, t4, n3, r3, i3) {
    var a3, o3, s3, l3, u3, c3, d3, h3;
    0 === e10 && (e10 = 1e-5), s3 = -27 * (r3 /= e10) + (t4 /= e10) * (9 * (n3 /= e10) - t4 * t4 * 2), a3 = (o3 = (3 * n3 - t4 * t4) / 9) * o3 * o3 + (s3 /= 54) * s3, i3[1] = 0, d3 = t4 / 3, a3 > 0 ? (u3 = (u3 = s3 + Math.sqrt(a3)) < 0 ? -Math.pow(-u3, 1 / 3) : Math.pow(u3, 1 / 3), c3 = (c3 = s3 - Math.sqrt(a3)) < 0 ? -Math.pow(-c3, 1 / 3) : Math.pow(c3, 1 / 3), i3[0] = -d3 + u3 + c3, d3 += (u3 + c3) / 2, i3[4] = i3[2] = -d3, d3 = Math.sqrt(3) * (-c3 + u3) / 2, i3[3] = d3, i3[5] = -d3) : (i3[5] = i3[3] = 0, 0 === a3 ? (h3 = s3 < 0 ? -Math.pow(-s3, 1 / 3) : Math.pow(s3, 1 / 3), i3[0] = 2 * h3 - d3, i3[4] = i3[2] = -(h3 + d3)) : (l3 = (o3 = -o3) * o3 * o3, l3 = Math.acos(s3 / Math.sqrt(l3)), h3 = 2 * Math.sqrt(o3), i3[0] = -d3 + h3 * Math.cos(l3 / 3), i3[2] = -d3 + h3 * Math.cos((l3 + 2 * Math.PI) / 3), i3[4] = -d3 + h3 * Math.cos((l3 + 4 * Math.PI) / 3)));
  }(1 * n2 * n2 - 4 * n2 * i2 + 2 * n2 * o2 + 4 * i2 * i2 - 4 * i2 * o2 + o2 * o2 + r2 * r2 - 4 * r2 * a2 + 2 * r2 * s2 + 4 * a2 * a2 - 4 * a2 * s2 + s2 * s2, 9 * n2 * i2 - 3 * n2 * n2 - 3 * n2 * o2 - 6 * i2 * i2 + 3 * i2 * o2 + 9 * r2 * a2 - 3 * r2 * r2 - 3 * r2 * s2 - 6 * a2 * a2 + 3 * a2 * s2, 3 * n2 * n2 - 6 * n2 * i2 + n2 * o2 - n2 * e9 + 2 * i2 * i2 + 2 * i2 * e9 - o2 * e9 + 3 * r2 * r2 - 6 * r2 * a2 + r2 * s2 - r2 * t3 + 2 * a2 * a2 + 2 * a2 * t3 - s2 * t3, 1 * n2 * i2 - n2 * n2 + n2 * e9 - i2 * e9 + r2 * a2 - r2 * r2 + r2 * t3 - a2 * t3, l2);
  for (var u2 = [], c2 = 0; c2 < 6; c2 += 2)
    Math.abs(l2[c2 + 1]) < 1e-7 && l2[c2] >= 0 && l2[c2] <= 1 && u2.push(l2[c2]);
  u2.push(1), u2.push(0);
  for (var d2, h2, p2, f2 = -1, g2 = 0; g2 < u2.length; g2++)
    d2 = Math.pow(1 - u2[g2], 2) * n2 + 2 * (1 - u2[g2]) * u2[g2] * i2 + u2[g2] * u2[g2] * o2, h2 = Math.pow(1 - u2[g2], 2) * r2 + 2 * (1 - u2[g2]) * u2[g2] * a2 + u2[g2] * u2[g2] * s2, p2 = Math.pow(d2 - e9, 2) + Math.pow(h2 - t3, 2), f2 >= 0 ? p2 < f2 && (f2 = p2) : f2 = p2;
  return f2;
};
var Vt = function(e9, t3, n2, r2, i2, a2) {
  var o2 = [e9 - n2, t3 - r2], s2 = [i2 - n2, a2 - r2], l2 = s2[0] * s2[0] + s2[1] * s2[1], u2 = o2[0] * o2[0] + o2[1] * o2[1], c2 = o2[0] * s2[0] + o2[1] * s2[1], d2 = c2 * c2 / l2;
  return c2 < 0 ? u2 : d2 > l2 ? (e9 - i2) * (e9 - i2) + (t3 - a2) * (t3 - a2) : u2 - d2;
};
var Ft = function(e9, t3, n2) {
  for (var r2, i2, a2, o2, s2 = 0, l2 = 0; l2 < n2.length / 2; l2++)
    if (r2 = n2[2 * l2], i2 = n2[2 * l2 + 1], l2 + 1 < n2.length / 2 ? (a2 = n2[2 * (l2 + 1)], o2 = n2[2 * (l2 + 1) + 1]) : (a2 = n2[2 * (l2 + 1 - n2.length / 2)], o2 = n2[2 * (l2 + 1 - n2.length / 2) + 1]), r2 == e9 && a2 == e9)
      ;
    else {
      if (!(r2 >= e9 && e9 >= a2 || r2 <= e9 && e9 <= a2))
        continue;
      (e9 - r2) / (a2 - r2) * (o2 - i2) + i2 > t3 && s2++;
    }
  return s2 % 2 != 0;
};
var jt = function(e9, t3, n2, r2, i2, a2, o2, s2, l2) {
  var u2, c2 = new Array(n2.length);
  null != s2[0] ? (u2 = Math.atan(s2[1] / s2[0]), s2[0] < 0 ? u2 += Math.PI / 2 : u2 = -u2 - Math.PI / 2) : u2 = s2;
  for (var d2, h2 = Math.cos(-u2), p2 = Math.sin(-u2), f2 = 0; f2 < c2.length / 2; f2++)
    c2[2 * f2] = a2 / 2 * (n2[2 * f2] * h2 - n2[2 * f2 + 1] * p2), c2[2 * f2 + 1] = o2 / 2 * (n2[2 * f2 + 1] * h2 + n2[2 * f2] * p2), c2[2 * f2] += r2, c2[2 * f2 + 1] += i2;
  if (l2 > 0) {
    var g2 = Yt(c2, -l2);
    d2 = qt(g2);
  } else
    d2 = c2;
  return Ft(e9, t3, d2);
};
var qt = function(e9) {
  for (var t3, n2, r2, i2, a2, o2, s2, l2, u2 = new Array(e9.length / 2), c2 = 0; c2 < e9.length / 4; c2++) {
    t3 = e9[4 * c2], n2 = e9[4 * c2 + 1], r2 = e9[4 * c2 + 2], i2 = e9[4 * c2 + 3], c2 < e9.length / 4 - 1 ? (a2 = e9[4 * (c2 + 1)], o2 = e9[4 * (c2 + 1) + 1], s2 = e9[4 * (c2 + 1) + 2], l2 = e9[4 * (c2 + 1) + 3]) : (a2 = e9[0], o2 = e9[1], s2 = e9[2], l2 = e9[3]);
    var d2 = Kt(t3, n2, r2, i2, a2, o2, s2, l2, true);
    u2[2 * c2] = d2[0], u2[2 * c2 + 1] = d2[1];
  }
  return u2;
};
var Yt = function(e9, t3) {
  for (var n2, r2, i2, a2, o2 = new Array(2 * e9.length), s2 = 0; s2 < e9.length / 2; s2++) {
    n2 = e9[2 * s2], r2 = e9[2 * s2 + 1], s2 < e9.length / 2 - 1 ? (i2 = e9[2 * (s2 + 1)], a2 = e9[2 * (s2 + 1) + 1]) : (i2 = e9[0], a2 = e9[1]);
    var l2 = a2 - r2, u2 = -(i2 - n2), c2 = Math.sqrt(l2 * l2 + u2 * u2), d2 = l2 / c2, h2 = u2 / c2;
    o2[4 * s2] = n2 + d2 * t3, o2[4 * s2 + 1] = r2 + h2 * t3, o2[4 * s2 + 2] = i2 + d2 * t3, o2[4 * s2 + 3] = a2 + h2 * t3;
  }
  return o2;
};
var Xt = function(e9, t3, n2, r2, i2, a2, o2) {
  return e9 -= i2, t3 -= a2, (e9 /= n2 / 2 + o2) * e9 + (t3 /= r2 / 2 + o2) * t3 <= 1;
};
var Wt = function(e9, t3, n2, r2, i2, a2, o2) {
  var s2 = [n2 - e9, r2 - t3], l2 = [e9 - i2, t3 - a2], u2 = s2[0] * s2[0] + s2[1] * s2[1], c2 = 2 * (l2[0] * s2[0] + l2[1] * s2[1]), d2 = c2 * c2 - 4 * u2 * (l2[0] * l2[0] + l2[1] * l2[1] - o2 * o2);
  if (d2 < 0)
    return [];
  var h2 = (-c2 + Math.sqrt(d2)) / (2 * u2), p2 = (-c2 - Math.sqrt(d2)) / (2 * u2), f2 = Math.min(h2, p2), g2 = Math.max(h2, p2), v2 = [];
  if (f2 >= 0 && f2 <= 1 && v2.push(f2), g2 >= 0 && g2 <= 1 && v2.push(g2), 0 === v2.length)
    return [];
  var y2 = v2[0] * s2[0] + e9, m2 = v2[0] * s2[1] + t3;
  return v2.length > 1 ? v2[0] == v2[1] ? [y2, m2] : [y2, m2, v2[1] * s2[0] + e9, v2[1] * s2[1] + t3] : [y2, m2];
};
var Ht = function(e9, t3, n2) {
  return t3 <= e9 && e9 <= n2 || n2 <= e9 && e9 <= t3 ? e9 : e9 <= t3 && t3 <= n2 || n2 <= t3 && t3 <= e9 ? t3 : n2;
};
var Kt = function(e9, t3, n2, r2, i2, a2, o2, s2, l2) {
  var u2 = e9 - i2, c2 = n2 - e9, d2 = o2 - i2, h2 = t3 - a2, p2 = r2 - t3, f2 = s2 - a2, g2 = d2 * h2 - f2 * u2, v2 = c2 * h2 - p2 * u2, y2 = f2 * c2 - d2 * p2;
  if (0 !== y2) {
    var m2 = g2 / y2, b2 = v2 / y2;
    return -1e-3 <= m2 && m2 <= 1.001 && -1e-3 <= b2 && b2 <= 1.001 || l2 ? [e9 + m2 * c2, t3 + m2 * p2] : [];
  }
  return 0 === g2 || 0 === v2 ? Ht(e9, n2, o2) === o2 ? [o2, s2] : Ht(e9, n2, i2) === i2 ? [i2, a2] : Ht(i2, o2, n2) === n2 ? [n2, r2] : [] : [];
};
var Gt = function(e9, t3, n2, r2, i2, a2, o2, s2) {
  var l2, u2, c2, d2, h2, p2, f2 = [], g2 = new Array(n2.length), v2 = true;
  if (null == a2 && (v2 = false), v2) {
    for (var y2 = 0; y2 < g2.length / 2; y2++)
      g2[2 * y2] = n2[2 * y2] * a2 + r2, g2[2 * y2 + 1] = n2[2 * y2 + 1] * o2 + i2;
    if (s2 > 0) {
      var m2 = Yt(g2, -s2);
      u2 = qt(m2);
    } else
      u2 = g2;
  } else
    u2 = n2;
  for (var b2 = 0; b2 < u2.length / 2; b2++)
    c2 = u2[2 * b2], d2 = u2[2 * b2 + 1], b2 < u2.length / 2 - 1 ? (h2 = u2[2 * (b2 + 1)], p2 = u2[2 * (b2 + 1) + 1]) : (h2 = u2[0], p2 = u2[1]), 0 !== (l2 = Kt(e9, t3, r2, i2, c2, d2, h2, p2)).length && f2.push(l2[0], l2[1]);
  return f2;
};
var Ut = function(e9, t3, n2) {
  var r2 = [e9[0] - t3[0], e9[1] - t3[1]], i2 = Math.sqrt(r2[0] * r2[0] + r2[1] * r2[1]), a2 = (i2 - n2) / i2;
  return a2 < 0 && (a2 = 1e-5), [t3[0] + a2 * r2[0], t3[1] + a2 * r2[1]];
};
var Zt = function(e9, t3) {
  var n2 = Qt(e9, t3);
  return n2 = $t(n2);
};
var $t = function(e9) {
  for (var t3, n2, r2 = e9.length / 2, i2 = 1 / 0, a2 = 1 / 0, o2 = -1 / 0, s2 = -1 / 0, l2 = 0; l2 < r2; l2++)
    t3 = e9[2 * l2], n2 = e9[2 * l2 + 1], i2 = Math.min(i2, t3), o2 = Math.max(o2, t3), a2 = Math.min(a2, n2), s2 = Math.max(s2, n2);
  for (var u2 = 2 / (o2 - i2), c2 = 2 / (s2 - a2), d2 = 0; d2 < r2; d2++)
    t3 = e9[2 * d2] = e9[2 * d2] * u2, n2 = e9[2 * d2 + 1] = e9[2 * d2 + 1] * c2, i2 = Math.min(i2, t3), o2 = Math.max(o2, t3), a2 = Math.min(a2, n2), s2 = Math.max(s2, n2);
  if (a2 < -1)
    for (var h2 = 0; h2 < r2; h2++)
      n2 = e9[2 * h2 + 1] = e9[2 * h2 + 1] + (-1 - a2);
  return e9;
};
var Qt = function(e9, t3) {
  var n2 = 1 / e9 * 2 * Math.PI, r2 = e9 % 2 == 0 ? Math.PI / 2 + n2 / 2 : Math.PI / 2;
  r2 += t3;
  for (var i2, a2 = new Array(2 * e9), o2 = 0; o2 < e9; o2++)
    i2 = o2 * n2 + r2, a2[2 * o2] = Math.cos(i2), a2[2 * o2 + 1] = Math.sin(-i2);
  return a2;
};
var Jt = function(e9, t3) {
  return Math.min(e9 / 4, t3 / 4, 8);
};
var en = function(e9, t3) {
  return Math.min(e9 / 10, t3 / 10, 8);
};
var tn = function(e9, t3) {
  return { heightOffset: Math.min(15, 0.05 * t3), widthOffset: Math.min(100, 0.25 * e9), ctrlPtOffsetPct: 0.05 };
};
var nn = Xe({ dampingFactor: 0.8, precision: 1e-6, iterations: 200, weight: function(e9) {
  return 1;
} });
var rn = { pageRank: function(e9) {
  for (var t3 = nn(e9), n2 = t3.dampingFactor, r2 = t3.precision, i2 = t3.iterations, a2 = t3.weight, o2 = this._private.cy, s2 = this.byGroup(), l2 = s2.nodes, u2 = s2.edges, c2 = l2.length, d2 = c2 * c2, h2 = u2.length, p2 = new Array(d2), f2 = new Array(c2), g2 = (1 - n2) / c2, v2 = 0; v2 < c2; v2++) {
    for (var y2 = 0; y2 < c2; y2++) {
      p2[v2 * c2 + y2] = 0;
    }
    f2[v2] = 0;
  }
  for (var m2 = 0; m2 < h2; m2++) {
    var b2 = u2[m2], x2 = b2.data("source"), w2 = b2.data("target");
    if (x2 !== w2) {
      var E2 = l2.indexOfId(x2), k2 = l2.indexOfId(w2), C2 = a2(b2);
      p2[k2 * c2 + E2] += C2, f2[E2] += C2;
    }
  }
  for (var S2 = 1 / c2 + g2, P2 = 0; P2 < c2; P2++)
    if (0 === f2[P2])
      for (var D2 = 0; D2 < c2; D2++) {
        p2[D2 * c2 + P2] = S2;
      }
    else
      for (var T2 = 0; T2 < c2; T2++) {
        var _2 = T2 * c2 + P2;
        p2[_2] = p2[_2] / f2[P2] + g2;
      }
  for (var M2, B2 = new Array(c2), N2 = new Array(c2), z2 = 0; z2 < c2; z2++)
    B2[z2] = 1;
  for (var I2 = 0; I2 < i2; I2++) {
    for (var A2 = 0; A2 < c2; A2++)
      N2[A2] = 0;
    for (var L2 = 0; L2 < c2; L2++)
      for (var O2 = 0; O2 < c2; O2++) {
        var R2 = L2 * c2 + O2;
        N2[L2] += p2[R2] * B2[O2];
      }
    kt(N2), M2 = B2, B2 = N2, N2 = M2;
    for (var V2 = 0, F2 = 0; F2 < c2; F2++) {
      var j2 = M2[F2] - B2[F2];
      V2 += j2 * j2;
    }
    if (V2 < r2)
      break;
  }
  return { rank: function(e10) {
    return e10 = o2.collection(e10)[0], B2[l2.indexOf(e10)];
  } };
} };
var an = Xe({ root: null, weight: function(e9) {
  return 1;
}, directed: false, alpha: 0 });
var on = { degreeCentralityNormalized: function(e9) {
  e9 = an(e9);
  var t3 = this.cy(), n2 = this.nodes(), r2 = n2.length;
  if (e9.directed) {
    for (var i2 = {}, a2 = {}, o2 = 0, s2 = 0, l2 = 0; l2 < r2; l2++) {
      var u2 = n2[l2], c2 = u2.id();
      e9.root = u2;
      var d2 = this.degreeCentrality(e9);
      o2 < d2.indegree && (o2 = d2.indegree), s2 < d2.outdegree && (s2 = d2.outdegree), i2[c2] = d2.indegree, a2[c2] = d2.outdegree;
    }
    return { indegree: function(e10) {
      return 0 == o2 ? 0 : (f(e10) && (e10 = t3.filter(e10)), i2[e10.id()] / o2);
    }, outdegree: function(e10) {
      return 0 === s2 ? 0 : (f(e10) && (e10 = t3.filter(e10)), a2[e10.id()] / s2);
    } };
  }
  for (var h2 = {}, p2 = 0, g2 = 0; g2 < r2; g2++) {
    var v2 = n2[g2];
    e9.root = v2;
    var y2 = this.degreeCentrality(e9);
    p2 < y2.degree && (p2 = y2.degree), h2[v2.id()] = y2.degree;
  }
  return { degree: function(e10) {
    return 0 === p2 ? 0 : (f(e10) && (e10 = t3.filter(e10)), h2[e10.id()] / p2);
  } };
}, degreeCentrality: function(e9) {
  e9 = an(e9);
  var t3 = this.cy(), n2 = this, r2 = e9, i2 = r2.root, a2 = r2.weight, o2 = r2.directed, s2 = r2.alpha;
  if (i2 = t3.collection(i2)[0], o2) {
    for (var l2 = i2.connectedEdges(), u2 = l2.filter(function(e10) {
      return e10.target().same(i2) && n2.has(e10);
    }), c2 = l2.filter(function(e10) {
      return e10.source().same(i2) && n2.has(e10);
    }), d2 = u2.length, h2 = c2.length, p2 = 0, f2 = 0, g2 = 0; g2 < u2.length; g2++)
      p2 += a2(u2[g2]);
    for (var v2 = 0; v2 < c2.length; v2++)
      f2 += a2(c2[v2]);
    return { indegree: Math.pow(d2, 1 - s2) * Math.pow(p2, s2), outdegree: Math.pow(h2, 1 - s2) * Math.pow(f2, s2) };
  }
  for (var y2 = i2.connectedEdges().intersection(n2), m2 = y2.length, b2 = 0, x2 = 0; x2 < y2.length; x2++)
    b2 += a2(y2[x2]);
  return { degree: Math.pow(m2, 1 - s2) * Math.pow(b2, s2) };
} };
on.dc = on.degreeCentrality, on.dcn = on.degreeCentralityNormalised = on.degreeCentralityNormalized;
var sn = Xe({ harmonic: true, weight: function() {
  return 1;
}, directed: false, root: null });
var ln = { closenessCentralityNormalized: function(e9) {
  for (var t3 = sn(e9), n2 = t3.harmonic, r2 = t3.weight, i2 = t3.directed, a2 = this.cy(), o2 = {}, s2 = 0, l2 = this.nodes(), u2 = this.floydWarshall({ weight: r2, directed: i2 }), c2 = 0; c2 < l2.length; c2++) {
    for (var d2 = 0, h2 = l2[c2], p2 = 0; p2 < l2.length; p2++)
      if (c2 !== p2) {
        var g2 = u2.distance(h2, l2[p2]);
        d2 += n2 ? 1 / g2 : g2;
      }
    n2 || (d2 = 1 / d2), s2 < d2 && (s2 = d2), o2[h2.id()] = d2;
  }
  return { closeness: function(e10) {
    return 0 == s2 ? 0 : (e10 = f(e10) ? a2.filter(e10)[0].id() : e10.id(), o2[e10] / s2);
  } };
}, closenessCentrality: function(e9) {
  var t3 = sn(e9), n2 = t3.root, r2 = t3.weight, i2 = t3.directed, a2 = t3.harmonic;
  n2 = this.filter(n2)[0];
  for (var o2 = this.dijkstra({ root: n2, weight: r2, directed: i2 }), s2 = 0, l2 = this.nodes(), u2 = 0; u2 < l2.length; u2++) {
    var c2 = l2[u2];
    if (!c2.same(n2)) {
      var d2 = o2.distanceTo(c2);
      s2 += a2 ? 1 / d2 : d2;
    }
  }
  return a2 ? s2 : 1 / s2;
} };
ln.cc = ln.closenessCentrality, ln.ccn = ln.closenessCentralityNormalised = ln.closenessCentralityNormalized;
var un = Xe({ weight: null, directed: false });
var cn = { betweennessCentrality: function(e9) {
  for (var t3 = un(e9), n2 = t3.directed, r2 = t3.weight, i2 = null != r2, a2 = this.cy(), o2 = this.nodes(), s2 = {}, l2 = {}, u2 = 0, c2 = function(e10, t4) {
    l2[e10] = t4, t4 > u2 && (u2 = t4);
  }, d2 = function(e10) {
    return l2[e10];
  }, h2 = 0; h2 < o2.length; h2++) {
    var p2 = o2[h2], f2 = p2.id();
    s2[f2] = n2 ? p2.outgoers().nodes() : p2.openNeighborhood().nodes(), c2(f2, 0);
  }
  for (var g2 = function(e10) {
    for (var t4 = o2[e10].id(), n3 = [], l3 = {}, u3 = {}, h3 = {}, p3 = new tt(function(e11, t5) {
      return h3[e11] - h3[t5];
    }), f3 = 0; f3 < o2.length; f3++) {
      var g3 = o2[f3].id();
      l3[g3] = [], u3[g3] = 0, h3[g3] = 1 / 0;
    }
    for (u3[t4] = 1, h3[t4] = 0, p3.push(t4); !p3.empty(); ) {
      var v3 = p3.pop();
      if (n3.push(v3), i2)
        for (var y3 = 0; y3 < s2[v3].length; y3++) {
          var m2 = s2[v3][y3], b2 = a2.getElementById(v3), x2 = void 0;
          x2 = b2.edgesTo(m2).length > 0 ? b2.edgesTo(m2)[0] : m2.edgesTo(b2)[0];
          var w2 = r2(x2);
          m2 = m2.id(), h3[m2] > h3[v3] + w2 && (h3[m2] = h3[v3] + w2, p3.nodes.indexOf(m2) < 0 ? p3.push(m2) : p3.updateItem(m2), u3[m2] = 0, l3[m2] = []), h3[m2] == h3[v3] + w2 && (u3[m2] = u3[m2] + u3[v3], l3[m2].push(v3));
        }
      else
        for (var E2 = 0; E2 < s2[v3].length; E2++) {
          var k2 = s2[v3][E2].id();
          h3[k2] == 1 / 0 && (p3.push(k2), h3[k2] = h3[v3] + 1), h3[k2] == h3[v3] + 1 && (u3[k2] = u3[k2] + u3[v3], l3[k2].push(v3));
        }
    }
    for (var C2 = {}, S2 = 0; S2 < o2.length; S2++)
      C2[o2[S2].id()] = 0;
    for (; n3.length > 0; ) {
      for (var P2 = n3.pop(), D2 = 0; D2 < l3[P2].length; D2++) {
        var T2 = l3[P2][D2];
        C2[T2] = C2[T2] + u3[T2] / u3[P2] * (1 + C2[P2]);
      }
      P2 != o2[e10].id() && c2(P2, d2(P2) + C2[P2]);
    }
  }, v2 = 0; v2 < o2.length; v2++)
    g2(v2);
  var y2 = { betweenness: function(e10) {
    var t4 = a2.collection(e10).id();
    return d2(t4);
  }, betweennessNormalized: function(e10) {
    if (0 == u2)
      return 0;
    var t4 = a2.collection(e10).id();
    return d2(t4) / u2;
  } };
  return y2.betweennessNormalised = y2.betweennessNormalized, y2;
} };
cn.bc = cn.betweennessCentrality;
var dn = Xe({ expandFactor: 2, inflateFactor: 2, multFactor: 1, maxIterations: 20, attributes: [function(e9) {
  return 1;
}] });
var hn = function(e9, t3) {
  for (var n2 = 0, r2 = 0; r2 < t3.length; r2++)
    n2 += t3[r2](e9);
  return n2;
};
var pn = function(e9, t3) {
  for (var n2, r2 = 0; r2 < t3; r2++) {
    n2 = 0;
    for (var i2 = 0; i2 < t3; i2++)
      n2 += e9[i2 * t3 + r2];
    for (var a2 = 0; a2 < t3; a2++)
      e9[a2 * t3 + r2] = e9[a2 * t3 + r2] / n2;
  }
};
var fn = function(e9, t3, n2) {
  for (var r2 = new Array(n2 * n2), i2 = 0; i2 < n2; i2++) {
    for (var a2 = 0; a2 < n2; a2++)
      r2[i2 * n2 + a2] = 0;
    for (var o2 = 0; o2 < n2; o2++)
      for (var s2 = 0; s2 < n2; s2++)
        r2[i2 * n2 + s2] += e9[i2 * n2 + o2] * t3[o2 * n2 + s2];
  }
  return r2;
};
var gn = function(e9, t3, n2) {
  for (var r2 = e9.slice(0), i2 = 1; i2 < n2; i2++)
    e9 = fn(e9, r2, t3);
  return e9;
};
var vn = function(e9, t3, n2) {
  for (var r2 = new Array(t3 * t3), i2 = 0; i2 < t3 * t3; i2++)
    r2[i2] = Math.pow(e9[i2], n2);
  return pn(r2, t3), r2;
};
var yn = function(e9, t3, n2, r2) {
  for (var i2 = 0; i2 < n2; i2++) {
    if (Math.round(e9[i2] * Math.pow(10, r2)) / Math.pow(10, r2) !== Math.round(t3[i2] * Math.pow(10, r2)) / Math.pow(10, r2))
      return false;
  }
  return true;
};
var mn = function(e9, t3) {
  for (var n2 = 0; n2 < e9.length; n2++)
    if (!t3[n2] || e9[n2].id() !== t3[n2].id())
      return false;
  return true;
};
var bn = function(e9) {
  for (var t3 = this.nodes(), n2 = this.edges(), r2 = this.cy(), i2 = function(e10) {
    return dn(e10);
  }(e9), a2 = {}, o2 = 0; o2 < t3.length; o2++)
    a2[t3[o2].id()] = o2;
  for (var s2, l2 = t3.length, u2 = l2 * l2, c2 = new Array(u2), d2 = 0; d2 < u2; d2++)
    c2[d2] = 0;
  for (var h2 = 0; h2 < n2.length; h2++) {
    var p2 = n2[h2], f2 = a2[p2.source().id()], g2 = a2[p2.target().id()], v2 = hn(p2, i2.attributes);
    c2[f2 * l2 + g2] += v2, c2[g2 * l2 + f2] += v2;
  }
  !function(e10, t4, n3) {
    for (var r3 = 0; r3 < t4; r3++)
      e10[r3 * t4 + r3] = n3;
  }(c2, l2, i2.multFactor), pn(c2, l2);
  for (var y2 = true, m2 = 0; y2 && m2 < i2.maxIterations; )
    y2 = false, s2 = gn(c2, l2, i2.expandFactor), c2 = vn(s2, l2, i2.inflateFactor), yn(c2, s2, u2, 4) || (y2 = true), m2++;
  var b2 = function(e10, t4, n3, r3) {
    for (var i3 = [], a3 = 0; a3 < t4; a3++) {
      for (var o3 = [], s3 = 0; s3 < t4; s3++)
        Math.round(1e3 * e10[a3 * t4 + s3]) / 1e3 > 0 && o3.push(n3[s3]);
      0 !== o3.length && i3.push(r3.collection(o3));
    }
    return i3;
  }(c2, l2, t3, r2);
  return b2 = function(e10) {
    for (var t4 = 0; t4 < e10.length; t4++)
      for (var n3 = 0; n3 < e10.length; n3++)
        t4 != n3 && mn(e10[t4], e10[n3]) && e10.splice(n3, 1);
    return e10;
  }(b2);
};
var xn = { markovClustering: bn, mcl: bn };
var wn = function(e9) {
  return e9;
};
var En = function(e9, t3) {
  return Math.abs(t3 - e9);
};
var kn = function(e9, t3, n2) {
  return e9 + En(t3, n2);
};
var Cn = function(e9, t3, n2) {
  return e9 + Math.pow(n2 - t3, 2);
};
var Sn = function(e9) {
  return Math.sqrt(e9);
};
var Pn = function(e9, t3, n2) {
  return Math.max(e9, En(t3, n2));
};
var Dn = function(e9, t3, n2, r2, i2) {
  for (var a2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : wn, o2 = r2, s2 = 0; s2 < e9; s2++)
    o2 = i2(o2, t3(s2), n2(s2));
  return a2(o2);
};
var Tn = { euclidean: function(e9, t3, n2) {
  return e9 >= 2 ? Dn(e9, t3, n2, 0, Cn, Sn) : Dn(e9, t3, n2, 0, kn);
}, squaredEuclidean: function(e9, t3, n2) {
  return Dn(e9, t3, n2, 0, Cn);
}, manhattan: function(e9, t3, n2) {
  return Dn(e9, t3, n2, 0, kn);
}, max: function(e9, t3, n2) {
  return Dn(e9, t3, n2, -1 / 0, Pn);
} };
function _n(e9, t3, n2, r2, i2, a2) {
  var o2;
  return o2 = g(e9) ? e9 : Tn[e9] || Tn.euclidean, 0 === t3 && g(e9) ? o2(i2, a2) : o2(t3, n2, r2, i2, a2);
}
Tn["squared-euclidean"] = Tn.squaredEuclidean, Tn.squaredeuclidean = Tn.squaredEuclidean;
var Mn = Xe({ k: 2, m: 2, sensitivityThreshold: 1e-4, distance: "euclidean", maxIterations: 10, attributes: [], testMode: false, testCentroids: null });
var Bn = function(e9) {
  return Mn(e9);
};
var Nn = function(e9, t3, n2, r2, i2) {
  var a2 = "kMedoids" !== i2 ? function(e10) {
    return n2[e10];
  } : function(e10) {
    return r2[e10](n2);
  }, o2 = n2, s2 = t3;
  return _n(e9, r2.length, a2, function(e10) {
    return r2[e10](t3);
  }, o2, s2);
};
var zn = function(e9, t3, n2) {
  for (var r2 = n2.length, i2 = new Array(r2), a2 = new Array(r2), o2 = new Array(t3), s2 = null, l2 = 0; l2 < r2; l2++)
    i2[l2] = e9.min(n2[l2]).value, a2[l2] = e9.max(n2[l2]).value;
  for (var u2 = 0; u2 < t3; u2++) {
    s2 = [];
    for (var c2 = 0; c2 < r2; c2++)
      s2[c2] = Math.random() * (a2[c2] - i2[c2]) + i2[c2];
    o2[u2] = s2;
  }
  return o2;
};
var In = function(e9, t3, n2, r2, i2) {
  for (var a2 = 1 / 0, o2 = 0, s2 = 0; s2 < t3.length; s2++) {
    var l2 = Nn(n2, e9, t3[s2], r2, i2);
    l2 < a2 && (a2 = l2, o2 = s2);
  }
  return o2;
};
var An = function(e9, t3, n2) {
  for (var r2 = [], i2 = null, a2 = 0; a2 < t3.length; a2++)
    n2[(i2 = t3[a2]).id()] === e9 && r2.push(i2);
  return r2;
};
var Ln = function(e9, t3, n2) {
  for (var r2 = 0; r2 < e9.length; r2++)
    for (var i2 = 0; i2 < e9[r2].length; i2++) {
      if (Math.abs(e9[r2][i2] - t3[r2][i2]) > n2)
        return false;
    }
  return true;
};
var On = function(e9, t3, n2) {
  for (var r2 = 0; r2 < n2; r2++)
    if (e9 === t3[r2])
      return true;
  return false;
};
var Rn = function(e9, t3) {
  var n2 = new Array(t3);
  if (e9.length < 50)
    for (var r2 = 0; r2 < t3; r2++) {
      for (var i2 = e9[Math.floor(Math.random() * e9.length)]; On(i2, n2, r2); )
        i2 = e9[Math.floor(Math.random() * e9.length)];
      n2[r2] = i2;
    }
  else
    for (var a2 = 0; a2 < t3; a2++)
      n2[a2] = e9[Math.floor(Math.random() * e9.length)];
  return n2;
};
var Vn = function(e9, t3, n2) {
  for (var r2 = 0, i2 = 0; i2 < t3.length; i2++)
    r2 += Nn("manhattan", t3[i2], e9, n2, "kMedoids");
  return r2;
};
var Fn = function(e9, t3, n2, r2, i2) {
  for (var a2, o2, s2 = 0; s2 < t3.length; s2++)
    for (var l2 = 0; l2 < e9.length; l2++)
      r2[s2][l2] = Math.pow(n2[s2][l2], i2.m);
  for (var u2 = 0; u2 < e9.length; u2++)
    for (var c2 = 0; c2 < i2.attributes.length; c2++) {
      a2 = 0, o2 = 0;
      for (var d2 = 0; d2 < t3.length; d2++)
        a2 += r2[d2][u2] * i2.attributes[c2](t3[d2]), o2 += r2[d2][u2];
      e9[u2][c2] = a2 / o2;
    }
};
var jn = function(e9, t3, n2, r2, i2) {
  for (var a2 = 0; a2 < e9.length; a2++)
    t3[a2] = e9[a2].slice();
  for (var o2, s2, l2, u2 = 2 / (i2.m - 1), c2 = 0; c2 < n2.length; c2++)
    for (var d2 = 0; d2 < r2.length; d2++) {
      o2 = 0;
      for (var h2 = 0; h2 < n2.length; h2++)
        s2 = Nn(i2.distance, r2[d2], n2[c2], i2.attributes, "cmeans"), l2 = Nn(i2.distance, r2[d2], n2[h2], i2.attributes, "cmeans"), o2 += Math.pow(s2 / l2, u2);
      e9[d2][c2] = 1 / o2;
    }
};
var qn = function(e9) {
  var t3, n2, r2, i2, a2 = this.cy(), o2 = this.nodes(), s2 = Bn(e9);
  r2 = new Array(o2.length);
  for (var l2 = 0; l2 < o2.length; l2++)
    r2[l2] = new Array(s2.k);
  n2 = new Array(o2.length);
  for (var u2 = 0; u2 < o2.length; u2++)
    n2[u2] = new Array(s2.k);
  for (var c2 = 0; c2 < o2.length; c2++) {
    for (var d2 = 0, h2 = 0; h2 < s2.k; h2++)
      n2[c2][h2] = Math.random(), d2 += n2[c2][h2];
    for (var p2 = 0; p2 < s2.k; p2++)
      n2[c2][p2] = n2[c2][p2] / d2;
  }
  t3 = new Array(s2.k);
  for (var f2 = 0; f2 < s2.k; f2++)
    t3[f2] = new Array(s2.attributes.length);
  i2 = new Array(o2.length);
  for (var g2 = 0; g2 < o2.length; g2++)
    i2[g2] = new Array(s2.k);
  for (var v2 = true, y2 = 0; v2 && y2 < s2.maxIterations; )
    v2 = false, Fn(t3, o2, n2, i2, s2), jn(n2, r2, t3, o2, s2), Ln(n2, r2, s2.sensitivityThreshold) || (v2 = true), y2++;
  return { clusters: function(e10, t4, n3, r3) {
    for (var i3, a3, o3 = new Array(n3.k), s3 = 0; s3 < o3.length; s3++)
      o3[s3] = [];
    for (var l3 = 0; l3 < t4.length; l3++) {
      i3 = -1 / 0, a3 = -1;
      for (var u3 = 0; u3 < t4[0].length; u3++)
        t4[l3][u3] > i3 && (i3 = t4[l3][u3], a3 = u3);
      o3[a3].push(e10[l3]);
    }
    for (var c3 = 0; c3 < o3.length; c3++)
      o3[c3] = r3.collection(o3[c3]);
    return o3;
  }(o2, n2, s2, a2), degreeOfMembership: n2 };
};
var Yn = { kMeans: function(t3) {
  var n2, r2 = this.cy(), i2 = this.nodes(), a2 = null, o2 = Bn(t3), s2 = new Array(o2.k), l2 = {};
  o2.testMode ? "number" == typeof o2.testCentroids ? (o2.testCentroids, n2 = zn(i2, o2.k, o2.attributes)) : n2 = "object" === e(o2.testCentroids) ? o2.testCentroids : zn(i2, o2.k, o2.attributes) : n2 = zn(i2, o2.k, o2.attributes);
  for (var u2, c2, d2, h2 = true, p2 = 0; h2 && p2 < o2.maxIterations; ) {
    for (var f2 = 0; f2 < i2.length; f2++)
      l2[(a2 = i2[f2]).id()] = In(a2, n2, o2.distance, o2.attributes, "kMeans");
    h2 = false;
    for (var g2 = 0; g2 < o2.k; g2++) {
      var v2 = An(g2, i2, l2);
      if (0 !== v2.length) {
        for (var y2 = o2.attributes.length, m2 = n2[g2], b2 = new Array(y2), x2 = new Array(y2), w2 = 0; w2 < y2; w2++) {
          x2[w2] = 0;
          for (var E2 = 0; E2 < v2.length; E2++)
            a2 = v2[E2], x2[w2] += o2.attributes[w2](a2);
          b2[w2] = x2[w2] / v2.length, u2 = b2[w2], c2 = m2[w2], d2 = o2.sensitivityThreshold, Math.abs(c2 - u2) <= d2 || (h2 = true);
        }
        n2[g2] = b2, s2[g2] = r2.collection(v2);
      }
    }
    p2++;
  }
  return s2;
}, kMedoids: function(t3) {
  var n2, r2, i2 = this.cy(), a2 = this.nodes(), o2 = null, s2 = Bn(t3), l2 = new Array(s2.k), u2 = {}, c2 = new Array(s2.k);
  s2.testMode ? "number" == typeof s2.testCentroids || (n2 = "object" === e(s2.testCentroids) ? s2.testCentroids : Rn(a2, s2.k)) : n2 = Rn(a2, s2.k);
  for (var d2 = true, h2 = 0; d2 && h2 < s2.maxIterations; ) {
    for (var p2 = 0; p2 < a2.length; p2++)
      u2[(o2 = a2[p2]).id()] = In(o2, n2, s2.distance, s2.attributes, "kMedoids");
    d2 = false;
    for (var f2 = 0; f2 < n2.length; f2++) {
      var g2 = An(f2, a2, u2);
      if (0 !== g2.length) {
        c2[f2] = Vn(n2[f2], g2, s2.attributes);
        for (var v2 = 0; v2 < g2.length; v2++)
          (r2 = Vn(g2[v2], g2, s2.attributes)) < c2[f2] && (c2[f2] = r2, n2[f2] = g2[v2], d2 = true);
        l2[f2] = i2.collection(g2);
      }
    }
    h2++;
  }
  return l2;
}, fuzzyCMeans: qn, fcm: qn };
var Xn = Xe({ distance: "euclidean", linkage: "min", mode: "threshold", threshold: 1 / 0, addDendrogram: false, dendrogramDepth: 0, attributes: [] });
var Wn = { single: "min", complete: "max" };
var Hn = function(e9, t3, n2, r2, i2) {
  for (var a2, o2 = 0, s2 = 1 / 0, l2 = i2.attributes, u2 = function(e10, t4) {
    return _n(i2.distance, l2.length, function(t5) {
      return l2[t5](e10);
    }, function(e11) {
      return l2[e11](t4);
    }, e10, t4);
  }, c2 = 0; c2 < e9.length; c2++) {
    var d2 = e9[c2].key, h2 = n2[d2][r2[d2]];
    h2 < s2 && (o2 = d2, s2 = h2);
  }
  if ("threshold" === i2.mode && s2 >= i2.threshold || "dendrogram" === i2.mode && 1 === e9.length)
    return false;
  var p2, f2 = t3[o2], g2 = t3[r2[o2]];
  p2 = "dendrogram" === i2.mode ? { left: f2, right: g2, key: f2.key } : { value: f2.value.concat(g2.value), key: f2.key }, e9[f2.index] = p2, e9.splice(g2.index, 1), t3[f2.key] = p2;
  for (var v2 = 0; v2 < e9.length; v2++) {
    var y2 = e9[v2];
    f2.key === y2.key ? a2 = 1 / 0 : "min" === i2.linkage ? (a2 = n2[f2.key][y2.key], n2[f2.key][y2.key] > n2[g2.key][y2.key] && (a2 = n2[g2.key][y2.key])) : "max" === i2.linkage ? (a2 = n2[f2.key][y2.key], n2[f2.key][y2.key] < n2[g2.key][y2.key] && (a2 = n2[g2.key][y2.key])) : a2 = "mean" === i2.linkage ? (n2[f2.key][y2.key] * f2.size + n2[g2.key][y2.key] * g2.size) / (f2.size + g2.size) : "dendrogram" === i2.mode ? u2(y2.value, f2.value) : u2(y2.value[0], f2.value[0]), n2[f2.key][y2.key] = n2[y2.key][f2.key] = a2;
  }
  for (var m2 = 0; m2 < e9.length; m2++) {
    var b2 = e9[m2].key;
    if (r2[b2] === f2.key || r2[b2] === g2.key) {
      for (var x2 = b2, w2 = 0; w2 < e9.length; w2++) {
        var E2 = e9[w2].key;
        n2[b2][E2] < n2[b2][x2] && (x2 = E2);
      }
      r2[b2] = x2;
    }
    e9[m2].index = m2;
  }
  return f2.key = g2.key = f2.index = g2.index = null, true;
};
var Kn = function e2(t3, n2, r2) {
  t3 && (t3.value ? n2.push(t3.value) : (t3.left && e2(t3.left, n2), t3.right && e2(t3.right, n2)));
};
var Gn = function(e9) {
  for (var t3 = this.cy(), n2 = this.nodes(), r2 = function(e10) {
    var t4 = Xn(e10), n3 = Wn[t4.linkage];
    return null != n3 && (t4.linkage = n3), t4;
  }(e9), i2 = r2.attributes, a2 = function(e10, t4) {
    return _n(r2.distance, i2.length, function(t5) {
      return i2[t5](e10);
    }, function(e11) {
      return i2[e11](t4);
    }, e10, t4);
  }, o2 = [], s2 = [], l2 = [], u2 = [], c2 = 0; c2 < n2.length; c2++) {
    var d2 = { value: "dendrogram" === r2.mode ? n2[c2] : [n2[c2]], key: c2, index: c2 };
    o2[c2] = d2, u2[c2] = d2, s2[c2] = [], l2[c2] = 0;
  }
  for (var h2 = 0; h2 < o2.length; h2++)
    for (var p2 = 0; p2 <= h2; p2++) {
      var f2 = void 0;
      f2 = "dendrogram" === r2.mode ? h2 === p2 ? 1 / 0 : a2(o2[h2].value, o2[p2].value) : h2 === p2 ? 1 / 0 : a2(o2[h2].value[0], o2[p2].value[0]), s2[h2][p2] = f2, s2[p2][h2] = f2, f2 < s2[h2][l2[h2]] && (l2[h2] = p2);
    }
  for (var g2, v2 = Hn(o2, u2, s2, l2, r2); v2; )
    v2 = Hn(o2, u2, s2, l2, r2);
  return "dendrogram" === r2.mode ? (g2 = function e10(t4, n3, r3) {
    if (!t4)
      return [];
    var i3 = [], a3 = [], o3 = [];
    return 0 === n3 ? (t4.left && Kn(t4.left, i3), t4.right && Kn(t4.right, a3), o3 = i3.concat(a3), [r3.collection(o3)]) : 1 === n3 ? t4.value ? [r3.collection(t4.value)] : (t4.left && Kn(t4.left, i3), t4.right && Kn(t4.right, a3), [r3.collection(i3), r3.collection(a3)]) : t4.value ? [r3.collection(t4.value)] : (t4.left && (i3 = e10(t4.left, n3 - 1, r3)), t4.right && (a3 = e10(t4.right, n3 - 1, r3)), i3.concat(a3));
  }(o2[0], r2.dendrogramDepth, t3), r2.addDendrogram && function e10(t4, n3) {
    if (!t4)
      return "";
    if (t4.left && t4.right) {
      var r3 = e10(t4.left, n3), i3 = e10(t4.right, n3), a3 = n3.add({ group: "nodes", data: { id: r3 + "," + i3 } });
      return n3.add({ group: "edges", data: { source: r3, target: a3.id() } }), n3.add({ group: "edges", data: { source: i3, target: a3.id() } }), a3.id();
    }
    return t4.value ? t4.value.id() : void 0;
  }(o2[0], t3)) : (g2 = new Array(o2.length), o2.forEach(function(e10, n3) {
    e10.key = e10.index = null, g2[n3] = t3.collection(e10.value);
  })), g2;
};
var Un = { hierarchicalClustering: Gn, hca: Gn };
var Zn = Xe({ distance: "euclidean", preference: "median", damping: 0.8, maxIterations: 1e3, minIterations: 100, attributes: [] });
var $n = function(e9, t3, n2, r2) {
  var i2 = function(e10, t4) {
    return r2[t4](e10);
  };
  return -_n(e9, r2.length, function(e10) {
    return i2(t3, e10);
  }, function(e10) {
    return i2(n2, e10);
  }, t3, n2);
};
var Qn = function(e9, t3) {
  return "median" === t3 ? function(e10) {
    var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e10.length, r2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], i2 = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], a2 = !(arguments.length > 5 && void 0 !== arguments[5]) || arguments[5];
    r2 ? e10 = e10.slice(t4, n2) : (n2 < e10.length && e10.splice(n2, e10.length - n2), t4 > 0 && e10.splice(0, t4));
    for (var o2 = 0, s2 = e10.length - 1; s2 >= 0; s2--) {
      var l2 = e10[s2];
      a2 ? isFinite(l2) || (e10[s2] = -1 / 0, o2++) : e10.splice(s2, 1);
    }
    i2 && e10.sort(function(e11, t5) {
      return e11 - t5;
    });
    var u2 = e10.length, c2 = Math.floor(u2 / 2);
    return u2 % 2 != 0 ? e10[c2 + 1 + o2] : (e10[c2 - 1 + o2] + e10[c2 + o2]) / 2;
  }(e9) : "mean" === t3 ? function(e10) {
    for (var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e10.length, r2 = 0, i2 = 0, a2 = t4; a2 < n2; a2++) {
      var o2 = e10[a2];
      isFinite(o2) && (r2 += o2, i2++);
    }
    return r2 / i2;
  }(e9) : "min" === t3 ? function(e10) {
    for (var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e10.length, r2 = 1 / 0, i2 = t4; i2 < n2; i2++) {
      var a2 = e10[i2];
      isFinite(a2) && (r2 = Math.min(a2, r2));
    }
    return r2;
  }(e9) : "max" === t3 ? function(e10) {
    for (var t4 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0, n2 = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : e10.length, r2 = -1 / 0, i2 = t4; i2 < n2; i2++) {
      var a2 = e10[i2];
      isFinite(a2) && (r2 = Math.max(a2, r2));
    }
    return r2;
  }(e9) : t3;
};
var Jn = function(e9, t3, n2) {
  for (var r2 = [], i2 = 0; i2 < e9; i2++) {
    for (var a2 = -1, o2 = -1 / 0, s2 = 0; s2 < n2.length; s2++) {
      var l2 = n2[s2];
      t3[i2 * e9 + l2] > o2 && (a2 = l2, o2 = t3[i2 * e9 + l2]);
    }
    a2 > 0 && r2.push(a2);
  }
  for (var u2 = 0; u2 < n2.length; u2++)
    r2[n2[u2]] = n2[u2];
  return r2;
};
var er = function(e9) {
  for (var t3, n2, r2, i2, a2, o2, s2 = this.cy(), l2 = this.nodes(), u2 = function(e10) {
    var t4 = e10.damping, n3 = e10.preference;
    0.5 <= t4 && t4 < 1 || Oe("Damping must range on [0.5, 1).  Got: ".concat(t4));
    var r3 = ["median", "mean", "min", "max"];
    return r3.some(function(e11) {
      return e11 === n3;
    }) || m(n3) || Oe("Preference must be one of [".concat(r3.map(function(e11) {
      return "'".concat(e11, "'");
    }).join(", "), "] or a number.  Got: ").concat(n3)), Zn(e10);
  }(e9), c2 = {}, d2 = 0; d2 < l2.length; d2++)
    c2[l2[d2].id()] = d2;
  n2 = (t3 = l2.length) * t3, r2 = new Array(n2);
  for (var h2 = 0; h2 < n2; h2++)
    r2[h2] = -1 / 0;
  for (var p2 = 0; p2 < t3; p2++)
    for (var f2 = 0; f2 < t3; f2++)
      p2 !== f2 && (r2[p2 * t3 + f2] = $n(u2.distance, l2[p2], l2[f2], u2.attributes));
  i2 = Qn(r2, u2.preference);
  for (var g2 = 0; g2 < t3; g2++)
    r2[g2 * t3 + g2] = i2;
  a2 = new Array(n2);
  for (var v2 = 0; v2 < n2; v2++)
    a2[v2] = 0;
  o2 = new Array(n2);
  for (var y2 = 0; y2 < n2; y2++)
    o2[y2] = 0;
  for (var b2 = new Array(t3), x2 = new Array(t3), w2 = new Array(t3), E2 = 0; E2 < t3; E2++)
    b2[E2] = 0, x2[E2] = 0, w2[E2] = 0;
  for (var k2, C2 = new Array(t3 * u2.minIterations), S2 = 0; S2 < C2.length; S2++)
    C2[S2] = 0;
  for (k2 = 0; k2 < u2.maxIterations; k2++) {
    for (var P2 = 0; P2 < t3; P2++) {
      for (var D2 = -1 / 0, T2 = -1 / 0, _2 = -1, M2 = 0, B2 = 0; B2 < t3; B2++)
        b2[B2] = a2[P2 * t3 + B2], (M2 = o2[P2 * t3 + B2] + r2[P2 * t3 + B2]) >= D2 ? (T2 = D2, D2 = M2, _2 = B2) : M2 > T2 && (T2 = M2);
      for (var N2 = 0; N2 < t3; N2++)
        a2[P2 * t3 + N2] = (1 - u2.damping) * (r2[P2 * t3 + N2] - D2) + u2.damping * b2[N2];
      a2[P2 * t3 + _2] = (1 - u2.damping) * (r2[P2 * t3 + _2] - T2) + u2.damping * b2[_2];
    }
    for (var z2 = 0; z2 < t3; z2++) {
      for (var I2 = 0, A2 = 0; A2 < t3; A2++)
        b2[A2] = o2[A2 * t3 + z2], x2[A2] = Math.max(0, a2[A2 * t3 + z2]), I2 += x2[A2];
      I2 -= x2[z2], x2[z2] = a2[z2 * t3 + z2], I2 += x2[z2];
      for (var L2 = 0; L2 < t3; L2++)
        o2[L2 * t3 + z2] = (1 - u2.damping) * Math.min(0, I2 - x2[L2]) + u2.damping * b2[L2];
      o2[z2 * t3 + z2] = (1 - u2.damping) * (I2 - x2[z2]) + u2.damping * b2[z2];
    }
    for (var O2 = 0, R2 = 0; R2 < t3; R2++) {
      var V2 = o2[R2 * t3 + R2] + a2[R2 * t3 + R2] > 0 ? 1 : 0;
      C2[k2 % u2.minIterations * t3 + R2] = V2, O2 += V2;
    }
    if (O2 > 0 && (k2 >= u2.minIterations - 1 || k2 == u2.maxIterations - 1)) {
      for (var F2 = 0, j2 = 0; j2 < t3; j2++) {
        w2[j2] = 0;
        for (var q2 = 0; q2 < u2.minIterations; q2++)
          w2[j2] += C2[q2 * t3 + j2];
        0 !== w2[j2] && w2[j2] !== u2.minIterations || F2++;
      }
      if (F2 === t3)
        break;
    }
  }
  for (var Y2 = function(e10, t4, n3) {
    for (var r3 = [], i3 = 0; i3 < e10; i3++)
      t4[i3 * e10 + i3] + n3[i3 * e10 + i3] > 0 && r3.push(i3);
    return r3;
  }(t3, a2, o2), X2 = function(e10, t4, n3) {
    for (var r3 = Jn(e10, t4, n3), i3 = 0; i3 < n3.length; i3++) {
      for (var a3 = [], o3 = 0; o3 < r3.length; o3++)
        r3[o3] === n3[i3] && a3.push(o3);
      for (var s3 = -1, l3 = -1 / 0, u3 = 0; u3 < a3.length; u3++) {
        for (var c3 = 0, d3 = 0; d3 < a3.length; d3++)
          c3 += t4[a3[d3] * e10 + a3[u3]];
        c3 > l3 && (s3 = u3, l3 = c3);
      }
      n3[i3] = a3[s3];
    }
    return r3 = Jn(e10, t4, n3);
  }(t3, r2, Y2), W2 = {}, H2 = 0; H2 < Y2.length; H2++)
    W2[Y2[H2]] = [];
  for (var K2 = 0; K2 < l2.length; K2++) {
    var G2 = X2[c2[l2[K2].id()]];
    null != G2 && W2[G2].push(l2[K2]);
  }
  for (var U2 = new Array(Y2.length), Z2 = 0; Z2 < Y2.length; Z2++)
    U2[Z2] = s2.collection(W2[Y2[Z2]]);
  return U2;
};
var tr = { affinityPropagation: er, ap: er };
var nr = Xe({ root: void 0, directed: false });
var rr = function() {
  var e9 = this, t3 = {}, n2 = 0, r2 = 0, i2 = [], a2 = [], o2 = {}, s2 = function s3(l3, u2, c2) {
    l3 === c2 && (r2 += 1), t3[u2] = { id: n2, low: n2++, cutVertex: false };
    var d2, h2, p2, f2, g2 = e9.getElementById(u2).connectedEdges().intersection(e9);
    0 === g2.size() ? i2.push(e9.spawn(e9.getElementById(u2))) : g2.forEach(function(n3) {
      d2 = n3.source().id(), h2 = n3.target().id(), (p2 = d2 === u2 ? h2 : d2) !== c2 && (f2 = n3.id(), o2[f2] || (o2[f2] = true, a2.push({ x: u2, y: p2, edge: n3 })), p2 in t3 ? t3[u2].low = Math.min(t3[u2].low, t3[p2].id) : (s3(l3, p2, u2), t3[u2].low = Math.min(t3[u2].low, t3[p2].low), t3[u2].id <= t3[p2].low && (t3[u2].cutVertex = true, function(n4, r3) {
        for (var o3 = a2.length - 1, s4 = [], l4 = e9.spawn(); a2[o3].x != n4 || a2[o3].y != r3; )
          s4.push(a2.pop().edge), o3--;
        s4.push(a2.pop().edge), s4.forEach(function(n5) {
          var r4 = n5.connectedNodes().intersection(e9);
          l4.merge(n5), r4.forEach(function(n6) {
            var r5 = n6.id(), i3 = n6.connectedEdges().intersection(e9);
            l4.merge(n6), t3[r5].cutVertex ? l4.merge(i3.filter(function(e10) {
              return e10.isLoop();
            })) : l4.merge(i3);
          });
        }), i2.push(l4);
      }(u2, p2))));
    });
  };
  e9.forEach(function(e10) {
    if (e10.isNode()) {
      var n3 = e10.id();
      n3 in t3 || (r2 = 0, s2(n3, n3), t3[n3].cutVertex = r2 > 1);
    }
  });
  var l2 = Object.keys(t3).filter(function(e10) {
    return t3[e10].cutVertex;
  }).map(function(t4) {
    return e9.getElementById(t4);
  });
  return { cut: e9.spawn(l2), components: i2 };
};
var ir = function() {
  var e9 = this, t3 = {}, n2 = 0, r2 = [], i2 = [], a2 = e9.spawn(e9);
  return e9.forEach(function(o2) {
    if (o2.isNode()) {
      var s2 = o2.id();
      s2 in t3 || function o3(s3) {
        if (i2.push(s3), t3[s3] = { index: n2, low: n2++, explored: false }, e9.getElementById(s3).connectedEdges().intersection(e9).forEach(function(e10) {
          var n3 = e10.target().id();
          n3 !== s3 && (n3 in t3 || o3(n3), t3[n3].explored || (t3[s3].low = Math.min(t3[s3].low, t3[n3].low)));
        }), t3[s3].index === t3[s3].low) {
          for (var l2 = e9.spawn(); ; ) {
            var u2 = i2.pop();
            if (l2.merge(e9.getElementById(u2)), t3[u2].low = t3[s3].index, t3[u2].explored = true, u2 === s3)
              break;
          }
          var c2 = l2.edgesWith(l2), d2 = l2.merge(c2);
          r2.push(d2), a2 = a2.difference(d2);
        }
      }(s2);
    }
  }), { cut: a2, components: r2 };
};
var ar = {};
[et, rt, it, ot, lt, ct, ft, rn, on, ln, cn, xn, Yn, Un, tr, { hierholzer: function(e9) {
  if (!y(e9)) {
    var t3 = arguments;
    e9 = { root: t3[0], directed: t3[1] };
  }
  var n2, r2, i2, a2 = nr(e9), o2 = a2.root, s2 = a2.directed, l2 = this, u2 = false;
  o2 && (i2 = f(o2) ? this.filter(o2)[0].id() : o2[0].id());
  var c2 = {}, d2 = {};
  s2 ? l2.forEach(function(e10) {
    var t4 = e10.id();
    if (e10.isNode()) {
      var i3 = e10.indegree(true), a3 = e10.outdegree(true), o3 = i3 - a3, s3 = a3 - i3;
      1 == o3 ? n2 ? u2 = true : n2 = t4 : 1 == s3 ? r2 ? u2 = true : r2 = t4 : (s3 > 1 || o3 > 1) && (u2 = true), c2[t4] = [], e10.outgoers().forEach(function(e11) {
        e11.isEdge() && c2[t4].push(e11.id());
      });
    } else
      d2[t4] = [void 0, e10.target().id()];
  }) : l2.forEach(function(e10) {
    var t4 = e10.id();
    e10.isNode() ? (e10.degree(true) % 2 && (n2 ? r2 ? u2 = true : r2 = t4 : n2 = t4), c2[t4] = [], e10.connectedEdges().forEach(function(e11) {
      return c2[t4].push(e11.id());
    })) : d2[t4] = [e10.source().id(), e10.target().id()];
  });
  var h2 = { found: false, trail: void 0 };
  if (u2)
    return h2;
  if (r2 && n2)
    if (s2) {
      if (i2 && r2 != i2)
        return h2;
      i2 = r2;
    } else {
      if (i2 && r2 != i2 && n2 != i2)
        return h2;
      i2 || (i2 = r2);
    }
  else
    i2 || (i2 = l2[0].id());
  var p2 = function(e10) {
    for (var t4, n3, r3, i3 = e10, a3 = [e10]; c2[i3].length; )
      t4 = c2[i3].shift(), n3 = d2[t4][0], i3 != (r3 = d2[t4][1]) ? (c2[r3] = c2[r3].filter(function(e11) {
        return e11 != t4;
      }), i3 = r3) : s2 || i3 == n3 || (c2[n3] = c2[n3].filter(function(e11) {
        return e11 != t4;
      }), i3 = n3), a3.unshift(t4), a3.unshift(i3);
    return a3;
  }, g2 = [], v2 = [];
  for (v2 = p2(i2); 1 != v2.length; )
    0 == c2[v2[0]].length ? (g2.unshift(l2.getElementById(v2.shift())), g2.unshift(l2.getElementById(v2.shift()))) : v2 = p2(v2.shift()).concat(v2);
  for (var m2 in g2.unshift(l2.getElementById(v2.shift())), c2)
    if (c2[m2].length)
      return h2;
  return h2.found = true, h2.trail = this.spawn(g2, true), h2;
} }, { hopcroftTarjanBiconnected: rr, htbc: rr, htb: rr, hopcroftTarjanBiconnectedComponents: rr }, { tarjanStronglyConnected: ir, tsc: ir, tscc: ir, tarjanStronglyConnectedComponents: ir }].forEach(function(e9) {
  I(ar, e9);
});
var or = function e3(t3) {
  if (!(this instanceof e3))
    return new e3(t3);
  this.id = "Thenable/1.0.7", this.state = 0, this.fulfillValue = void 0, this.rejectReason = void 0, this.onFulfilled = [], this.onRejected = [], this.proxy = { then: this.then.bind(this) }, "function" == typeof t3 && t3.call(this, this.fulfill.bind(this), this.reject.bind(this));
};
or.prototype = { fulfill: function(e9) {
  return sr(this, 1, "fulfillValue", e9);
}, reject: function(e9) {
  return sr(this, 2, "rejectReason", e9);
}, then: function(e9, t3) {
  var n2 = new or();
  return this.onFulfilled.push(cr(e9, n2, "fulfill")), this.onRejected.push(cr(t3, n2, "reject")), lr(this), n2.proxy;
} };
var sr = function(e9, t3, n2, r2) {
  return 0 === e9.state && (e9.state = t3, e9[n2] = r2, lr(e9)), e9;
};
var lr = function(e9) {
  1 === e9.state ? ur(e9, "onFulfilled", e9.fulfillValue) : 2 === e9.state && ur(e9, "onRejected", e9.rejectReason);
};
var ur = function(e9, t3, n2) {
  if (0 !== e9[t3].length) {
    var r2 = e9[t3];
    e9[t3] = [];
    var i2 = function() {
      for (var e10 = 0; e10 < r2.length; e10++)
        r2[e10](n2);
    };
    "function" == typeof setImmediate ? setImmediate(i2) : setTimeout(i2, 0);
  }
};
var cr = function(e9, t3, n2) {
  return function(r2) {
    if ("function" != typeof e9)
      t3[n2].call(t3, r2);
    else {
      var i2;
      try {
        i2 = e9(r2);
      } catch (e10) {
        return void t3.reject(e10);
      }
      dr(t3, i2);
    }
  };
};
var dr = function t2(n2, r2) {
  if (n2 !== r2 && n2.proxy !== r2) {
    var i2;
    if ("object" === e(r2) && null !== r2 || "function" == typeof r2)
      try {
        i2 = r2.then;
      } catch (e9) {
        return void n2.reject(e9);
      }
    if ("function" != typeof i2)
      n2.fulfill(r2);
    else {
      var a2 = false;
      try {
        i2.call(r2, function(e9) {
          a2 || (a2 = true, e9 === r2 ? n2.reject(new TypeError("circular thenable chain")) : t2(n2, e9));
        }, function(e9) {
          a2 || (a2 = true, n2.reject(e9));
        });
      } catch (e9) {
        a2 || n2.reject(e9);
      }
    }
  } else
    n2.reject(new TypeError("cannot resolve promise with itself"));
};
or.all = function(e9) {
  return new or(function(t3, n2) {
    for (var r2 = new Array(e9.length), i2 = 0, a2 = function(n3, a3) {
      r2[n3] = a3, ++i2 === e9.length && t3(r2);
    }, o2 = 0; o2 < e9.length; o2++)
      !function(t4) {
        var r3 = e9[t4];
        null != r3 && null != r3.then ? r3.then(function(e10) {
          a2(t4, e10);
        }, function(e10) {
          n2(e10);
        }) : a2(t4, r3);
      }(o2);
  });
}, or.resolve = function(e9) {
  return new or(function(t3, n2) {
    t3(e9);
  });
}, or.reject = function(e9) {
  return new or(function(t3, n2) {
    n2(e9);
  });
};
var hr = "undefined" != typeof Promise ? Promise : or;
var pr = function(e9, t3, n2) {
  var r2 = k(e9), i2 = !r2, a2 = this._private = I({ duration: 1e3 }, t3, n2);
  if (a2.target = e9, a2.style = a2.style || a2.css, a2.started = false, a2.playing = false, a2.hooked = false, a2.applying = false, a2.progress = 0, a2.completes = [], a2.frames = [], a2.complete && g(a2.complete) && a2.completes.push(a2.complete), i2) {
    var o2 = e9.position();
    a2.startPosition = a2.startPosition || { x: o2.x, y: o2.y }, a2.startStyle = a2.startStyle || e9.cy().style().getAnimationStartStyle(e9, a2.style);
  }
  if (r2) {
    var s2 = e9.pan();
    a2.startPan = { x: s2.x, y: s2.y }, a2.startZoom = e9.zoom();
  }
  this.length = 1, this[0] = this;
};
var fr = pr.prototype;
I(fr, { instanceString: function() {
  return "animation";
}, hook: function() {
  var e9 = this._private;
  if (!e9.hooked) {
    var t3 = e9.target._private.animation;
    (e9.queue ? t3.queue : t3.current).push(this), x(e9.target) && e9.target.cy().addToAnimationPool(e9.target), e9.hooked = true;
  }
  return this;
}, play: function() {
  var e9 = this._private;
  return 1 === e9.progress && (e9.progress = 0), e9.playing = true, e9.started = false, e9.stopped = false, this.hook(), this;
}, playing: function() {
  return this._private.playing;
}, apply: function() {
  var e9 = this._private;
  return e9.applying = true, e9.started = false, e9.stopped = false, this.hook(), this;
}, applying: function() {
  return this._private.applying;
}, pause: function() {
  var e9 = this._private;
  return e9.playing = false, e9.started = false, this;
}, stop: function() {
  var e9 = this._private;
  return e9.playing = false, e9.started = false, e9.stopped = true, this;
}, rewind: function() {
  return this.progress(0);
}, fastforward: function() {
  return this.progress(1);
}, time: function(e9) {
  var t3 = this._private;
  return void 0 === e9 ? t3.progress * t3.duration : this.progress(e9 / t3.duration);
}, progress: function(e9) {
  var t3 = this._private, n2 = t3.playing;
  return void 0 === e9 ? t3.progress : (n2 && this.pause(), t3.progress = e9, t3.started = false, n2 && this.play(), this);
}, completed: function() {
  return 1 === this._private.progress;
}, reverse: function() {
  var e9 = this._private, t3 = e9.playing;
  t3 && this.pause(), e9.progress = 1 - e9.progress, e9.started = false;
  var n2 = function(t4, n3) {
    var r3 = e9[t4];
    null != r3 && (e9[t4] = e9[n3], e9[n3] = r3);
  };
  if (n2("zoom", "startZoom"), n2("pan", "startPan"), n2("position", "startPosition"), e9.style)
    for (var r2 = 0; r2 < e9.style.length; r2++) {
      var i2 = e9.style[r2], a2 = i2.name, o2 = e9.startStyle[a2];
      e9.startStyle[a2] = i2, e9.style[r2] = o2;
    }
  return t3 && this.play(), this;
}, promise: function(e9) {
  var t3, n2 = this._private;
  switch (e9) {
    case "frame":
      t3 = n2.frames;
      break;
    default:
    case "complete":
    case "completed":
      t3 = n2.completes;
  }
  return new hr(function(e10, n3) {
    t3.push(function() {
      e10();
    });
  });
} }), fr.complete = fr.completed, fr.run = fr.play, fr.running = fr.playing;
var gr = { animated: function() {
  return function() {
    var e9 = void 0 !== this.length ? this : [this];
    if (!(this._private.cy || this).styleEnabled())
      return false;
    var t3 = e9[0];
    return t3 ? t3._private.animation.current.length > 0 : void 0;
  };
}, clearQueue: function() {
  return function() {
    var e9 = void 0 !== this.length ? this : [this];
    if (!(this._private.cy || this).styleEnabled())
      return this;
    for (var t3 = 0; t3 < e9.length; t3++) {
      e9[t3]._private.animation.queue = [];
    }
    return this;
  };
}, delay: function() {
  return function(e9, t3) {
    return (this._private.cy || this).styleEnabled() ? this.animate({ delay: e9, duration: e9, complete: t3 }) : this;
  };
}, delayAnimation: function() {
  return function(e9, t3) {
    return (this._private.cy || this).styleEnabled() ? this.animation({ delay: e9, duration: e9, complete: t3 }) : this;
  };
}, animation: function() {
  return function(e9, t3) {
    var n2 = void 0 !== this.length, r2 = n2 ? this : [this], i2 = this._private.cy || this, a2 = !n2, o2 = !a2;
    if (!i2.styleEnabled())
      return this;
    var s2 = i2.style();
    if (e9 = I({}, e9, t3), 0 === Object.keys(e9).length)
      return new pr(r2[0], e9);
    switch (void 0 === e9.duration && (e9.duration = 400), e9.duration) {
      case "slow":
        e9.duration = 600;
        break;
      case "fast":
        e9.duration = 200;
    }
    if (o2 && (e9.style = s2.getPropsList(e9.style || e9.css), e9.css = void 0), o2 && null != e9.renderedPosition) {
      var l2 = e9.renderedPosition, u2 = i2.pan(), c2 = i2.zoom();
      e9.position = vt(l2, c2, u2);
    }
    if (a2 && null != e9.panBy) {
      var d2 = e9.panBy, h2 = i2.pan();
      e9.pan = { x: h2.x + d2.x, y: h2.y + d2.y };
    }
    var p2 = e9.center || e9.centre;
    if (a2 && null != p2) {
      var f2 = i2.getCenterPan(p2.eles, e9.zoom);
      null != f2 && (e9.pan = f2);
    }
    if (a2 && null != e9.fit) {
      var g2 = e9.fit, v2 = i2.getFitViewport(g2.eles || g2.boundingBox, g2.padding);
      null != v2 && (e9.pan = v2.pan, e9.zoom = v2.zoom);
    }
    if (a2 && y(e9.zoom)) {
      var m2 = i2.getZoomedViewport(e9.zoom);
      null != m2 ? (m2.zoomed && (e9.zoom = m2.zoom), m2.panned && (e9.pan = m2.pan)) : e9.zoom = null;
    }
    return new pr(r2[0], e9);
  };
}, animate: function() {
  return function(e9, t3) {
    var n2 = void 0 !== this.length ? this : [this];
    if (!(this._private.cy || this).styleEnabled())
      return this;
    t3 && (e9 = I({}, e9, t3));
    for (var r2 = 0; r2 < n2.length; r2++) {
      var i2 = n2[r2], a2 = i2.animated() && (void 0 === e9.queue || e9.queue);
      i2.animation(e9, a2 ? { queue: true } : void 0).play();
    }
    return this;
  };
}, stop: function() {
  return function(e9, t3) {
    var n2 = void 0 !== this.length ? this : [this], r2 = this._private.cy || this;
    if (!r2.styleEnabled())
      return this;
    for (var i2 = 0; i2 < n2.length; i2++) {
      for (var a2 = n2[i2]._private, o2 = a2.animation.current, s2 = 0; s2 < o2.length; s2++) {
        var l2 = o2[s2]._private;
        t3 && (l2.duration = 0);
      }
      e9 && (a2.animation.queue = []), t3 || (a2.animation.current = []);
    }
    return r2.notify("draw"), this;
  };
} };
var vr = Array.isArray;
var yr = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/;
var mr = /^\w*$/;
var br = function(e9, t3) {
  if (vr(e9))
    return false;
  var n2 = typeof e9;
  return !("number" != n2 && "symbol" != n2 && "boolean" != n2 && null != e9 && !oe(e9)) || (mr.test(e9) || !yr.test(e9) || null != t3 && e9 in Object(t3));
};
var xr;
var wr = function(e9) {
  if (!V(e9))
    return false;
  var t3 = ie(e9);
  return "[object Function]" == t3 || "[object GeneratorFunction]" == t3 || "[object AsyncFunction]" == t3 || "[object Proxy]" == t3;
};
var Er = Y["__core-js_shared__"];
var kr = (xr = /[^.]+$/.exec(Er && Er.keys && Er.keys.IE_PROTO || "")) ? "Symbol(src)_1." + xr : "";
var Cr = function(e9) {
  return !!kr && kr in e9;
};
var Sr = Function.prototype.toString;
var Pr = function(e9) {
  if (null != e9) {
    try {
      return Sr.call(e9);
    } catch (e10) {
    }
    try {
      return e9 + "";
    } catch (e10) {
    }
  }
  return "";
};
var Dr = /^\[object .+?Constructor\]$/;
var Tr = Function.prototype;
var _r = Object.prototype;
var Mr = Tr.toString;
var Br = _r.hasOwnProperty;
var Nr = RegExp("^" + Mr.call(Br).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
var zr = function(e9) {
  return !(!V(e9) || Cr(e9)) && (wr(e9) ? Nr : Dr).test(Pr(e9));
};
var Ir = function(e9, t3) {
  return null == e9 ? void 0 : e9[t3];
};
var Ar = function(e9, t3) {
  var n2 = Ir(e9, t3);
  return zr(n2) ? n2 : void 0;
};
var Lr = Ar(Object, "create");
var Or = function() {
  this.__data__ = Lr ? Lr(null) : {}, this.size = 0;
};
var Rr = function(e9) {
  var t3 = this.has(e9) && delete this.__data__[e9];
  return this.size -= t3 ? 1 : 0, t3;
};
var Vr = Object.prototype.hasOwnProperty;
var Fr = function(e9) {
  var t3 = this.__data__;
  if (Lr) {
    var n2 = t3[e9];
    return "__lodash_hash_undefined__" === n2 ? void 0 : n2;
  }
  return Vr.call(t3, e9) ? t3[e9] : void 0;
};
var jr = Object.prototype.hasOwnProperty;
var qr = function(e9) {
  var t3 = this.__data__;
  return Lr ? void 0 !== t3[e9] : jr.call(t3, e9);
};
var Yr = function(e9, t3) {
  var n2 = this.__data__;
  return this.size += this.has(e9) ? 0 : 1, n2[e9] = Lr && void 0 === t3 ? "__lodash_hash_undefined__" : t3, this;
};
function Xr(e9) {
  var t3 = -1, n2 = null == e9 ? 0 : e9.length;
  for (this.clear(); ++t3 < n2; ) {
    var r2 = e9[t3];
    this.set(r2[0], r2[1]);
  }
}
Xr.prototype.clear = Or, Xr.prototype.delete = Rr, Xr.prototype.get = Fr, Xr.prototype.has = qr, Xr.prototype.set = Yr;
var Wr = Xr;
var Hr = function() {
  this.__data__ = [], this.size = 0;
};
var Kr = function(e9, t3) {
  return e9 === t3 || e9 != e9 && t3 != t3;
};
var Gr = function(e9, t3) {
  for (var n2 = e9.length; n2--; )
    if (Kr(e9[n2][0], t3))
      return n2;
  return -1;
};
var Ur = Array.prototype.splice;
var Zr = function(e9) {
  var t3 = this.__data__, n2 = Gr(t3, e9);
  return !(n2 < 0) && (n2 == t3.length - 1 ? t3.pop() : Ur.call(t3, n2, 1), --this.size, true);
};
var $r = function(e9) {
  var t3 = this.__data__, n2 = Gr(t3, e9);
  return n2 < 0 ? void 0 : t3[n2][1];
};
var Qr = function(e9) {
  return Gr(this.__data__, e9) > -1;
};
var Jr = function(e9, t3) {
  var n2 = this.__data__, r2 = Gr(n2, e9);
  return r2 < 0 ? (++this.size, n2.push([e9, t3])) : n2[r2][1] = t3, this;
};
function ei(e9) {
  var t3 = -1, n2 = null == e9 ? 0 : e9.length;
  for (this.clear(); ++t3 < n2; ) {
    var r2 = e9[t3];
    this.set(r2[0], r2[1]);
  }
}
ei.prototype.clear = Hr, ei.prototype.delete = Zr, ei.prototype.get = $r, ei.prototype.has = Qr, ei.prototype.set = Jr;
var ti = ei;
var ni = Ar(Y, "Map");
var ri = function() {
  this.size = 0, this.__data__ = { hash: new Wr(), map: new (ni || ti)(), string: new Wr() };
};
var ii = function(e9) {
  var t3 = typeof e9;
  return "string" == t3 || "number" == t3 || "symbol" == t3 || "boolean" == t3 ? "__proto__" !== e9 : null === e9;
};
var ai = function(e9, t3) {
  var n2 = e9.__data__;
  return ii(t3) ? n2["string" == typeof t3 ? "string" : "hash"] : n2.map;
};
var oi = function(e9) {
  var t3 = ai(this, e9).delete(e9);
  return this.size -= t3 ? 1 : 0, t3;
};
var si = function(e9) {
  return ai(this, e9).get(e9);
};
var li = function(e9) {
  return ai(this, e9).has(e9);
};
var ui = function(e9, t3) {
  var n2 = ai(this, e9), r2 = n2.size;
  return n2.set(e9, t3), this.size += n2.size == r2 ? 0 : 1, this;
};
function ci(e9) {
  var t3 = -1, n2 = null == e9 ? 0 : e9.length;
  for (this.clear(); ++t3 < n2; ) {
    var r2 = e9[t3];
    this.set(r2[0], r2[1]);
  }
}
ci.prototype.clear = ri, ci.prototype.delete = oi, ci.prototype.get = si, ci.prototype.has = li, ci.prototype.set = ui;
var di = ci;
function hi(e9, t3) {
  if ("function" != typeof e9 || null != t3 && "function" != typeof t3)
    throw new TypeError("Expected a function");
  var n2 = function() {
    var r2 = arguments, i2 = t3 ? t3.apply(this, r2) : r2[0], a2 = n2.cache;
    if (a2.has(i2))
      return a2.get(i2);
    var o2 = e9.apply(this, r2);
    return n2.cache = a2.set(i2, o2) || a2, o2;
  };
  return n2.cache = new (hi.Cache || di)(), n2;
}
hi.Cache = di;
var pi = hi;
var fi = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
var gi = /\\(\\)?/g;
var vi = function(e9) {
  var t3 = pi(e9, function(e10) {
    return 500 === n2.size && n2.clear(), e10;
  }), n2 = t3.cache;
  return t3;
}(function(e9) {
  var t3 = [];
  return 46 === e9.charCodeAt(0) && t3.push(""), e9.replace(fi, function(e10, n2, r2, i2) {
    t3.push(r2 ? i2.replace(gi, "$1") : n2 || e10);
  }), t3;
});
var yi = function(e9, t3) {
  for (var n2 = -1, r2 = null == e9 ? 0 : e9.length, i2 = Array(r2); ++n2 < r2; )
    i2[n2] = t3(e9[n2], n2, e9);
  return i2;
};
var mi = U ? U.prototype : void 0;
var bi = mi ? mi.toString : void 0;
var xi = function e4(t3) {
  if ("string" == typeof t3)
    return t3;
  if (vr(t3))
    return yi(t3, e4) + "";
  if (oe(t3))
    return bi ? bi.call(t3) : "";
  var n2 = t3 + "";
  return "0" == n2 && 1 / t3 == -1 / 0 ? "-0" : n2;
};
var wi = function(e9) {
  return null == e9 ? "" : xi(e9);
};
var Ei = function(e9, t3) {
  return vr(e9) ? e9 : br(e9, t3) ? [e9] : vi(wi(e9));
};
var ki = function(e9) {
  if ("string" == typeof e9 || oe(e9))
    return e9;
  var t3 = e9 + "";
  return "0" == t3 && 1 / e9 == -1 / 0 ? "-0" : t3;
};
var Ci = function(e9, t3) {
  for (var n2 = 0, r2 = (t3 = Ei(t3, e9)).length; null != e9 && n2 < r2; )
    e9 = e9[ki(t3[n2++])];
  return n2 && n2 == r2 ? e9 : void 0;
};
var Si = function(e9, t3, n2) {
  var r2 = null == e9 ? void 0 : Ci(e9, t3);
  return void 0 === r2 ? n2 : r2;
};
var Pi = function() {
  try {
    var e9 = Ar(Object, "defineProperty");
    return e9({}, "", {}), e9;
  } catch (e10) {
  }
}();
var Di = function(e9, t3, n2) {
  "__proto__" == t3 && Pi ? Pi(e9, t3, { configurable: true, enumerable: true, value: n2, writable: true }) : e9[t3] = n2;
};
var Ti = Object.prototype.hasOwnProperty;
var _i = function(e9, t3, n2) {
  var r2 = e9[t3];
  Ti.call(e9, t3) && Kr(r2, n2) && (void 0 !== n2 || t3 in e9) || Di(e9, t3, n2);
};
var Mi = /^(?:0|[1-9]\d*)$/;
var Bi = function(e9, t3) {
  var n2 = typeof e9;
  return !!(t3 = null == t3 ? 9007199254740991 : t3) && ("number" == n2 || "symbol" != n2 && Mi.test(e9)) && e9 > -1 && e9 % 1 == 0 && e9 < t3;
};
var Ni = function(e9, t3, n2, r2) {
  if (!V(e9))
    return e9;
  for (var i2 = -1, a2 = (t3 = Ei(t3, e9)).length, o2 = a2 - 1, s2 = e9; null != s2 && ++i2 < a2; ) {
    var l2 = ki(t3[i2]), u2 = n2;
    if ("__proto__" === l2 || "constructor" === l2 || "prototype" === l2)
      return e9;
    if (i2 != o2) {
      var c2 = s2[l2];
      void 0 === (u2 = r2 ? r2(c2, l2, s2) : void 0) && (u2 = V(c2) ? c2 : Bi(t3[i2 + 1]) ? [] : {});
    }
    _i(s2, l2, u2), s2 = s2[l2];
  }
  return e9;
};
var zi = function(e9, t3, n2) {
  return null == e9 ? e9 : Ni(e9, t3, n2);
};
var Ii = function(e9, t3) {
  var n2 = -1, r2 = e9.length;
  for (t3 || (t3 = Array(r2)); ++n2 < r2; )
    t3[n2] = e9[n2];
  return t3;
};
var Ai = function(e9) {
  return vr(e9) ? yi(e9, ki) : oe(e9) ? [e9] : Ii(vi(wi(e9)));
};
var Li = {};
[gr, { data: function(e9) {
  return e9 = I({}, { field: "data", bindingEvent: "data", allowBinding: false, allowSetting: false, allowGetting: false, settingEvent: "data", settingTriggersEvent: false, triggerFnName: "trigger", immutableKeys: {}, updateStyle: false, beforeGet: function(e10) {
  }, beforeSet: function(e10, t3) {
  }, onSet: function(e10) {
  }, canSet: function(e10) {
    return true;
  } }, e9), function(t3, n2) {
    var r2 = e9, a2 = void 0 !== this.length, o2 = a2 ? this : [this], s2 = a2 ? this[0] : this;
    if (f(t3)) {
      var l2, u2 = -1 !== t3.indexOf(".") && Ai(t3);
      if (r2.allowGetting && void 0 === n2)
        return s2 && (r2.beforeGet(s2), l2 = u2 && void 0 === s2._private[r2.field][t3] ? Si(s2._private[r2.field], u2) : s2._private[r2.field][t3]), l2;
      if (r2.allowSetting && void 0 !== n2 && !r2.immutableKeys[t3]) {
        var c2 = i({}, t3, n2);
        r2.beforeSet(this, c2);
        for (var d2 = 0, h2 = o2.length; d2 < h2; d2++) {
          var p2 = o2[d2];
          r2.canSet(p2) && (u2 && void 0 === s2._private[r2.field][t3] ? zi(p2._private[r2.field], u2, n2) : p2._private[r2.field][t3] = n2);
        }
        r2.updateStyle && this.updateStyle(), r2.onSet(this), r2.settingTriggersEvent && this[r2.triggerFnName](r2.settingEvent);
      }
    } else if (r2.allowSetting && y(t3)) {
      var v2, m2, b2 = t3, x2 = Object.keys(b2);
      r2.beforeSet(this, b2);
      for (var w2 = 0; w2 < x2.length; w2++) {
        if (m2 = b2[v2 = x2[w2]], !r2.immutableKeys[v2])
          for (var E2 = 0; E2 < o2.length; E2++) {
            var k2 = o2[E2];
            r2.canSet(k2) && (k2._private[r2.field][v2] = m2);
          }
      }
      r2.updateStyle && this.updateStyle(), r2.onSet(this), r2.settingTriggersEvent && this[r2.triggerFnName](r2.settingEvent);
    } else if (r2.allowBinding && g(t3)) {
      var C2 = t3;
      this.on(r2.bindingEvent, C2);
    } else if (r2.allowGetting && void 0 === t3) {
      var S2;
      return s2 && (r2.beforeGet(s2), S2 = s2._private[r2.field]), S2;
    }
    return this;
  };
}, removeData: function(e9) {
  return e9 = I({}, { field: "data", event: "data", triggerFnName: "trigger", triggerEvent: false, immutableKeys: {} }, e9), function(t3) {
    var n2 = e9, r2 = void 0 !== this.length ? this : [this];
    if (f(t3)) {
      for (var i2 = t3.split(/\s+/), a2 = i2.length, o2 = 0; o2 < a2; o2++) {
        var s2 = i2[o2];
        if (!S(s2)) {
          if (!n2.immutableKeys[s2])
            for (var l2 = 0, u2 = r2.length; l2 < u2; l2++)
              r2[l2]._private[n2.field][s2] = void 0;
        }
      }
      n2.triggerEvent && this[n2.triggerFnName](n2.event);
    } else if (void 0 === t3) {
      for (var c2 = 0, d2 = r2.length; c2 < d2; c2++)
        for (var h2 = r2[c2]._private[n2.field], p2 = Object.keys(h2), g2 = 0; g2 < p2.length; g2++) {
          var v2 = p2[g2];
          !n2.immutableKeys[v2] && (h2[v2] = void 0);
        }
      n2.triggerEvent && this[n2.triggerFnName](n2.event);
    }
    return this;
  };
} }, { eventAliasesOn: function(e9) {
  var t3 = e9;
  t3.addListener = t3.listen = t3.bind = t3.on, t3.unlisten = t3.unbind = t3.off = t3.removeListener, t3.trigger = t3.emit, t3.pon = t3.promiseOn = function(e10, t4) {
    var n2 = this, r2 = Array.prototype.slice.call(arguments, 0);
    return new hr(function(e11, t5) {
      var i2 = r2.concat([function(t6) {
        n2.off.apply(n2, a2), e11(t6);
      }]), a2 = i2.concat([]);
      n2.on.apply(n2, i2);
    });
  };
} }].forEach(function(e9) {
  I(Li, e9);
});
var Oi = { animate: Li.animate(), animation: Li.animation(), animated: Li.animated(), clearQueue: Li.clearQueue(), delay: Li.delay(), delayAnimation: Li.delayAnimation(), stop: Li.stop() };
var Ri = { classes: function(e9) {
  if (void 0 === e9) {
    var t3 = [];
    return this[0]._private.classes.forEach(function(e10) {
      return t3.push(e10);
    }), t3;
  }
  v(e9) || (e9 = (e9 || "").match(/\S+/g) || []);
  for (var n2 = [], r2 = new $e(e9), i2 = 0; i2 < this.length; i2++) {
    for (var a2 = this[i2], o2 = a2._private, s2 = o2.classes, l2 = false, u2 = 0; u2 < e9.length; u2++) {
      var c2 = e9[u2];
      if (!s2.has(c2)) {
        l2 = true;
        break;
      }
    }
    l2 || (l2 = s2.size !== e9.length), l2 && (o2.classes = r2, n2.push(a2));
  }
  return n2.length > 0 && this.spawn(n2).updateStyle().emit("class"), this;
}, addClass: function(e9) {
  return this.toggleClass(e9, true);
}, hasClass: function(e9) {
  var t3 = this[0];
  return null != t3 && t3._private.classes.has(e9);
}, toggleClass: function(e9, t3) {
  v(e9) || (e9 = e9.match(/\S+/g) || []);
  for (var n2 = void 0 === t3, r2 = [], i2 = 0, a2 = this.length; i2 < a2; i2++)
    for (var o2 = this[i2], s2 = o2._private.classes, l2 = false, u2 = 0; u2 < e9.length; u2++) {
      var c2 = e9[u2], d2 = s2.has(c2), h2 = false;
      t3 || n2 && !d2 ? (s2.add(c2), h2 = true) : (!t3 || n2 && d2) && (s2.delete(c2), h2 = true), !l2 && h2 && (r2.push(o2), l2 = true);
    }
  return r2.length > 0 && this.spawn(r2).updateStyle().emit("class"), this;
}, removeClass: function(e9) {
  return this.toggleClass(e9, false);
}, flashClass: function(e9, t3) {
  var n2 = this;
  if (null == t3)
    t3 = 250;
  else if (0 === t3)
    return n2;
  return n2.addClass(e9), setTimeout(function() {
    n2.removeClass(e9);
  }, t3), n2;
} };
Ri.className = Ri.classNames = Ri.classes;
var Vi = { metaChar: "[\\!\\\"\\#\\$\\%\\&\\'\\(\\)\\*\\+\\,\\.\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\|\\}\\~]", comparatorOp: "=|\\!=|>|>=|<|<=|\\$=|\\^=|\\*=", boolOp: "\\?|\\!|\\^", string: `"(?:\\\\"|[^"])*"|'(?:\\\\'|[^'])*'`, number: N, meta: "degree|indegree|outdegree", separator: "\\s*,\\s*", descendant: "\\s+", child: "\\s+>\\s+", subject: "\\$", group: "node|edge|\\*", directedEdge: "\\s+->\\s+", undirectedEdge: "\\s+<->\\s+" };
Vi.variable = "(?:[\\w-.]|(?:\\\\" + Vi.metaChar + "))+", Vi.className = "(?:[\\w-]|(?:\\\\" + Vi.metaChar + "))+", Vi.value = Vi.string + "|" + Vi.number, Vi.id = Vi.variable, function() {
  var e9, t3, n2;
  for (e9 = Vi.comparatorOp.split("|"), n2 = 0; n2 < e9.length; n2++)
    t3 = e9[n2], Vi.comparatorOp += "|@" + t3;
  for (e9 = Vi.comparatorOp.split("|"), n2 = 0; n2 < e9.length; n2++)
    (t3 = e9[n2]).indexOf("!") >= 0 || "=" !== t3 && (Vi.comparatorOp += "|\\!" + t3);
}();
var Fi = 0;
var ji = 1;
var qi = 2;
var Yi = 3;
var Xi = 4;
var Wi = 5;
var Hi = 6;
var Ki = 7;
var Gi = 8;
var Ui = 9;
var Zi = 10;
var $i = 11;
var Qi = 12;
var Ji = 13;
var ea = 14;
var ta = 15;
var na = 16;
var ra = 17;
var ia = 18;
var aa = 19;
var oa = 20;
var sa = [{ selector: ":selected", matches: function(e9) {
  return e9.selected();
} }, { selector: ":unselected", matches: function(e9) {
  return !e9.selected();
} }, { selector: ":selectable", matches: function(e9) {
  return e9.selectable();
} }, { selector: ":unselectable", matches: function(e9) {
  return !e9.selectable();
} }, { selector: ":locked", matches: function(e9) {
  return e9.locked();
} }, { selector: ":unlocked", matches: function(e9) {
  return !e9.locked();
} }, { selector: ":visible", matches: function(e9) {
  return e9.visible();
} }, { selector: ":hidden", matches: function(e9) {
  return !e9.visible();
} }, { selector: ":transparent", matches: function(e9) {
  return e9.transparent();
} }, { selector: ":grabbed", matches: function(e9) {
  return e9.grabbed();
} }, { selector: ":free", matches: function(e9) {
  return !e9.grabbed();
} }, { selector: ":removed", matches: function(e9) {
  return e9.removed();
} }, { selector: ":inside", matches: function(e9) {
  return !e9.removed();
} }, { selector: ":grabbable", matches: function(e9) {
  return e9.grabbable();
} }, { selector: ":ungrabbable", matches: function(e9) {
  return !e9.grabbable();
} }, { selector: ":animated", matches: function(e9) {
  return e9.animated();
} }, { selector: ":unanimated", matches: function(e9) {
  return !e9.animated();
} }, { selector: ":parent", matches: function(e9) {
  return e9.isParent();
} }, { selector: ":childless", matches: function(e9) {
  return e9.isChildless();
} }, { selector: ":child", matches: function(e9) {
  return e9.isChild();
} }, { selector: ":orphan", matches: function(e9) {
  return e9.isOrphan();
} }, { selector: ":nonorphan", matches: function(e9) {
  return e9.isChild();
} }, { selector: ":compound", matches: function(e9) {
  return e9.isNode() ? e9.isParent() : e9.source().isParent() || e9.target().isParent();
} }, { selector: ":loop", matches: function(e9) {
  return e9.isLoop();
} }, { selector: ":simple", matches: function(e9) {
  return e9.isSimple();
} }, { selector: ":active", matches: function(e9) {
  return e9.active();
} }, { selector: ":inactive", matches: function(e9) {
  return !e9.active();
} }, { selector: ":backgrounding", matches: function(e9) {
  return e9.backgrounding();
} }, { selector: ":nonbackgrounding", matches: function(e9) {
  return !e9.backgrounding();
} }].sort(function(e9, t3) {
  return function(e10, t4) {
    return -1 * z(e10, t4);
  }(e9.selector, t3.selector);
});
var la = function() {
  for (var e9, t3 = {}, n2 = 0; n2 < sa.length; n2++)
    t3[(e9 = sa[n2]).selector] = e9.matches;
  return t3;
}();
var ua = "(" + sa.map(function(e9) {
  return e9.selector;
}).join("|") + ")";
var ca = function(e9) {
  return e9.replace(new RegExp("\\\\(" + Vi.metaChar + ")", "g"), function(e10, t3) {
    return t3;
  });
};
var da = function(e9, t3, n2) {
  e9[e9.length - 1] = n2;
};
var ha = [{ name: "group", query: true, regex: "(" + Vi.group + ")", populate: function(e9, t3, n2) {
  var r2 = a(n2, 1)[0];
  t3.checks.push({ type: Fi, value: "*" === r2 ? r2 : r2 + "s" });
} }, { name: "state", query: true, regex: ua, populate: function(e9, t3, n2) {
  var r2 = a(n2, 1)[0];
  t3.checks.push({ type: Ki, value: r2 });
} }, { name: "id", query: true, regex: "\\#(" + Vi.id + ")", populate: function(e9, t3, n2) {
  var r2 = a(n2, 1)[0];
  t3.checks.push({ type: Gi, value: ca(r2) });
} }, { name: "className", query: true, regex: "\\.(" + Vi.className + ")", populate: function(e9, t3, n2) {
  var r2 = a(n2, 1)[0];
  t3.checks.push({ type: Ui, value: ca(r2) });
} }, { name: "dataExists", query: true, regex: "\\[\\s*(" + Vi.variable + ")\\s*\\]", populate: function(e9, t3, n2) {
  var r2 = a(n2, 1)[0];
  t3.checks.push({ type: Xi, field: ca(r2) });
} }, { name: "dataCompare", query: true, regex: "\\[\\s*(" + Vi.variable + ")\\s*(" + Vi.comparatorOp + ")\\s*(" + Vi.value + ")\\s*\\]", populate: function(e9, t3, n2) {
  var r2 = a(n2, 3), i2 = r2[0], o2 = r2[1], s2 = r2[2];
  s2 = null != new RegExp("^" + Vi.string + "$").exec(s2) ? s2.substring(1, s2.length - 1) : parseFloat(s2), t3.checks.push({ type: Yi, field: ca(i2), operator: o2, value: s2 });
} }, { name: "dataBool", query: true, regex: "\\[\\s*(" + Vi.boolOp + ")\\s*(" + Vi.variable + ")\\s*\\]", populate: function(e9, t3, n2) {
  var r2 = a(n2, 2), i2 = r2[0], o2 = r2[1];
  t3.checks.push({ type: Wi, field: ca(o2), operator: i2 });
} }, { name: "metaCompare", query: true, regex: "\\[\\[\\s*(" + Vi.meta + ")\\s*(" + Vi.comparatorOp + ")\\s*(" + Vi.number + ")\\s*\\]\\]", populate: function(e9, t3, n2) {
  var r2 = a(n2, 3), i2 = r2[0], o2 = r2[1], s2 = r2[2];
  t3.checks.push({ type: Hi, field: ca(i2), operator: o2, value: parseFloat(s2) });
} }, { name: "nextQuery", separator: true, regex: Vi.separator, populate: function(e9, t3) {
  var n2 = e9.currentSubject, r2 = e9.edgeCount, i2 = e9.compoundCount, a2 = e9[e9.length - 1];
  return null != n2 && (a2.subject = n2, e9.currentSubject = null), a2.edgeCount = r2, a2.compoundCount = i2, e9.edgeCount = 0, e9.compoundCount = 0, e9[e9.length++] = { checks: [] };
} }, { name: "directedEdge", separator: true, regex: Vi.directedEdge, populate: function(e9, t3) {
  if (null == e9.currentSubject) {
    var n2 = { checks: [] }, r2 = t3, i2 = { checks: [] };
    return n2.checks.push({ type: $i, source: r2, target: i2 }), da(e9, 0, n2), e9.edgeCount++, i2;
  }
  var a2 = { checks: [] }, o2 = t3, s2 = { checks: [] };
  return a2.checks.push({ type: Qi, source: o2, target: s2 }), da(e9, 0, a2), e9.edgeCount++, s2;
} }, { name: "undirectedEdge", separator: true, regex: Vi.undirectedEdge, populate: function(e9, t3) {
  if (null == e9.currentSubject) {
    var n2 = { checks: [] }, r2 = t3, i2 = { checks: [] };
    return n2.checks.push({ type: Zi, nodes: [r2, i2] }), da(e9, 0, n2), e9.edgeCount++, i2;
  }
  var a2 = { checks: [] }, o2 = t3, s2 = { checks: [] };
  return a2.checks.push({ type: ea, node: o2, neighbor: s2 }), da(e9, 0, a2), s2;
} }, { name: "child", separator: true, regex: Vi.child, populate: function(e9, t3) {
  if (null == e9.currentSubject) {
    var n2 = { checks: [] }, r2 = { checks: [] }, i2 = e9[e9.length - 1];
    return n2.checks.push({ type: ta, parent: i2, child: r2 }), da(e9, 0, n2), e9.compoundCount++, r2;
  }
  if (e9.currentSubject === t3) {
    var a2 = { checks: [] }, o2 = e9[e9.length - 1], s2 = { checks: [] }, l2 = { checks: [] }, u2 = { checks: [] }, c2 = { checks: [] };
    return a2.checks.push({ type: aa, left: o2, right: s2, subject: l2 }), l2.checks = t3.checks, t3.checks = [{ type: oa }], c2.checks.push({ type: oa }), s2.checks.push({ type: ra, parent: c2, child: u2 }), da(e9, 0, a2), e9.currentSubject = l2, e9.compoundCount++, u2;
  }
  var d2 = { checks: [] }, h2 = { checks: [] }, p2 = [{ type: ra, parent: d2, child: h2 }];
  return d2.checks = t3.checks, t3.checks = p2, e9.compoundCount++, h2;
} }, { name: "descendant", separator: true, regex: Vi.descendant, populate: function(e9, t3) {
  if (null == e9.currentSubject) {
    var n2 = { checks: [] }, r2 = { checks: [] }, i2 = e9[e9.length - 1];
    return n2.checks.push({ type: na, ancestor: i2, descendant: r2 }), da(e9, 0, n2), e9.compoundCount++, r2;
  }
  if (e9.currentSubject === t3) {
    var a2 = { checks: [] }, o2 = e9[e9.length - 1], s2 = { checks: [] }, l2 = { checks: [] }, u2 = { checks: [] }, c2 = { checks: [] };
    return a2.checks.push({ type: aa, left: o2, right: s2, subject: l2 }), l2.checks = t3.checks, t3.checks = [{ type: oa }], c2.checks.push({ type: oa }), s2.checks.push({ type: ia, ancestor: c2, descendant: u2 }), da(e9, 0, a2), e9.currentSubject = l2, e9.compoundCount++, u2;
  }
  var d2 = { checks: [] }, h2 = { checks: [] }, p2 = [{ type: ia, ancestor: d2, descendant: h2 }];
  return d2.checks = t3.checks, t3.checks = p2, e9.compoundCount++, h2;
} }, { name: "subject", modifier: true, regex: Vi.subject, populate: function(e9, t3) {
  if (null != e9.currentSubject && e9.currentSubject !== t3)
    return Ve("Redefinition of subject in selector `" + e9.toString() + "`"), false;
  e9.currentSubject = t3;
  var n2 = e9[e9.length - 1].checks[0], r2 = null == n2 ? null : n2.type;
  r2 === $i ? n2.type = Ji : r2 === Zi && (n2.type = ea, n2.node = n2.nodes[1], n2.neighbor = n2.nodes[0], n2.nodes = null);
} }];
ha.forEach(function(e9) {
  return e9.regexObj = new RegExp("^" + e9.regex);
});
var pa = function(e9) {
  for (var t3, n2, r2, i2 = 0; i2 < ha.length; i2++) {
    var a2 = ha[i2], o2 = a2.name, s2 = e9.match(a2.regexObj);
    if (null != s2) {
      n2 = s2, t3 = a2, r2 = o2;
      var l2 = s2[0];
      e9 = e9.substring(l2.length);
      break;
    }
  }
  return { expr: t3, match: n2, name: r2, remaining: e9 };
};
var fa = { parse: function(e9) {
  var t3 = this.inputText = e9, n2 = this[0] = { checks: [] };
  for (this.length = 1, t3 = function(e10) {
    var t4 = e10.match(/^\s+/);
    if (t4) {
      var n3 = t4[0];
      e10 = e10.substring(n3.length);
    }
    return e10;
  }(t3); ; ) {
    var r2 = pa(t3);
    if (null == r2.expr)
      return Ve("The selector `" + e9 + "`is invalid"), false;
    var i2 = r2.match.slice(1), a2 = r2.expr.populate(this, n2, i2);
    if (false === a2)
      return false;
    if (null != a2 && (n2 = a2), (t3 = r2.remaining).match(/^\s*$/))
      break;
  }
  var o2 = this[this.length - 1];
  null != this.currentSubject && (o2.subject = this.currentSubject), o2.edgeCount = this.edgeCount, o2.compoundCount = this.compoundCount;
  for (var s2 = 0; s2 < this.length; s2++) {
    var l2 = this[s2];
    if (l2.compoundCount > 0 && l2.edgeCount > 0)
      return Ve("The selector `" + e9 + "` is invalid because it uses both a compound selector and an edge selector"), false;
    if (l2.edgeCount > 1)
      return Ve("The selector `" + e9 + "` is invalid because it uses multiple edge selectors"), false;
    1 === l2.edgeCount && Ve("The selector `" + e9 + "` is deprecated.  Edge selectors do not take effect on changes to source and target nodes after an edge is added, for performance reasons.  Use a class or data selector on edges instead, updating the class or data of an edge when your app detects a change in source or target nodes.");
  }
  return true;
}, toString: function() {
  if (null != this.toStringCache)
    return this.toStringCache;
  for (var e9 = function(e10) {
    return null == e10 ? "" : e10;
  }, t3 = function(t4) {
    return f(t4) ? '"' + t4 + '"' : e9(t4);
  }, n2 = function(e10) {
    return " " + e10 + " ";
  }, r2 = function(r3, a3) {
    var o3 = r3.type, s3 = r3.value;
    switch (o3) {
      case Fi:
        var l2 = e9(s3);
        return l2.substring(0, l2.length - 1);
      case Yi:
        var u2 = r3.field, c2 = r3.operator;
        return "[" + u2 + n2(e9(c2)) + t3(s3) + "]";
      case Wi:
        var d2 = r3.operator, h2 = r3.field;
        return "[" + e9(d2) + h2 + "]";
      case Xi:
        return "[" + r3.field + "]";
      case Hi:
        var p2 = r3.operator;
        return "[[" + r3.field + n2(e9(p2)) + t3(s3) + "]]";
      case Ki:
        return s3;
      case Gi:
        return "#" + s3;
      case Ui:
        return "." + s3;
      case ra:
      case ta:
        return i2(r3.parent, a3) + n2(">") + i2(r3.child, a3);
      case ia:
      case na:
        return i2(r3.ancestor, a3) + " " + i2(r3.descendant, a3);
      case aa:
        var f2 = i2(r3.left, a3), g2 = i2(r3.subject, a3), v2 = i2(r3.right, a3);
        return f2 + (f2.length > 0 ? " " : "") + g2 + v2;
      case oa:
        return "";
    }
  }, i2 = function(e10, t4) {
    return e10.checks.reduce(function(n3, i3, a3) {
      return n3 + (t4 === e10 && 0 === a3 ? "$" : "") + r2(i3, t4);
    }, "");
  }, a2 = "", o2 = 0; o2 < this.length; o2++) {
    var s2 = this[o2];
    a2 += i2(s2, s2.subject), this.length > 1 && o2 < this.length - 1 && (a2 += ", ");
  }
  return this.toStringCache = a2, a2;
} };
var ga = function(e9, t3, n2) {
  var r2, i2, a2, o2 = f(e9), s2 = m(e9), l2 = f(n2), u2 = false, c2 = false, d2 = false;
  switch (t3.indexOf("!") >= 0 && (t3 = t3.replace("!", ""), c2 = true), t3.indexOf("@") >= 0 && (t3 = t3.replace("@", ""), u2 = true), (o2 || l2 || u2) && (i2 = o2 || s2 ? "" + e9 : "", a2 = "" + n2), u2 && (e9 = i2 = i2.toLowerCase(), n2 = a2 = a2.toLowerCase()), t3) {
    case "*=":
      r2 = i2.indexOf(a2) >= 0;
      break;
    case "$=":
      r2 = i2.indexOf(a2, i2.length - a2.length) >= 0;
      break;
    case "^=":
      r2 = 0 === i2.indexOf(a2);
      break;
    case "=":
      r2 = e9 === n2;
      break;
    case ">":
      d2 = true, r2 = e9 > n2;
      break;
    case ">=":
      d2 = true, r2 = e9 >= n2;
      break;
    case "<":
      d2 = true, r2 = e9 < n2;
      break;
    case "<=":
      d2 = true, r2 = e9 <= n2;
      break;
    default:
      r2 = false;
  }
  return !c2 || null == e9 && d2 || (r2 = !r2), r2;
};
var va = function(e9, t3) {
  return e9.data(t3);
};
var ya = [];
var ma = function(e9, t3) {
  return e9.checks.every(function(e10) {
    return ya[e10.type](e10, t3);
  });
};
ya[Fi] = function(e9, t3) {
  var n2 = e9.value;
  return "*" === n2 || n2 === t3.group();
}, ya[Ki] = function(e9, t3) {
  return function(e10, t4) {
    return la[e10](t4);
  }(e9.value, t3);
}, ya[Gi] = function(e9, t3) {
  var n2 = e9.value;
  return t3.id() === n2;
}, ya[Ui] = function(e9, t3) {
  var n2 = e9.value;
  return t3.hasClass(n2);
}, ya[Hi] = function(e9, t3) {
  var n2 = e9.field, r2 = e9.operator, i2 = e9.value;
  return ga(function(e10, t4) {
    return e10[t4]();
  }(t3, n2), r2, i2);
}, ya[Yi] = function(e9, t3) {
  var n2 = e9.field, r2 = e9.operator, i2 = e9.value;
  return ga(va(t3, n2), r2, i2);
}, ya[Wi] = function(e9, t3) {
  var n2 = e9.field, r2 = e9.operator;
  return function(e10, t4) {
    switch (t4) {
      case "?":
        return !!e10;
      case "!":
        return !e10;
      case "^":
        return void 0 === e10;
    }
  }(va(t3, n2), r2);
}, ya[Xi] = function(e9, t3) {
  var n2 = e9.field;
  return e9.operator, void 0 !== va(t3, n2);
}, ya[Zi] = function(e9, t3) {
  var n2 = e9.nodes[0], r2 = e9.nodes[1], i2 = t3.source(), a2 = t3.target();
  return ma(n2, i2) && ma(r2, a2) || ma(r2, i2) && ma(n2, a2);
}, ya[ea] = function(e9, t3) {
  return ma(e9.node, t3) && t3.neighborhood().some(function(t4) {
    return t4.isNode() && ma(e9.neighbor, t4);
  });
}, ya[$i] = function(e9, t3) {
  return ma(e9.source, t3.source()) && ma(e9.target, t3.target());
}, ya[Qi] = function(e9, t3) {
  return ma(e9.source, t3) && t3.outgoers().some(function(t4) {
    return t4.isNode() && ma(e9.target, t4);
  });
}, ya[Ji] = function(e9, t3) {
  return ma(e9.target, t3) && t3.incomers().some(function(t4) {
    return t4.isNode() && ma(e9.source, t4);
  });
}, ya[ta] = function(e9, t3) {
  return ma(e9.child, t3) && ma(e9.parent, t3.parent());
}, ya[ra] = function(e9, t3) {
  return ma(e9.parent, t3) && t3.children().some(function(t4) {
    return ma(e9.child, t4);
  });
}, ya[na] = function(e9, t3) {
  return ma(e9.descendant, t3) && t3.ancestors().some(function(t4) {
    return ma(e9.ancestor, t4);
  });
}, ya[ia] = function(e9, t3) {
  return ma(e9.ancestor, t3) && t3.descendants().some(function(t4) {
    return ma(e9.descendant, t4);
  });
}, ya[aa] = function(e9, t3) {
  return ma(e9.subject, t3) && ma(e9.left, t3) && ma(e9.right, t3);
}, ya[oa] = function() {
  return true;
}, ya[ji] = function(e9, t3) {
  return e9.value.has(t3);
}, ya[qi] = function(e9, t3) {
  return (0, e9.value)(t3);
};
var ba = function(e9) {
  this.inputText = e9, this.currentSubject = null, this.compoundCount = 0, this.edgeCount = 0, this.length = 0, null == e9 || f(e9) && e9.match(/^\s*$/) || (x(e9) ? this.addQuery({ checks: [{ type: ji, value: e9.collection() }] }) : g(e9) ? this.addQuery({ checks: [{ type: qi, value: e9 }] }) : f(e9) ? this.parse(e9) || (this.invalid = true) : Oe("A selector must be created from a string; found "));
};
var xa = ba.prototype;
[fa, { matches: function(e9) {
  for (var t3 = 0; t3 < this.length; t3++) {
    var n2 = this[t3];
    if (ma(n2, e9))
      return true;
  }
  return false;
}, filter: function(e9) {
  var t3 = this;
  if (1 === t3.length && 1 === t3[0].checks.length && t3[0].checks[0].type === Gi)
    return e9.getElementById(t3[0].checks[0].value).collection();
  var n2 = function(e10) {
    for (var n3 = 0; n3 < t3.length; n3++) {
      var r2 = t3[n3];
      if (ma(r2, e10))
        return true;
    }
    return false;
  };
  return null == t3.text() && (n2 = function() {
    return true;
  }), e9.filter(n2);
} }].forEach(function(e9) {
  return I(xa, e9);
}), xa.text = function() {
  return this.inputText;
}, xa.size = function() {
  return this.length;
}, xa.eq = function(e9) {
  return this[e9];
}, xa.sameText = function(e9) {
  return !this.invalid && !e9.invalid && this.text() === e9.text();
}, xa.addQuery = function(e9) {
  this[this.length++] = e9;
}, xa.selector = xa.toString;
var wa = { allAre: function(e9) {
  var t3 = new ba(e9);
  return this.every(function(e10) {
    return t3.matches(e10);
  });
}, is: function(e9) {
  var t3 = new ba(e9);
  return this.some(function(e10) {
    return t3.matches(e10);
  });
}, some: function(e9, t3) {
  for (var n2 = 0; n2 < this.length; n2++) {
    if (t3 ? e9.apply(t3, [this[n2], n2, this]) : e9(this[n2], n2, this))
      return true;
  }
  return false;
}, every: function(e9, t3) {
  for (var n2 = 0; n2 < this.length; n2++) {
    if (!(t3 ? e9.apply(t3, [this[n2], n2, this]) : e9(this[n2], n2, this)))
      return false;
  }
  return true;
}, same: function(e9) {
  if (this === e9)
    return true;
  e9 = this.cy().collection(e9);
  var t3 = this.length;
  return t3 === e9.length && (1 === t3 ? this[0] === e9[0] : this.every(function(t4) {
    return e9.hasElementWithId(t4.id());
  }));
}, anySame: function(e9) {
  return e9 = this.cy().collection(e9), this.some(function(t3) {
    return e9.hasElementWithId(t3.id());
  });
}, allAreNeighbors: function(e9) {
  e9 = this.cy().collection(e9);
  var t3 = this.neighborhood();
  return e9.every(function(e10) {
    return t3.hasElementWithId(e10.id());
  });
}, contains: function(e9) {
  e9 = this.cy().collection(e9);
  var t3 = this;
  return e9.every(function(e10) {
    return t3.hasElementWithId(e10.id());
  });
} };
wa.allAreNeighbours = wa.allAreNeighbors, wa.has = wa.contains, wa.equal = wa.equals = wa.same;
var Ea;
var ka;
var Ca = function(e9, t3) {
  return function(n2, r2, i2, a2) {
    var o2, s2 = n2;
    if (null == s2 ? o2 = "" : x(s2) && 1 === s2.length && (o2 = s2.id()), 1 === this.length && o2) {
      var l2 = this[0]._private, u2 = l2.traversalCache = l2.traversalCache || {}, c2 = u2[t3] = u2[t3] || [], d2 = Pe(o2), h2 = c2[d2];
      return h2 || (c2[d2] = e9.call(this, n2, r2, i2, a2));
    }
    return e9.call(this, n2, r2, i2, a2);
  };
};
var Sa = { parent: function(e9) {
  var t3 = [];
  if (1 === this.length) {
    var n2 = this[0]._private.parent;
    if (n2)
      return n2;
  }
  for (var r2 = 0; r2 < this.length; r2++) {
    var i2 = this[r2]._private.parent;
    i2 && t3.push(i2);
  }
  return this.spawn(t3, true).filter(e9);
}, parents: function(e9) {
  for (var t3 = [], n2 = this.parent(); n2.nonempty(); ) {
    for (var r2 = 0; r2 < n2.length; r2++) {
      var i2 = n2[r2];
      t3.push(i2);
    }
    n2 = n2.parent();
  }
  return this.spawn(t3, true).filter(e9);
}, commonAncestors: function(e9) {
  for (var t3, n2 = 0; n2 < this.length; n2++) {
    var r2 = this[n2].parents();
    t3 = (t3 = t3 || r2).intersect(r2);
  }
  return t3.filter(e9);
}, orphans: function(e9) {
  return this.stdFilter(function(e10) {
    return e10.isOrphan();
  }).filter(e9);
}, nonorphans: function(e9) {
  return this.stdFilter(function(e10) {
    return e10.isChild();
  }).filter(e9);
}, children: Ca(function(e9) {
  for (var t3 = [], n2 = 0; n2 < this.length; n2++)
    for (var r2 = this[n2]._private.children, i2 = 0; i2 < r2.length; i2++)
      t3.push(r2[i2]);
  return this.spawn(t3, true).filter(e9);
}, "children"), siblings: function(e9) {
  return this.parent().children().not(this).filter(e9);
}, isParent: function() {
  var e9 = this[0];
  if (e9)
    return e9.isNode() && 0 !== e9._private.children.length;
}, isChildless: function() {
  var e9 = this[0];
  if (e9)
    return e9.isNode() && 0 === e9._private.children.length;
}, isChild: function() {
  var e9 = this[0];
  if (e9)
    return e9.isNode() && null != e9._private.parent;
}, isOrphan: function() {
  var e9 = this[0];
  if (e9)
    return e9.isNode() && null == e9._private.parent;
}, descendants: function(e9) {
  var t3 = [];
  return function e10(n2) {
    for (var r2 = 0; r2 < n2.length; r2++) {
      var i2 = n2[r2];
      t3.push(i2), i2.children().nonempty() && e10(i2.children());
    }
  }(this.children()), this.spawn(t3, true).filter(e9);
} };
function Pa(e9, t3, n2, r2) {
  for (var i2 = [], a2 = new $e(), o2 = e9.cy().hasCompoundNodes(), s2 = 0; s2 < e9.length; s2++) {
    var l2 = e9[s2];
    n2 ? i2.push(l2) : o2 && r2(i2, a2, l2);
  }
  for (; i2.length > 0; ) {
    var u2 = i2.shift();
    t3(u2), a2.add(u2.id()), o2 && r2(i2, a2, u2);
  }
  return e9;
}
function Da(e9, t3, n2) {
  if (n2.isParent())
    for (var r2 = n2._private.children, i2 = 0; i2 < r2.length; i2++) {
      var a2 = r2[i2];
      t3.has(a2.id()) || e9.push(a2);
    }
}
function Ta(e9, t3, n2) {
  if (n2.isChild()) {
    var r2 = n2._private.parent;
    t3.has(r2.id()) || e9.push(r2);
  }
}
function _a(e9, t3, n2) {
  Ta(e9, t3, n2), Da(e9, t3, n2);
}
Sa.forEachDown = function(e9) {
  var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
  return Pa(this, e9, t3, Da);
}, Sa.forEachUp = function(e9) {
  var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
  return Pa(this, e9, t3, Ta);
}, Sa.forEachUpAndDown = function(e9) {
  var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
  return Pa(this, e9, t3, _a);
}, Sa.ancestors = Sa.parents, (Ea = ka = { data: Li.data({ field: "data", bindingEvent: "data", allowBinding: true, allowSetting: true, settingEvent: "data", settingTriggersEvent: true, triggerFnName: "trigger", allowGetting: true, immutableKeys: { id: true, source: true, target: true, parent: true }, updateStyle: true }), removeData: Li.removeData({ field: "data", event: "data", triggerFnName: "trigger", triggerEvent: true, immutableKeys: { id: true, source: true, target: true, parent: true }, updateStyle: true }), scratch: Li.data({ field: "scratch", bindingEvent: "scratch", allowBinding: true, allowSetting: true, settingEvent: "scratch", settingTriggersEvent: true, triggerFnName: "trigger", allowGetting: true, updateStyle: true }), removeScratch: Li.removeData({ field: "scratch", event: "scratch", triggerFnName: "trigger", triggerEvent: true, updateStyle: true }), rscratch: Li.data({ field: "rscratch", allowBinding: false, allowSetting: true, settingTriggersEvent: false, allowGetting: true }), removeRscratch: Li.removeData({ field: "rscratch", triggerEvent: false }), id: function() {
  var e9 = this[0];
  if (e9)
    return e9._private.data.id;
} }).attr = Ea.data, Ea.removeAttr = Ea.removeData;
var Ma;
var Ba;
var Na = ka;
var za = {};
function Ia(e9) {
  return function(t3) {
    if (void 0 === t3 && (t3 = true), 0 !== this.length && this.isNode() && !this.removed()) {
      for (var n2 = 0, r2 = this[0], i2 = r2._private.edges, a2 = 0; a2 < i2.length; a2++) {
        var o2 = i2[a2];
        !t3 && o2.isLoop() || (n2 += e9(r2, o2));
      }
      return n2;
    }
  };
}
function Aa(e9, t3) {
  return function(n2) {
    for (var r2, i2 = this.nodes(), a2 = 0; a2 < i2.length; a2++) {
      var o2 = i2[a2][e9](n2);
      void 0 === o2 || void 0 !== r2 && !t3(o2, r2) || (r2 = o2);
    }
    return r2;
  };
}
I(za, { degree: Ia(function(e9, t3) {
  return t3.source().same(t3.target()) ? 2 : 1;
}), indegree: Ia(function(e9, t3) {
  return t3.target().same(e9) ? 1 : 0;
}), outdegree: Ia(function(e9, t3) {
  return t3.source().same(e9) ? 1 : 0;
}) }), I(za, { minDegree: Aa("degree", function(e9, t3) {
  return e9 < t3;
}), maxDegree: Aa("degree", function(e9, t3) {
  return e9 > t3;
}), minIndegree: Aa("indegree", function(e9, t3) {
  return e9 < t3;
}), maxIndegree: Aa("indegree", function(e9, t3) {
  return e9 > t3;
}), minOutdegree: Aa("outdegree", function(e9, t3) {
  return e9 < t3;
}), maxOutdegree: Aa("outdegree", function(e9, t3) {
  return e9 > t3;
}) }), I(za, { totalDegree: function(e9) {
  for (var t3 = 0, n2 = this.nodes(), r2 = 0; r2 < n2.length; r2++)
    t3 += n2[r2].degree(e9);
  return t3;
} });
var La = function(e9, t3, n2) {
  for (var r2 = 0; r2 < e9.length; r2++) {
    var i2 = e9[r2];
    if (!i2.locked()) {
      var a2 = i2._private.position, o2 = { x: null != t3.x ? t3.x - a2.x : 0, y: null != t3.y ? t3.y - a2.y : 0 };
      !i2.isParent() || 0 === o2.x && 0 === o2.y || i2.children().shift(o2, n2), i2.dirtyBoundingBoxCache();
    }
  }
};
var Oa = { field: "position", bindingEvent: "position", allowBinding: true, allowSetting: true, settingEvent: "position", settingTriggersEvent: true, triggerFnName: "emitAndNotify", allowGetting: true, validKeys: ["x", "y"], beforeGet: function(e9) {
  e9.updateCompoundBounds();
}, beforeSet: function(e9, t3) {
  La(e9, t3, false);
}, onSet: function(e9) {
  e9.dirtyCompoundBoundsCache();
}, canSet: function(e9) {
  return !e9.locked();
} };
(Ma = Ba = { position: Li.data(Oa), silentPosition: Li.data(I({}, Oa, { allowBinding: false, allowSetting: true, settingTriggersEvent: false, allowGetting: false, beforeSet: function(e9, t3) {
  La(e9, t3, true);
}, onSet: function(e9) {
  e9.dirtyCompoundBoundsCache();
} })), positions: function(e9, t3) {
  if (y(e9))
    t3 ? this.silentPosition(e9) : this.position(e9);
  else if (g(e9)) {
    var n2 = e9, r2 = this.cy();
    r2.startBatch();
    for (var i2 = 0; i2 < this.length; i2++) {
      var a2, o2 = this[i2];
      (a2 = n2(o2, i2)) && (t3 ? o2.silentPosition(a2) : o2.position(a2));
    }
    r2.endBatch();
  }
  return this;
}, silentPositions: function(e9) {
  return this.positions(e9, true);
}, shift: function(e9, t3, n2) {
  var r2;
  if (y(e9) ? (r2 = { x: m(e9.x) ? e9.x : 0, y: m(e9.y) ? e9.y : 0 }, n2 = t3) : f(e9) && m(t3) && ((r2 = { x: 0, y: 0 })[e9] = t3), null != r2) {
    var i2 = this.cy();
    i2.startBatch();
    for (var a2 = 0; a2 < this.length; a2++) {
      var o2 = this[a2];
      if (!(i2.hasCompoundNodes() && o2.isChild() && o2.ancestors().anySame(this))) {
        var s2 = o2.position(), l2 = { x: s2.x + r2.x, y: s2.y + r2.y };
        n2 ? o2.silentPosition(l2) : o2.position(l2);
      }
    }
    i2.endBatch();
  }
  return this;
}, silentShift: function(e9, t3) {
  return y(e9) ? this.shift(e9, true) : f(e9) && m(t3) && this.shift(e9, t3, true), this;
}, renderedPosition: function(e9, t3) {
  var n2 = this[0], r2 = this.cy(), i2 = r2.zoom(), a2 = r2.pan(), o2 = y(e9) ? e9 : void 0, s2 = void 0 !== o2 || void 0 !== t3 && f(e9);
  if (n2 && n2.isNode()) {
    if (!s2) {
      var l2 = n2.position();
      return o2 = gt(l2, i2, a2), void 0 === e9 ? o2 : o2[e9];
    }
    for (var u2 = 0; u2 < this.length; u2++) {
      var c2 = this[u2];
      void 0 !== t3 ? c2.position(e9, (t3 - a2[e9]) / i2) : void 0 !== o2 && c2.position(vt(o2, i2, a2));
    }
  } else if (!s2)
    return;
  return this;
}, relativePosition: function(e9, t3) {
  var n2 = this[0], r2 = this.cy(), i2 = y(e9) ? e9 : void 0, a2 = void 0 !== i2 || void 0 !== t3 && f(e9), o2 = r2.hasCompoundNodes();
  if (n2 && n2.isNode()) {
    if (!a2) {
      var s2 = n2.position(), l2 = o2 ? n2.parent() : null, u2 = l2 && l2.length > 0, c2 = u2;
      u2 && (l2 = l2[0]);
      var d2 = c2 ? l2.position() : { x: 0, y: 0 };
      return i2 = { x: s2.x - d2.x, y: s2.y - d2.y }, void 0 === e9 ? i2 : i2[e9];
    }
    for (var h2 = 0; h2 < this.length; h2++) {
      var p2 = this[h2], g2 = o2 ? p2.parent() : null, v2 = g2 && g2.length > 0, m2 = v2;
      v2 && (g2 = g2[0]);
      var b2 = m2 ? g2.position() : { x: 0, y: 0 };
      void 0 !== t3 ? p2.position(e9, t3 + b2[e9]) : void 0 !== i2 && p2.position({ x: i2.x + b2.x, y: i2.y + b2.y });
    }
  } else if (!a2)
    return;
  return this;
} }).modelPosition = Ma.point = Ma.position, Ma.modelPositions = Ma.points = Ma.positions, Ma.renderedPoint = Ma.renderedPosition, Ma.relativePoint = Ma.relativePosition;
var Ra;
var Va;
var Fa = Ba;
Ra = Va = {}, Va.renderedBoundingBox = function(e9) {
  var t3 = this.boundingBox(e9), n2 = this.cy(), r2 = n2.zoom(), i2 = n2.pan(), a2 = t3.x1 * r2 + i2.x, o2 = t3.x2 * r2 + i2.x, s2 = t3.y1 * r2 + i2.y, l2 = t3.y2 * r2 + i2.y;
  return { x1: a2, x2: o2, y1: s2, y2: l2, w: o2 - a2, h: l2 - s2 };
}, Va.dirtyCompoundBoundsCache = function() {
  var e9 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], t3 = this.cy();
  return t3.styleEnabled() && t3.hasCompoundNodes() ? (this.forEachUp(function(t4) {
    if (t4.isParent()) {
      var n2 = t4._private;
      n2.compoundBoundsClean = false, n2.bbCache = null, e9 || t4.emitAndNotify("bounds");
    }
  }), this) : this;
}, Va.updateCompoundBounds = function() {
  var e9 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], t3 = this.cy();
  if (!t3.styleEnabled() || !t3.hasCompoundNodes())
    return this;
  if (!e9 && t3.batching())
    return this;
  function n2(e10) {
    if (e10.isParent()) {
      var t4 = e10._private, n3 = e10.children(), r3 = "include" === e10.pstyle("compound-sizing-wrt-labels").value, i3 = { width: { val: e10.pstyle("min-width").pfValue, left: e10.pstyle("min-width-bias-left"), right: e10.pstyle("min-width-bias-right") }, height: { val: e10.pstyle("min-height").pfValue, top: e10.pstyle("min-height-bias-top"), bottom: e10.pstyle("min-height-bias-bottom") } }, a3 = n3.boundingBox({ includeLabels: r3, includeOverlays: false, useCache: false }), o2 = t4.position;
      0 !== a3.w && 0 !== a3.h || ((a3 = { w: e10.pstyle("width").pfValue, h: e10.pstyle("height").pfValue }).x1 = o2.x - a3.w / 2, a3.x2 = o2.x + a3.w / 2, a3.y1 = o2.y - a3.h / 2, a3.y2 = o2.y + a3.h / 2);
      var s2 = i3.width.left.value;
      "px" === i3.width.left.units && i3.width.val > 0 && (s2 = 100 * s2 / i3.width.val);
      var l2 = i3.width.right.value;
      "px" === i3.width.right.units && i3.width.val > 0 && (l2 = 100 * l2 / i3.width.val);
      var u2 = i3.height.top.value;
      "px" === i3.height.top.units && i3.height.val > 0 && (u2 = 100 * u2 / i3.height.val);
      var c2 = i3.height.bottom.value;
      "px" === i3.height.bottom.units && i3.height.val > 0 && (c2 = 100 * c2 / i3.height.val);
      var d2 = y2(i3.width.val - a3.w, s2, l2), h2 = d2.biasDiff, p2 = d2.biasComplementDiff, f2 = y2(i3.height.val - a3.h, u2, c2), g2 = f2.biasDiff, v2 = f2.biasComplementDiff;
      t4.autoPadding = function(e11, t5, n4, r4) {
        if ("%" !== n4.units)
          return "px" === n4.units ? n4.pfValue : 0;
        switch (r4) {
          case "width":
            return e11 > 0 ? n4.pfValue * e11 : 0;
          case "height":
            return t5 > 0 ? n4.pfValue * t5 : 0;
          case "average":
            return e11 > 0 && t5 > 0 ? n4.pfValue * (e11 + t5) / 2 : 0;
          case "min":
            return e11 > 0 && t5 > 0 ? e11 > t5 ? n4.pfValue * t5 : n4.pfValue * e11 : 0;
          case "max":
            return e11 > 0 && t5 > 0 ? e11 > t5 ? n4.pfValue * e11 : n4.pfValue * t5 : 0;
          default:
            return 0;
        }
      }(a3.w, a3.h, e10.pstyle("padding"), e10.pstyle("padding-relative-to").value), t4.autoWidth = Math.max(a3.w, i3.width.val), o2.x = (-h2 + a3.x1 + a3.x2 + p2) / 2, t4.autoHeight = Math.max(a3.h, i3.height.val), o2.y = (-g2 + a3.y1 + a3.y2 + v2) / 2;
    }
    function y2(e11, t5, n4) {
      var r4 = 0, i4 = 0, a4 = t5 + n4;
      return e11 > 0 && a4 > 0 && (r4 = t5 / a4 * e11, i4 = n4 / a4 * e11), { biasDiff: r4, biasComplementDiff: i4 };
    }
  }
  for (var r2 = 0; r2 < this.length; r2++) {
    var i2 = this[r2], a2 = i2._private;
    a2.compoundBoundsClean && !e9 || (n2(i2), t3.batching() || (a2.compoundBoundsClean = true));
  }
  return this;
};
var ja = function(e9) {
  return e9 === 1 / 0 || e9 === -1 / 0 ? 0 : e9;
};
var qa = function(e9, t3, n2, r2, i2) {
  r2 - t3 != 0 && i2 - n2 != 0 && null != t3 && null != n2 && null != r2 && null != i2 && (e9.x1 = t3 < e9.x1 ? t3 : e9.x1, e9.x2 = r2 > e9.x2 ? r2 : e9.x2, e9.y1 = n2 < e9.y1 ? n2 : e9.y1, e9.y2 = i2 > e9.y2 ? i2 : e9.y2, e9.w = e9.x2 - e9.x1, e9.h = e9.y2 - e9.y1);
};
var Ya = function(e9, t3) {
  return null == t3 ? e9 : qa(e9, t3.x1, t3.y1, t3.x2, t3.y2);
};
var Xa = function(e9, t3, n2) {
  return Ke(e9, t3, n2);
};
var Wa = function(e9, t3, n2) {
  if (!t3.cy().headless()) {
    var r2, i2, a2 = t3._private, o2 = a2.rstyle, s2 = o2.arrowWidth / 2;
    if ("none" !== t3.pstyle(n2 + "-arrow-shape").value) {
      "source" === n2 ? (r2 = o2.srcX, i2 = o2.srcY) : "target" === n2 ? (r2 = o2.tgtX, i2 = o2.tgtY) : (r2 = o2.midX, i2 = o2.midY);
      var l2 = a2.arrowBounds = a2.arrowBounds || {}, u2 = l2[n2] = l2[n2] || {};
      u2.x1 = r2 - s2, u2.y1 = i2 - s2, u2.x2 = r2 + s2, u2.y2 = i2 + s2, u2.w = u2.x2 - u2.x1, u2.h = u2.y2 - u2.y1, _t(u2, 1), qa(e9, u2.x1, u2.y1, u2.x2, u2.y2);
    }
  }
};
var Ha = function(e9, t3, n2) {
  if (!t3.cy().headless()) {
    var r2;
    r2 = n2 ? n2 + "-" : "";
    var i2 = t3._private, a2 = i2.rstyle;
    if (t3.pstyle(r2 + "label").strValue) {
      var o2, s2, l2, u2, c2 = t3.pstyle("text-halign"), d2 = t3.pstyle("text-valign"), h2 = Xa(a2, "labelWidth", n2), p2 = Xa(a2, "labelHeight", n2), f2 = Xa(a2, "labelX", n2), g2 = Xa(a2, "labelY", n2), v2 = t3.pstyle(r2 + "text-margin-x").pfValue, y2 = t3.pstyle(r2 + "text-margin-y").pfValue, m2 = t3.isEdge(), b2 = t3.pstyle(r2 + "text-rotation"), x2 = t3.pstyle("text-outline-width").pfValue, w2 = t3.pstyle("text-border-width").pfValue / 2, E2 = t3.pstyle("text-background-padding").pfValue, k2 = p2, C2 = h2, S2 = C2 / 2, P2 = k2 / 2;
      if (m2)
        o2 = f2 - S2, s2 = f2 + S2, l2 = g2 - P2, u2 = g2 + P2;
      else {
        switch (c2.value) {
          case "left":
            o2 = f2 - C2, s2 = f2;
            break;
          case "center":
            o2 = f2 - S2, s2 = f2 + S2;
            break;
          case "right":
            o2 = f2, s2 = f2 + C2;
        }
        switch (d2.value) {
          case "top":
            l2 = g2 - k2, u2 = g2;
            break;
          case "center":
            l2 = g2 - P2, u2 = g2 + P2;
            break;
          case "bottom":
            l2 = g2, u2 = g2 + k2;
        }
      }
      o2 += v2 - Math.max(x2, w2) - E2 - 2, s2 += v2 + Math.max(x2, w2) + E2 + 2, l2 += y2 - Math.max(x2, w2) - E2 - 2, u2 += y2 + Math.max(x2, w2) + E2 + 2;
      var D2 = n2 || "main", T2 = i2.labelBounds, _2 = T2[D2] = T2[D2] || {};
      _2.x1 = o2, _2.y1 = l2, _2.x2 = s2, _2.y2 = u2, _2.w = s2 - o2, _2.h = u2 - l2;
      var M2 = m2 && "autorotate" === b2.strValue, B2 = null != b2.pfValue && 0 !== b2.pfValue;
      if (M2 || B2) {
        var N2 = M2 ? Xa(i2.rstyle, "labelAngle", n2) : b2.pfValue, z2 = Math.cos(N2), I2 = Math.sin(N2), A2 = (o2 + s2) / 2, L2 = (l2 + u2) / 2;
        if (!m2) {
          switch (c2.value) {
            case "left":
              A2 = s2;
              break;
            case "right":
              A2 = o2;
          }
          switch (d2.value) {
            case "top":
              L2 = u2;
              break;
            case "bottom":
              L2 = l2;
          }
        }
        var O2 = function(e10, t4) {
          return { x: (e10 -= A2) * z2 - (t4 -= L2) * I2 + A2, y: e10 * I2 + t4 * z2 + L2 };
        }, R2 = O2(o2, l2), V2 = O2(o2, u2), F2 = O2(s2, l2), j2 = O2(s2, u2);
        o2 = Math.min(R2.x, V2.x, F2.x, j2.x), s2 = Math.max(R2.x, V2.x, F2.x, j2.x), l2 = Math.min(R2.y, V2.y, F2.y, j2.y), u2 = Math.max(R2.y, V2.y, F2.y, j2.y);
      }
      var q2 = D2 + "Rot", Y2 = T2[q2] = T2[q2] || {};
      Y2.x1 = o2, Y2.y1 = l2, Y2.x2 = s2, Y2.y2 = u2, Y2.w = s2 - o2, Y2.h = u2 - l2, qa(e9, o2, l2, s2, u2), qa(i2.labelBounds.all, o2, l2, s2, u2);
    }
    return e9;
  }
};
var Ka = function(e9) {
  var t3 = 0, n2 = function(e10) {
    return (e10 ? 1 : 0) << t3++;
  }, r2 = 0;
  return r2 += n2(e9.incudeNodes), r2 += n2(e9.includeEdges), r2 += n2(e9.includeLabels), r2 += n2(e9.includeMainLabels), r2 += n2(e9.includeSourceLabels), r2 += n2(e9.includeTargetLabels), r2 += n2(e9.includeOverlays);
};
var Ga = function(e9) {
  if (e9.isEdge()) {
    var t3 = e9.source().position(), n2 = e9.target().position(), r2 = function(e10) {
      return Math.round(e10);
    };
    return function(e10, t4) {
      var n3 = { value: 0, done: false }, r3 = 0, i2 = e10.length;
      return we({ next: function() {
        return r3 < i2 ? n3.value = e10[r3++] : n3.done = true, n3;
      } }, t4);
    }([r2(t3.x), r2(t3.y), r2(n2.x), r2(n2.y)]);
  }
  return 0;
};
var Ua = function(e9, t3) {
  var n2, r2 = e9._private, i2 = e9.isEdge(), a2 = (null == t3 ? $a : Ka(t3)) === $a, o2 = Ga(e9), s2 = r2.bbCachePosKey === o2, l2 = t3.useCache && s2, u2 = function(e10) {
    return null == e10._private.bbCache || e10._private.styleDirty;
  };
  if (!l2 || u2(e9) || i2 && u2(e9.source()) || u2(e9.target()) ? (s2 || e9.recalculateRenderedStyle(l2), n2 = function(e10, t4) {
    var n3, r3, i3, a3, o3, s3, l3, u3 = e10._private.cy, c3 = u3.styleEnabled(), d2 = u3.headless(), h2 = Dt(), p2 = e10._private, f2 = e10.isNode(), g2 = e10.isEdge(), v2 = p2.rstyle, y2 = f2 && c3 ? e10.pstyle("bounds-expansion").pfValue : [0], m2 = function(e11) {
      return "none" !== e11.pstyle("display").value;
    }, b2 = !c3 || m2(e10) && (!g2 || m2(e10.source()) && m2(e10.target()));
    if (b2) {
      var x2 = 0;
      c3 && t4.includeOverlays && 0 !== e10.pstyle("overlay-opacity").value && (x2 = e10.pstyle("overlay-padding").value);
      var w2 = 0;
      c3 && t4.includeUnderlays && 0 !== e10.pstyle("underlay-opacity").value && (w2 = e10.pstyle("underlay-padding").value);
      var E2 = Math.max(x2, w2), k2 = 0;
      if (c3 && (k2 = e10.pstyle("width").pfValue / 2), f2 && t4.includeNodes) {
        var C2 = e10.position();
        o3 = C2.x, s3 = C2.y;
        var S2 = e10.outerWidth() / 2, P2 = e10.outerHeight() / 2;
        qa(h2, n3 = o3 - S2, i3 = s3 - P2, r3 = o3 + S2, a3 = s3 + P2);
      } else if (g2 && t4.includeEdges)
        if (c3 && !d2) {
          var D2 = e10.pstyle("curve-style").strValue;
          if (n3 = Math.min(v2.srcX, v2.midX, v2.tgtX), r3 = Math.max(v2.srcX, v2.midX, v2.tgtX), i3 = Math.min(v2.srcY, v2.midY, v2.tgtY), a3 = Math.max(v2.srcY, v2.midY, v2.tgtY), qa(h2, n3 -= k2, i3 -= k2, r3 += k2, a3 += k2), "haystack" === D2) {
            var T2 = v2.haystackPts;
            if (T2 && 2 === T2.length) {
              if (n3 = T2[0].x, i3 = T2[0].y, n3 > (r3 = T2[1].x)) {
                var _2 = n3;
                n3 = r3, r3 = _2;
              }
              if (i3 > (a3 = T2[1].y)) {
                var M2 = i3;
                i3 = a3, a3 = M2;
              }
              qa(h2, n3 - k2, i3 - k2, r3 + k2, a3 + k2);
            }
          } else if ("bezier" === D2 || "unbundled-bezier" === D2 || "segments" === D2 || "taxi" === D2) {
            var B2;
            switch (D2) {
              case "bezier":
              case "unbundled-bezier":
                B2 = v2.bezierPts;
                break;
              case "segments":
              case "taxi":
                B2 = v2.linePts;
            }
            if (null != B2)
              for (var N2 = 0; N2 < B2.length; N2++) {
                var z2 = B2[N2];
                n3 = z2.x - k2, r3 = z2.x + k2, i3 = z2.y - k2, a3 = z2.y + k2, qa(h2, n3, i3, r3, a3);
              }
          }
        } else {
          var I2 = e10.source().position(), A2 = e10.target().position();
          if ((n3 = I2.x) > (r3 = A2.x)) {
            var L2 = n3;
            n3 = r3, r3 = L2;
          }
          if ((i3 = I2.y) > (a3 = A2.y)) {
            var O2 = i3;
            i3 = a3, a3 = O2;
          }
          qa(h2, n3 -= k2, i3 -= k2, r3 += k2, a3 += k2);
        }
      if (c3 && t4.includeEdges && g2 && (Wa(h2, e10, "mid-source"), Wa(h2, e10, "mid-target"), Wa(h2, e10, "source"), Wa(h2, e10, "target")), c3) {
        if ("yes" === e10.pstyle("ghost").value) {
          var R2 = e10.pstyle("ghost-offset-x").pfValue, V2 = e10.pstyle("ghost-offset-y").pfValue;
          qa(h2, h2.x1 + R2, h2.y1 + V2, h2.x2 + R2, h2.y2 + V2);
        }
      }
      var F2 = p2.bodyBounds = p2.bodyBounds || {};
      Bt(F2, h2), Mt(F2, y2), _t(F2, 1), c3 && (n3 = h2.x1, r3 = h2.x2, i3 = h2.y1, a3 = h2.y2, qa(h2, n3 - E2, i3 - E2, r3 + E2, a3 + E2));
      var j2 = p2.overlayBounds = p2.overlayBounds || {};
      Bt(j2, h2), Mt(j2, y2), _t(j2, 1);
      var q2 = p2.labelBounds = p2.labelBounds || {};
      null != q2.all ? ((l3 = q2.all).x1 = 1 / 0, l3.y1 = 1 / 0, l3.x2 = -1 / 0, l3.y2 = -1 / 0, l3.w = 0, l3.h = 0) : q2.all = Dt(), c3 && t4.includeLabels && (t4.includeMainLabels && Ha(h2, e10, null), g2 && (t4.includeSourceLabels && Ha(h2, e10, "source"), t4.includeTargetLabels && Ha(h2, e10, "target")));
    }
    return h2.x1 = ja(h2.x1), h2.y1 = ja(h2.y1), h2.x2 = ja(h2.x2), h2.y2 = ja(h2.y2), h2.w = ja(h2.x2 - h2.x1), h2.h = ja(h2.y2 - h2.y1), h2.w > 0 && h2.h > 0 && b2 && (Mt(h2, y2), _t(h2, 1)), h2;
  }(e9, Za), r2.bbCache = n2, r2.bbCachePosKey = o2) : n2 = r2.bbCache, !a2) {
    var c2 = e9.isNode();
    n2 = Dt(), (t3.includeNodes && c2 || t3.includeEdges && !c2) && (t3.includeOverlays ? Ya(n2, r2.overlayBounds) : Ya(n2, r2.bodyBounds)), t3.includeLabels && (t3.includeMainLabels && (!i2 || t3.includeSourceLabels && t3.includeTargetLabels) ? Ya(n2, r2.labelBounds.all) : (t3.includeMainLabels && Ya(n2, r2.labelBounds.mainRot), t3.includeSourceLabels && Ya(n2, r2.labelBounds.sourceRot), t3.includeTargetLabels && Ya(n2, r2.labelBounds.targetRot))), n2.w = n2.x2 - n2.x1, n2.h = n2.y2 - n2.y1;
  }
  return n2;
};
var Za = { includeNodes: true, includeEdges: true, includeLabels: true, includeMainLabels: true, includeSourceLabels: true, includeTargetLabels: true, includeOverlays: true, includeUnderlays: true, useCache: true };
var $a = Ka(Za);
var Qa = Xe(Za);
Va.boundingBox = function(e9) {
  var t3;
  if (1 !== this.length || null == this[0]._private.bbCache || this[0]._private.styleDirty || void 0 !== e9 && void 0 !== e9.useCache && true !== e9.useCache) {
    t3 = Dt();
    var n2 = Qa(e9 = e9 || Za);
    if (this.cy().styleEnabled())
      for (var r2 = 0; r2 < this.length; r2++) {
        var i2 = this[r2], a2 = i2._private, o2 = Ga(i2), s2 = a2.bbCachePosKey === o2, l2 = n2.useCache && s2 && !a2.styleDirty;
        i2.recalculateRenderedStyle(l2);
      }
    this.updateCompoundBounds(!e9.useCache);
    for (var u2 = 0; u2 < this.length; u2++) {
      var c2 = this[u2];
      Ya(t3, Ua(c2, n2));
    }
  } else
    e9 = void 0 === e9 ? Za : Qa(e9), t3 = Ua(this[0], e9);
  return t3.x1 = ja(t3.x1), t3.y1 = ja(t3.y1), t3.x2 = ja(t3.x2), t3.y2 = ja(t3.y2), t3.w = ja(t3.x2 - t3.x1), t3.h = ja(t3.y2 - t3.y1), t3;
}, Va.dirtyBoundingBoxCache = function() {
  for (var e9 = 0; e9 < this.length; e9++) {
    var t3 = this[e9]._private;
    t3.bbCache = null, t3.bbCachePosKey = null, t3.bodyBounds = null, t3.overlayBounds = null, t3.labelBounds.all = null, t3.labelBounds.source = null, t3.labelBounds.target = null, t3.labelBounds.main = null, t3.labelBounds.sourceRot = null, t3.labelBounds.targetRot = null, t3.labelBounds.mainRot = null, t3.arrowBounds.source = null, t3.arrowBounds.target = null, t3.arrowBounds["mid-source"] = null, t3.arrowBounds["mid-target"] = null;
  }
  return this.emitAndNotify("bounds"), this;
}, Va.boundingBoxAt = function(e9) {
  var t3 = this.nodes(), n2 = this.cy(), r2 = n2.hasCompoundNodes(), i2 = n2.collection();
  if (r2 && (i2 = t3.filter(function(e10) {
    return e10.isParent();
  }), t3 = t3.not(i2)), y(e9)) {
    var a2 = e9;
    e9 = function() {
      return a2;
    };
  }
  n2.startBatch(), t3.forEach(function(t4, n3) {
    return t4._private.bbAtOldPos = e9(t4, n3);
  }).silentPositions(e9), r2 && (i2.dirtyCompoundBoundsCache(), i2.dirtyBoundingBoxCache(), i2.updateCompoundBounds(true));
  var o2 = function(e10) {
    return { x1: e10.x1, x2: e10.x2, w: e10.w, y1: e10.y1, y2: e10.y2, h: e10.h };
  }(this.boundingBox({ useCache: false }));
  return t3.silentPositions(function(e10) {
    return e10._private.bbAtOldPos;
  }), r2 && (i2.dirtyCompoundBoundsCache(), i2.dirtyBoundingBoxCache(), i2.updateCompoundBounds(true)), n2.endBatch(), o2;
}, Ra.boundingbox = Ra.bb = Ra.boundingBox, Ra.renderedBoundingbox = Ra.renderedBoundingBox;
var Ja;
var eo;
var to = Va;
Ja = eo = {};
var no = function(e9) {
  e9.uppercaseName = B(e9.name), e9.autoName = "auto" + e9.uppercaseName, e9.labelName = "label" + e9.uppercaseName, e9.outerName = "outer" + e9.uppercaseName, e9.uppercaseOuterName = B(e9.outerName), Ja[e9.name] = function() {
    var t3 = this[0], n2 = t3._private, r2 = n2.cy._private.styleEnabled;
    if (t3) {
      if (!r2)
        return 1;
      if (t3.isParent())
        return t3.updateCompoundBounds(), n2[e9.autoName] || 0;
      var i2 = t3.pstyle(e9.name);
      switch (i2.strValue) {
        case "label":
          return t3.recalculateRenderedStyle(), n2.rstyle[e9.labelName] || 0;
        default:
          return i2.pfValue;
      }
    }
  }, Ja["outer" + e9.uppercaseName] = function() {
    var t3 = this[0], n2 = t3._private.cy._private.styleEnabled;
    if (t3)
      return n2 ? t3[e9.name]() + t3.pstyle("border-width").pfValue + 2 * t3.padding() : 1;
  }, Ja["rendered" + e9.uppercaseName] = function() {
    var t3 = this[0];
    if (t3)
      return t3[e9.name]() * this.cy().zoom();
  }, Ja["rendered" + e9.uppercaseOuterName] = function() {
    var t3 = this[0];
    if (t3)
      return t3[e9.outerName]() * this.cy().zoom();
  };
};
no({ name: "width" }), no({ name: "height" }), eo.padding = function() {
  var e9 = this[0], t3 = e9._private;
  return e9.isParent() ? (e9.updateCompoundBounds(), void 0 !== t3.autoPadding ? t3.autoPadding : e9.pstyle("padding").pfValue) : e9.pstyle("padding").pfValue;
}, eo.paddedHeight = function() {
  var e9 = this[0];
  return e9.height() + 2 * e9.padding();
}, eo.paddedWidth = function() {
  var e9 = this[0];
  return e9.width() + 2 * e9.padding();
};
var ro = eo;
var io = { controlPoints: { get: function(e9) {
  return e9.renderer().getControlPoints(e9);
}, mult: true }, segmentPoints: { get: function(e9) {
  return e9.renderer().getSegmentPoints(e9);
}, mult: true }, sourceEndpoint: { get: function(e9) {
  return e9.renderer().getSourceEndpoint(e9);
} }, targetEndpoint: { get: function(e9) {
  return e9.renderer().getTargetEndpoint(e9);
} }, midpoint: { get: function(e9) {
  return e9.renderer().getEdgeMidpoint(e9);
} } };
var ao = Object.keys(io).reduce(function(e9, t3) {
  var n2 = io[t3], r2 = function(e10) {
    return "rendered" + e10[0].toUpperCase() + e10.substr(1);
  }(t3);
  return e9[t3] = function() {
    return function(e10, t4) {
      if (e10.isEdge())
        return t4(e10);
    }(this, n2.get);
  }, n2.mult ? e9[r2] = function() {
    return function(e10, t4) {
      if (e10.isEdge()) {
        var n3 = e10.cy(), r3 = n3.pan(), i2 = n3.zoom();
        return t4(e10).map(function(e11) {
          return gt(e11, i2, r3);
        });
      }
    }(this, n2.get);
  } : e9[r2] = function() {
    return function(e10, t4) {
      if (e10.isEdge()) {
        var n3 = e10.cy();
        return gt(t4(e10), n3.zoom(), n3.pan());
      }
    }(this, n2.get);
  }, e9;
}, {});
var oo = I({}, Fa, to, ro, ao);
var so = function(e9, t3) {
  this.recycle(e9, t3);
};
function lo() {
  return false;
}
function uo() {
  return true;
}
so.prototype = { instanceString: function() {
  return "event";
}, recycle: function(e9, t3) {
  if (this.isImmediatePropagationStopped = this.isPropagationStopped = this.isDefaultPrevented = lo, null != e9 && e9.preventDefault ? (this.type = e9.type, this.isDefaultPrevented = e9.defaultPrevented ? uo : lo) : null != e9 && e9.type ? t3 = e9 : this.type = e9, null != t3 && (this.originalEvent = t3.originalEvent, this.type = null != t3.type ? t3.type : this.type, this.cy = t3.cy, this.target = t3.target, this.position = t3.position, this.renderedPosition = t3.renderedPosition, this.namespace = t3.namespace, this.layout = t3.layout), null != this.cy && null != this.position && null == this.renderedPosition) {
    var n2 = this.position, r2 = this.cy.zoom(), i2 = this.cy.pan();
    this.renderedPosition = { x: n2.x * r2 + i2.x, y: n2.y * r2 + i2.y };
  }
  this.timeStamp = e9 && e9.timeStamp || Date.now();
}, preventDefault: function() {
  this.isDefaultPrevented = uo;
  var e9 = this.originalEvent;
  e9 && e9.preventDefault && e9.preventDefault();
}, stopPropagation: function() {
  this.isPropagationStopped = uo;
  var e9 = this.originalEvent;
  e9 && e9.stopPropagation && e9.stopPropagation();
}, stopImmediatePropagation: function() {
  this.isImmediatePropagationStopped = uo, this.stopPropagation();
}, isDefaultPrevented: lo, isPropagationStopped: lo, isImmediatePropagationStopped: lo };
var co = /^([^.]+)(\.(?:[^.]+))?$/;
var ho = { qualifierCompare: function(e9, t3) {
  return e9 === t3;
}, eventMatches: function() {
  return true;
}, addEventFields: function() {
}, callbackContext: function(e9) {
  return e9;
}, beforeEmit: function() {
}, afterEmit: function() {
}, bubble: function() {
  return false;
}, parent: function() {
  return null;
}, context: null };
var po = Object.keys(ho);
var fo = {};
function go() {
  for (var e9 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : fo, t3 = arguments.length > 1 ? arguments[1] : void 0, n2 = 0; n2 < po.length; n2++) {
    var r2 = po[n2];
    this[r2] = e9[r2] || ho[r2];
  }
  this.context = t3 || this.context, this.listeners = [], this.emitting = 0;
}
var vo = go.prototype;
var yo = function(e9, t3, n2, r2, i2, a2, o2) {
  g(r2) && (i2 = r2, r2 = null), o2 && (a2 = null == a2 ? o2 : I({}, a2, o2));
  for (var s2 = v(n2) ? n2 : n2.split(/\s+/), l2 = 0; l2 < s2.length; l2++) {
    var u2 = s2[l2];
    if (!S(u2)) {
      var c2 = u2.match(co);
      if (c2) {
        if (false === t3(e9, u2, c2[1], c2[2] ? c2[2] : null, r2, i2, a2))
          break;
      }
    }
  }
};
var mo = function(e9, t3) {
  return e9.addEventFields(e9.context, t3), new so(t3.type, t3);
};
var bo = function(e9, t3, n2) {
  if ("event" !== p(n2))
    if (y(n2))
      t3(e9, mo(e9, n2));
    else
      for (var r2 = v(n2) ? n2 : n2.split(/\s+/), i2 = 0; i2 < r2.length; i2++) {
        var a2 = r2[i2];
        if (!S(a2)) {
          var o2 = a2.match(co);
          if (o2) {
            var s2 = o2[1], l2 = o2[2] ? o2[2] : null;
            t3(e9, mo(e9, { type: s2, namespace: l2, target: e9.context }));
          }
        }
      }
  else
    t3(e9, n2);
};
vo.on = vo.addListener = function(e9, t3, n2, r2, i2) {
  return yo(this, function(e10, t4, n3, r3, i3, a2, o2) {
    g(a2) && e10.listeners.push({ event: t4, callback: a2, type: n3, namespace: r3, qualifier: i3, conf: o2 });
  }, e9, t3, n2, r2, i2), this;
}, vo.one = function(e9, t3, n2, r2) {
  return this.on(e9, t3, n2, r2, { one: true });
}, vo.removeListener = vo.off = function(e9, t3, n2, r2) {
  var i2 = this;
  0 !== this.emitting && (this.listeners = this.listeners.slice());
  for (var a2 = this.listeners, o2 = function(o3) {
    var s3 = a2[o3];
    yo(i2, function(t4, n3, r3, i3, l2, u2) {
      if ((s3.type === r3 || "*" === e9) && (!i3 && ".*" !== s3.namespace || s3.namespace === i3) && (!l2 || t4.qualifierCompare(s3.qualifier, l2)) && (!u2 || s3.callback === u2))
        return a2.splice(o3, 1), false;
    }, e9, t3, n2, r2);
  }, s2 = a2.length - 1; s2 >= 0; s2--)
    o2(s2);
  return this;
}, vo.removeAllListeners = function() {
  return this.removeListener("*");
}, vo.emit = vo.trigger = function(e9, t3, n2) {
  var r2 = this.listeners, i2 = r2.length;
  return this.emitting++, v(t3) || (t3 = [t3]), bo(this, function(e10, a2) {
    null != n2 && (r2 = [{ event: a2.event, type: a2.type, namespace: a2.namespace, callback: n2 }], i2 = r2.length);
    for (var o2 = function(n3) {
      var i3 = r2[n3];
      if (i3.type === a2.type && (!i3.namespace || i3.namespace === a2.namespace || ".*" === i3.namespace) && e10.eventMatches(e10.context, i3, a2)) {
        var o3 = [a2];
        null != t3 && function(e11, t4) {
          for (var n4 = 0; n4 < t4.length; n4++) {
            var r3 = t4[n4];
            e11.push(r3);
          }
        }(o3, t3), e10.beforeEmit(e10.context, i3, a2), i3.conf && i3.conf.one && (e10.listeners = e10.listeners.filter(function(e11) {
          return e11 !== i3;
        }));
        var s3 = e10.callbackContext(e10.context, i3, a2), l2 = i3.callback.apply(s3, o3);
        e10.afterEmit(e10.context, i3, a2), false === l2 && (a2.stopPropagation(), a2.preventDefault());
      }
    }, s2 = 0; s2 < i2; s2++)
      o2(s2);
    e10.bubble(e10.context) && !a2.isPropagationStopped() && e10.parent(e10.context).emit(a2, t3);
  }, e9), this.emitting--, this;
};
var xo = { qualifierCompare: function(e9, t3) {
  return null == e9 || null == t3 ? null == e9 && null == t3 : e9.sameText(t3);
}, eventMatches: function(e9, t3, n2) {
  var r2 = t3.qualifier;
  return null == r2 || e9 !== n2.target && w(n2.target) && r2.matches(n2.target);
}, addEventFields: function(e9, t3) {
  t3.cy = e9.cy(), t3.target = e9;
}, callbackContext: function(e9, t3, n2) {
  return null != t3.qualifier ? n2.target : e9;
}, beforeEmit: function(e9, t3) {
  t3.conf && t3.conf.once && t3.conf.onceCollection.removeListener(t3.event, t3.qualifier, t3.callback);
}, bubble: function() {
  return true;
}, parent: function(e9) {
  return e9.isChild() ? e9.parent() : e9.cy();
} };
var wo = function(e9) {
  return f(e9) ? new ba(e9) : e9;
};
var Eo = { createEmitter: function() {
  for (var e9 = 0; e9 < this.length; e9++) {
    var t3 = this[e9], n2 = t3._private;
    n2.emitter || (n2.emitter = new go(xo, t3));
  }
  return this;
}, emitter: function() {
  return this._private.emitter;
}, on: function(e9, t3, n2) {
  for (var r2 = wo(t3), i2 = 0; i2 < this.length; i2++) {
    this[i2].emitter().on(e9, r2, n2);
  }
  return this;
}, removeListener: function(e9, t3, n2) {
  for (var r2 = wo(t3), i2 = 0; i2 < this.length; i2++) {
    this[i2].emitter().removeListener(e9, r2, n2);
  }
  return this;
}, removeAllListeners: function() {
  for (var e9 = 0; e9 < this.length; e9++) {
    this[e9].emitter().removeAllListeners();
  }
  return this;
}, one: function(e9, t3, n2) {
  for (var r2 = wo(t3), i2 = 0; i2 < this.length; i2++) {
    this[i2].emitter().one(e9, r2, n2);
  }
  return this;
}, once: function(e9, t3, n2) {
  for (var r2 = wo(t3), i2 = 0; i2 < this.length; i2++) {
    this[i2].emitter().on(e9, r2, n2, { once: true, onceCollection: this });
  }
}, emit: function(e9, t3) {
  for (var n2 = 0; n2 < this.length; n2++) {
    this[n2].emitter().emit(e9, t3);
  }
  return this;
}, emitAndNotify: function(e9, t3) {
  if (0 !== this.length)
    return this.cy().notify(e9, this), this.emit(e9, t3), this;
} };
Li.eventAliasesOn(Eo);
var ko = { nodes: function(e9) {
  return this.filter(function(e10) {
    return e10.isNode();
  }).filter(e9);
}, edges: function(e9) {
  return this.filter(function(e10) {
    return e10.isEdge();
  }).filter(e9);
}, byGroup: function() {
  for (var e9 = this.spawn(), t3 = this.spawn(), n2 = 0; n2 < this.length; n2++) {
    var r2 = this[n2];
    r2.isNode() ? e9.push(r2) : t3.push(r2);
  }
  return { nodes: e9, edges: t3 };
}, filter: function(e9, t3) {
  if (void 0 === e9)
    return this;
  if (f(e9) || x(e9))
    return new ba(e9).filter(this);
  if (g(e9)) {
    for (var n2 = this.spawn(), r2 = 0; r2 < this.length; r2++) {
      var i2 = this[r2];
      (t3 ? e9.apply(t3, [i2, r2, this]) : e9(i2, r2, this)) && n2.push(i2);
    }
    return n2;
  }
  return this.spawn();
}, not: function(e9) {
  if (e9) {
    f(e9) && (e9 = this.filter(e9));
    for (var t3 = this.spawn(), n2 = 0; n2 < this.length; n2++) {
      var r2 = this[n2];
      e9.has(r2) || t3.push(r2);
    }
    return t3;
  }
  return this;
}, absoluteComplement: function() {
  return this.cy().mutableElements().not(this);
}, intersect: function(e9) {
  if (f(e9)) {
    var t3 = e9;
    return this.filter(t3);
  }
  for (var n2 = this.spawn(), r2 = e9, i2 = this.length < e9.length, a2 = i2 ? this : r2, o2 = i2 ? r2 : this, s2 = 0; s2 < a2.length; s2++) {
    var l2 = a2[s2];
    o2.has(l2) && n2.push(l2);
  }
  return n2;
}, xor: function(e9) {
  var t3 = this._private.cy;
  f(e9) && (e9 = t3.$(e9));
  var n2 = this.spawn(), r2 = e9, i2 = function(e10, t4) {
    for (var r3 = 0; r3 < e10.length; r3++) {
      var i3 = e10[r3], a2 = i3._private.data.id;
      t4.hasElementWithId(a2) || n2.push(i3);
    }
  };
  return i2(this, r2), i2(r2, this), n2;
}, diff: function(e9) {
  var t3 = this._private.cy;
  f(e9) && (e9 = t3.$(e9));
  var n2 = this.spawn(), r2 = this.spawn(), i2 = this.spawn(), a2 = e9, o2 = function(e10, t4, n3) {
    for (var r3 = 0; r3 < e10.length; r3++) {
      var a3 = e10[r3], o3 = a3._private.data.id;
      t4.hasElementWithId(o3) ? i2.merge(a3) : n3.push(a3);
    }
  };
  return o2(this, a2, n2), o2(a2, this, r2), { left: n2, right: r2, both: i2 };
}, add: function(e9) {
  var t3 = this._private.cy;
  if (!e9)
    return this;
  if (f(e9)) {
    var n2 = e9;
    e9 = t3.mutableElements().filter(n2);
  }
  for (var r2 = this.spawnSelf(), i2 = 0; i2 < e9.length; i2++) {
    var a2 = e9[i2], o2 = !this.has(a2);
    o2 && r2.push(a2);
  }
  return r2;
}, merge: function(e9) {
  var t3 = this._private, n2 = t3.cy;
  if (!e9)
    return this;
  if (e9 && f(e9)) {
    var r2 = e9;
    e9 = n2.mutableElements().filter(r2);
  }
  for (var i2 = t3.map, a2 = 0; a2 < e9.length; a2++) {
    var o2 = e9[a2], s2 = o2._private.data.id;
    if (!i2.has(s2)) {
      var l2 = this.length++;
      this[l2] = o2, i2.set(s2, { ele: o2, index: l2 });
    }
  }
  return this;
}, unmergeAt: function(e9) {
  var t3 = this[e9].id(), n2 = this._private.map;
  this[e9] = void 0, n2.delete(t3);
  var r2 = e9 === this.length - 1;
  if (this.length > 1 && !r2) {
    var i2 = this.length - 1, a2 = this[i2], o2 = a2._private.data.id;
    this[i2] = void 0, this[e9] = a2, n2.set(o2, { ele: a2, index: e9 });
  }
  return this.length--, this;
}, unmergeOne: function(e9) {
  e9 = e9[0];
  var t3 = this._private, n2 = e9._private.data.id, r2 = t3.map.get(n2);
  if (!r2)
    return this;
  var i2 = r2.index;
  return this.unmergeAt(i2), this;
}, unmerge: function(e9) {
  var t3 = this._private.cy;
  if (!e9)
    return this;
  if (e9 && f(e9)) {
    var n2 = e9;
    e9 = t3.mutableElements().filter(n2);
  }
  for (var r2 = 0; r2 < e9.length; r2++)
    this.unmergeOne(e9[r2]);
  return this;
}, unmergeBy: function(e9) {
  for (var t3 = this.length - 1; t3 >= 0; t3--) {
    e9(this[t3]) && this.unmergeAt(t3);
  }
  return this;
}, map: function(e9, t3) {
  for (var n2 = [], r2 = 0; r2 < this.length; r2++) {
    var i2 = this[r2], a2 = t3 ? e9.apply(t3, [i2, r2, this]) : e9(i2, r2, this);
    n2.push(a2);
  }
  return n2;
}, reduce: function(e9, t3) {
  for (var n2 = t3, r2 = 0; r2 < this.length; r2++)
    n2 = e9(n2, this[r2], r2, this);
  return n2;
}, max: function(e9, t3) {
  for (var n2, r2 = -1 / 0, i2 = 0; i2 < this.length; i2++) {
    var a2 = this[i2], o2 = t3 ? e9.apply(t3, [a2, i2, this]) : e9(a2, i2, this);
    o2 > r2 && (r2 = o2, n2 = a2);
  }
  return { value: r2, ele: n2 };
}, min: function(e9, t3) {
  for (var n2, r2 = 1 / 0, i2 = 0; i2 < this.length; i2++) {
    var a2 = this[i2], o2 = t3 ? e9.apply(t3, [a2, i2, this]) : e9(a2, i2, this);
    o2 < r2 && (r2 = o2, n2 = a2);
  }
  return { value: r2, ele: n2 };
} };
var Co = ko;
Co.u = Co["|"] = Co["+"] = Co.union = Co.or = Co.add, Co["\\"] = Co["!"] = Co["-"] = Co.difference = Co.relativeComplement = Co.subtract = Co.not, Co.n = Co["&"] = Co["."] = Co.and = Co.intersection = Co.intersect, Co["^"] = Co["(+)"] = Co["(-)"] = Co.symmetricDifference = Co.symdiff = Co.xor, Co.fnFilter = Co.filterFn = Co.stdFilter = Co.filter, Co.complement = Co.abscomp = Co.absoluteComplement;
var So = function(e9, t3) {
  var n2 = e9.cy().hasCompoundNodes();
  function r2(e10) {
    var t4 = e10.pstyle("z-compound-depth");
    return "auto" === t4.value ? n2 ? e10.zDepth() : 0 : "bottom" === t4.value ? -1 : "top" === t4.value ? Ne : 0;
  }
  var i2 = r2(e9) - r2(t3);
  if (0 !== i2)
    return i2;
  function a2(e10) {
    return "auto" === e10.pstyle("z-index-compare").value && e10.isNode() ? 1 : 0;
  }
  var o2 = a2(e9) - a2(t3);
  if (0 !== o2)
    return o2;
  var s2 = e9.pstyle("z-index").value - t3.pstyle("z-index").value;
  return 0 !== s2 ? s2 : e9.poolIndex() - t3.poolIndex();
};
var Po = { forEach: function(e9, t3) {
  if (g(e9))
    for (var n2 = this.length, r2 = 0; r2 < n2; r2++) {
      var i2 = this[r2];
      if (false === (t3 ? e9.apply(t3, [i2, r2, this]) : e9(i2, r2, this)))
        break;
    }
  return this;
}, toArray: function() {
  for (var e9 = [], t3 = 0; t3 < this.length; t3++)
    e9.push(this[t3]);
  return e9;
}, slice: function(e9, t3) {
  var n2 = [], r2 = this.length;
  null == t3 && (t3 = r2), null == e9 && (e9 = 0), e9 < 0 && (e9 = r2 + e9), t3 < 0 && (t3 = r2 + t3);
  for (var i2 = e9; i2 >= 0 && i2 < t3 && i2 < r2; i2++)
    n2.push(this[i2]);
  return this.spawn(n2);
}, size: function() {
  return this.length;
}, eq: function(e9) {
  return this[e9] || this.spawn();
}, first: function() {
  return this[0] || this.spawn();
}, last: function() {
  return this[this.length - 1] || this.spawn();
}, empty: function() {
  return 0 === this.length;
}, nonempty: function() {
  return !this.empty();
}, sort: function(e9) {
  if (!g(e9))
    return this;
  var t3 = this.toArray().sort(e9);
  return this.spawn(t3);
}, sortByZIndex: function() {
  return this.sort(So);
}, zDepth: function() {
  var e9 = this[0];
  if (e9) {
    var t3 = e9._private;
    if ("nodes" === t3.group) {
      var n2 = t3.data.parent ? e9.parents().size() : 0;
      return e9.isParent() ? n2 : Ne - 1;
    }
    var r2 = t3.source, i2 = t3.target, a2 = r2.zDepth(), o2 = i2.zDepth();
    return Math.max(a2, o2, 0);
  }
} };
Po.each = Po.forEach;
"undefined" != ("undefined" == typeof Symbol ? "undefined" : e(Symbol)) && "undefined" != e(Symbol.iterator) && (Po[Symbol.iterator] = function() {
  var e9 = this, t3 = { value: void 0, done: false }, n2 = 0, r2 = this.length;
  return i({ next: function() {
    return n2 < r2 ? t3.value = e9[n2++] : (t3.value = void 0, t3.done = true), t3;
  } }, Symbol.iterator, function() {
    return this;
  });
});
var Do = Xe({ nodeDimensionsIncludeLabels: false });
var To = { layoutDimensions: function(e9) {
  var t3;
  if (e9 = Do(e9), this.takesUpSpace())
    if (e9.nodeDimensionsIncludeLabels) {
      var n2 = this.boundingBox();
      t3 = { w: n2.w, h: n2.h };
    } else
      t3 = { w: this.outerWidth(), h: this.outerHeight() };
  else
    t3 = { w: 0, h: 0 };
  return 0 !== t3.w && 0 !== t3.h || (t3.w = t3.h = 1), t3;
}, layoutPositions: function(e9, t3, n2) {
  var r2 = this.nodes().filter(function(e10) {
    return !e10.isParent();
  }), i2 = this.cy(), a2 = t3.eles, o2 = function(e10) {
    return e10.id();
  }, s2 = D(n2, o2);
  e9.emit({ type: "layoutstart", layout: e9 }), e9.animations = [];
  var l2 = t3.spacingFactor && 1 !== t3.spacingFactor, u2 = function() {
    if (!l2)
      return null;
    for (var e10 = Dt(), t4 = 0; t4 < r2.length; t4++) {
      var n3 = r2[t4], i3 = s2(n3, t4);
      Tt(e10, i3.x, i3.y);
    }
    return e10;
  }(), c2 = D(function(e10, n3) {
    var r3 = s2(e10, n3);
    l2 && (r3 = function(e11, t4, n4) {
      var r4 = t4.x1 + t4.w / 2, i3 = t4.y1 + t4.h / 2;
      return { x: r4 + (n4.x - r4) * e11, y: i3 + (n4.y - i3) * e11 };
    }(Math.abs(t3.spacingFactor), u2, r3));
    return null != t3.transform && (r3 = t3.transform(e10, r3)), r3;
  }, o2);
  if (t3.animate) {
    for (var d2 = 0; d2 < r2.length; d2++) {
      var h2 = r2[d2], p2 = c2(h2, d2);
      if (null == t3.animateFilter || t3.animateFilter(h2, d2)) {
        var f2 = h2.animation({ position: p2, duration: t3.animationDuration, easing: t3.animationEasing });
        e9.animations.push(f2);
      } else
        h2.position(p2);
    }
    if (t3.fit) {
      var g2 = i2.animation({ fit: { boundingBox: a2.boundingBoxAt(c2), padding: t3.padding }, duration: t3.animationDuration, easing: t3.animationEasing });
      e9.animations.push(g2);
    } else if (void 0 !== t3.zoom && void 0 !== t3.pan) {
      var v2 = i2.animation({ zoom: t3.zoom, pan: t3.pan, duration: t3.animationDuration, easing: t3.animationEasing });
      e9.animations.push(v2);
    }
    e9.animations.forEach(function(e10) {
      return e10.play();
    }), e9.one("layoutready", t3.ready), e9.emit({ type: "layoutready", layout: e9 }), hr.all(e9.animations.map(function(e10) {
      return e10.promise();
    })).then(function() {
      e9.one("layoutstop", t3.stop), e9.emit({ type: "layoutstop", layout: e9 });
    });
  } else
    r2.positions(c2), t3.fit && i2.fit(t3.eles, t3.padding), null != t3.zoom && i2.zoom(t3.zoom), t3.pan && i2.pan(t3.pan), e9.one("layoutready", t3.ready), e9.emit({ type: "layoutready", layout: e9 }), e9.one("layoutstop", t3.stop), e9.emit({ type: "layoutstop", layout: e9 });
  return this;
}, layout: function(e9) {
  return this.cy().makeLayout(I({}, e9, { eles: this }));
} };
function _o(e9, t3, n2) {
  var r2, i2 = n2._private, a2 = i2.styleCache = i2.styleCache || [];
  return null != (r2 = a2[e9]) ? r2 : r2 = a2[e9] = t3(n2);
}
function Mo(e9, t3) {
  return e9 = Pe(e9), function(n2) {
    return _o(e9, t3, n2);
  };
}
function Bo(e9, t3) {
  e9 = Pe(e9);
  var n2 = function(e10) {
    return t3.call(e10);
  };
  return function() {
    var t4 = this[0];
    if (t4)
      return _o(e9, n2, t4);
  };
}
To.createLayout = To.makeLayout = To.layout;
var No = { recalculateRenderedStyle: function(e9) {
  var t3 = this.cy(), n2 = t3.renderer(), r2 = t3.styleEnabled();
  return n2 && r2 && n2.recalculateRenderedStyle(this, e9), this;
}, dirtyStyleCache: function() {
  var e9, t3 = this.cy(), n2 = function(e10) {
    return e10._private.styleCache = null;
  };
  t3.hasCompoundNodes() ? ((e9 = this.spawnSelf().merge(this.descendants()).merge(this.parents())).merge(e9.connectedEdges()), e9.forEach(n2)) : this.forEach(function(e10) {
    n2(e10), e10.connectedEdges().forEach(n2);
  });
  return this;
}, updateStyle: function(e9) {
  var t3 = this._private.cy;
  if (!t3.styleEnabled())
    return this;
  if (t3.batching())
    return t3._private.batchStyleEles.merge(this), this;
  var n2 = this;
  e9 = !(!e9 && void 0 !== e9), t3.hasCompoundNodes() && (n2 = this.spawnSelf().merge(this.descendants()).merge(this.parents()));
  var r2 = n2;
  return e9 ? r2.emitAndNotify("style") : r2.emit("style"), n2.forEach(function(e10) {
    return e10._private.styleDirty = true;
  }), this;
}, cleanStyle: function() {
  var e9 = this.cy();
  if (e9.styleEnabled())
    for (var t3 = 0; t3 < this.length; t3++) {
      var n2 = this[t3];
      n2._private.styleDirty && (n2._private.styleDirty = false, e9.style().apply(n2));
    }
}, parsedStyle: function(e9) {
  var t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n2 = this[0], r2 = n2.cy();
  if (r2.styleEnabled() && n2) {
    this.cleanStyle();
    var i2 = n2._private.style[e9];
    return null != i2 ? i2 : t3 ? r2.style().getDefaultProperty(e9) : null;
  }
}, numericStyle: function(e9) {
  var t3 = this[0];
  if (t3.cy().styleEnabled() && t3) {
    var n2 = t3.pstyle(e9);
    return void 0 !== n2.pfValue ? n2.pfValue : n2.value;
  }
}, numericStyleUnits: function(e9) {
  var t3 = this[0];
  if (t3.cy().styleEnabled())
    return t3 ? t3.pstyle(e9).units : void 0;
}, renderedStyle: function(e9) {
  var t3 = this.cy();
  if (!t3.styleEnabled())
    return this;
  var n2 = this[0];
  return n2 ? t3.style().getRenderedStyle(n2, e9) : void 0;
}, style: function(e9, t3) {
  var n2 = this.cy();
  if (!n2.styleEnabled())
    return this;
  var r2 = n2.style();
  if (y(e9)) {
    var i2 = e9;
    r2.applyBypass(this, i2, false), this.emitAndNotify("style");
  } else if (f(e9)) {
    if (void 0 === t3) {
      var a2 = this[0];
      return a2 ? r2.getStylePropertyValue(a2, e9) : void 0;
    }
    r2.applyBypass(this, e9, t3, false), this.emitAndNotify("style");
  } else if (void 0 === e9) {
    var o2 = this[0];
    return o2 ? r2.getRawStyle(o2) : void 0;
  }
  return this;
}, removeStyle: function(e9) {
  var t3 = this.cy();
  if (!t3.styleEnabled())
    return this;
  var n2 = t3.style();
  if (void 0 === e9)
    for (var r2 = 0; r2 < this.length; r2++) {
      var i2 = this[r2];
      n2.removeAllBypasses(i2, false);
    }
  else {
    e9 = e9.split(/\s+/);
    for (var a2 = 0; a2 < this.length; a2++) {
      var o2 = this[a2];
      n2.removeBypasses(o2, e9, false);
    }
  }
  return this.emitAndNotify("style"), this;
}, show: function() {
  return this.css("display", "element"), this;
}, hide: function() {
  return this.css("display", "none"), this;
}, effectiveOpacity: function() {
  var e9 = this.cy();
  if (!e9.styleEnabled())
    return 1;
  var t3 = e9.hasCompoundNodes(), n2 = this[0];
  if (n2) {
    var r2 = n2._private, i2 = n2.pstyle("opacity").value;
    if (!t3)
      return i2;
    var a2 = r2.data.parent ? n2.parents() : null;
    if (a2)
      for (var o2 = 0; o2 < a2.length; o2++) {
        i2 *= a2[o2].pstyle("opacity").value;
      }
    return i2;
  }
}, transparent: function() {
  if (!this.cy().styleEnabled())
    return false;
  var e9 = this[0], t3 = e9.cy().hasCompoundNodes();
  return e9 ? t3 ? 0 === e9.effectiveOpacity() : 0 === e9.pstyle("opacity").value : void 0;
}, backgrounding: function() {
  return !!this.cy().styleEnabled() && !!this[0]._private.backgrounding;
} };
function zo(e9, t3) {
  var n2 = e9._private.data.parent ? e9.parents() : null;
  if (n2)
    for (var r2 = 0; r2 < n2.length; r2++) {
      if (!t3(n2[r2]))
        return false;
    }
  return true;
}
function Io(e9) {
  var t3 = e9.ok, n2 = e9.edgeOkViaNode || e9.ok, r2 = e9.parentOk || e9.ok;
  return function() {
    var e10 = this.cy();
    if (!e10.styleEnabled())
      return true;
    var i2 = this[0], a2 = e10.hasCompoundNodes();
    if (i2) {
      var o2 = i2._private;
      if (!t3(i2))
        return false;
      if (i2.isNode())
        return !a2 || zo(i2, r2);
      var s2 = o2.source, l2 = o2.target;
      return n2(s2) && (!a2 || zo(s2, n2)) && (s2 === l2 || n2(l2) && (!a2 || zo(l2, n2)));
    }
  };
}
var Ao = Mo("eleTakesUpSpace", function(e9) {
  return "element" === e9.pstyle("display").value && 0 !== e9.width() && (!e9.isNode() || 0 !== e9.height());
});
No.takesUpSpace = Bo("takesUpSpace", Io({ ok: Ao }));
var Lo = Mo("eleInteractive", function(e9) {
  return "yes" === e9.pstyle("events").value && "visible" === e9.pstyle("visibility").value && Ao(e9);
});
var Oo = Mo("parentInteractive", function(e9) {
  return "visible" === e9.pstyle("visibility").value && Ao(e9);
});
No.interactive = Bo("interactive", Io({ ok: Lo, parentOk: Oo, edgeOkViaNode: Ao })), No.noninteractive = function() {
  var e9 = this[0];
  if (e9)
    return !e9.interactive();
};
var Ro = Mo("eleVisible", function(e9) {
  return "visible" === e9.pstyle("visibility").value && 0 !== e9.pstyle("opacity").pfValue && Ao(e9);
});
var Vo = Ao;
No.visible = Bo("visible", Io({ ok: Ro, edgeOkViaNode: Vo })), No.hidden = function() {
  var e9 = this[0];
  if (e9)
    return !e9.visible();
}, No.isBundledBezier = Bo("isBundledBezier", function() {
  return !!this.cy().styleEnabled() && (!this.removed() && "bezier" === this.pstyle("curve-style").value && this.takesUpSpace());
}), No.bypass = No.css = No.style, No.renderedCss = No.renderedStyle, No.removeBypass = No.removeCss = No.removeStyle, No.pstyle = No.parsedStyle;
var Fo = {};
function jo(e9) {
  return function() {
    var t3 = arguments, n2 = [];
    if (2 === t3.length) {
      var r2 = t3[0], i2 = t3[1];
      this.on(e9.event, r2, i2);
    } else if (1 === t3.length && g(t3[0])) {
      var a2 = t3[0];
      this.on(e9.event, a2);
    } else if (0 === t3.length || 1 === t3.length && v(t3[0])) {
      for (var o2 = 1 === t3.length ? t3[0] : null, s2 = 0; s2 < this.length; s2++) {
        var l2 = this[s2], u2 = !e9.ableField || l2._private[e9.ableField], c2 = l2._private[e9.field] != e9.value;
        if (e9.overrideAble) {
          var d2 = e9.overrideAble(l2);
          if (void 0 !== d2 && (u2 = d2, !d2))
            return this;
        }
        u2 && (l2._private[e9.field] = e9.value, c2 && n2.push(l2));
      }
      var h2 = this.spawn(n2);
      h2.updateStyle(), h2.emit(e9.event), o2 && h2.emit(o2);
    }
    return this;
  };
}
function qo(e9) {
  Fo[e9.field] = function() {
    var t3 = this[0];
    if (t3) {
      if (e9.overrideField) {
        var n2 = e9.overrideField(t3);
        if (void 0 !== n2)
          return n2;
      }
      return t3._private[e9.field];
    }
  }, Fo[e9.on] = jo({ event: e9.on, field: e9.field, ableField: e9.ableField, overrideAble: e9.overrideAble, value: true }), Fo[e9.off] = jo({ event: e9.off, field: e9.field, ableField: e9.ableField, overrideAble: e9.overrideAble, value: false });
}
qo({ field: "locked", overrideField: function(e9) {
  return !!e9.cy().autolock() || void 0;
}, on: "lock", off: "unlock" }), qo({ field: "grabbable", overrideField: function(e9) {
  return !e9.cy().autoungrabify() && !e9.pannable() && void 0;
}, on: "grabify", off: "ungrabify" }), qo({ field: "selected", ableField: "selectable", overrideAble: function(e9) {
  return !e9.cy().autounselectify() && void 0;
}, on: "select", off: "unselect" }), qo({ field: "selectable", overrideField: function(e9) {
  return !e9.cy().autounselectify() && void 0;
}, on: "selectify", off: "unselectify" }), Fo.deselect = Fo.unselect, Fo.grabbed = function() {
  var e9 = this[0];
  if (e9)
    return e9._private.grabbed;
}, qo({ field: "active", on: "activate", off: "unactivate" }), qo({ field: "pannable", on: "panify", off: "unpanify" }), Fo.inactive = function() {
  var e9 = this[0];
  if (e9)
    return !e9._private.active;
};
var Yo = {};
var Xo = function(e9) {
  return function(t3) {
    for (var n2 = [], r2 = 0; r2 < this.length; r2++) {
      var i2 = this[r2];
      if (i2.isNode()) {
        for (var a2 = false, o2 = i2.connectedEdges(), s2 = 0; s2 < o2.length; s2++) {
          var l2 = o2[s2], u2 = l2.source(), c2 = l2.target();
          if (e9.noIncomingEdges && c2 === i2 && u2 !== i2 || e9.noOutgoingEdges && u2 === i2 && c2 !== i2) {
            a2 = true;
            break;
          }
        }
        a2 || n2.push(i2);
      }
    }
    return this.spawn(n2, true).filter(t3);
  };
};
var Wo = function(e9) {
  return function(t3) {
    for (var n2 = [], r2 = 0; r2 < this.length; r2++) {
      var i2 = this[r2];
      if (i2.isNode())
        for (var a2 = i2.connectedEdges(), o2 = 0; o2 < a2.length; o2++) {
          var s2 = a2[o2], l2 = s2.source(), u2 = s2.target();
          e9.outgoing && l2 === i2 ? (n2.push(s2), n2.push(u2)) : e9.incoming && u2 === i2 && (n2.push(s2), n2.push(l2));
        }
    }
    return this.spawn(n2, true).filter(t3);
  };
};
var Ho = function(e9) {
  return function(t3) {
    for (var n2 = this, r2 = [], i2 = {}; ; ) {
      var a2 = e9.outgoing ? n2.outgoers() : n2.incomers();
      if (0 === a2.length)
        break;
      for (var o2 = false, s2 = 0; s2 < a2.length; s2++) {
        var l2 = a2[s2], u2 = l2.id();
        i2[u2] || (i2[u2] = true, r2.push(l2), o2 = true);
      }
      if (!o2)
        break;
      n2 = a2;
    }
    return this.spawn(r2, true).filter(t3);
  };
};
function Ko(e9) {
  return function(t3) {
    for (var n2 = [], r2 = 0; r2 < this.length; r2++) {
      var i2 = this[r2]._private[e9.attr];
      i2 && n2.push(i2);
    }
    return this.spawn(n2, true).filter(t3);
  };
}
function Go(e9) {
  return function(t3) {
    var n2 = [], r2 = this._private.cy, i2 = e9 || {};
    f(t3) && (t3 = r2.$(t3));
    for (var a2 = 0; a2 < t3.length; a2++)
      for (var o2 = t3[a2]._private.edges, s2 = 0; s2 < o2.length; s2++) {
        var l2 = o2[s2], u2 = l2._private.data, c2 = this.hasElementWithId(u2.source) && t3.hasElementWithId(u2.target), d2 = t3.hasElementWithId(u2.source) && this.hasElementWithId(u2.target);
        if (c2 || d2) {
          if (i2.thisIsSrc || i2.thisIsTgt) {
            if (i2.thisIsSrc && !c2)
              continue;
            if (i2.thisIsTgt && !d2)
              continue;
          }
          n2.push(l2);
        }
      }
    return this.spawn(n2, true);
  };
}
function Uo(e9) {
  return e9 = I({}, { codirected: false }, e9), function(t3) {
    for (var n2 = [], r2 = this.edges(), i2 = e9, a2 = 0; a2 < r2.length; a2++)
      for (var o2 = r2[a2]._private, s2 = o2.source, l2 = s2._private.data.id, u2 = o2.data.target, c2 = s2._private.edges, d2 = 0; d2 < c2.length; d2++) {
        var h2 = c2[d2], p2 = h2._private.data, f2 = p2.target, g2 = p2.source, v2 = f2 === u2 && g2 === l2, y2 = l2 === f2 && u2 === g2;
        (i2.codirected && v2 || !i2.codirected && (v2 || y2)) && n2.push(h2);
      }
    return this.spawn(n2, true).filter(t3);
  };
}
Yo.clearTraversalCache = function() {
  for (var e9 = 0; e9 < this.length; e9++)
    this[e9]._private.traversalCache = null;
}, I(Yo, { roots: Xo({ noIncomingEdges: true }), leaves: Xo({ noOutgoingEdges: true }), outgoers: Ca(Wo({ outgoing: true }), "outgoers"), successors: Ho({ outgoing: true }), incomers: Ca(Wo({ incoming: true }), "incomers"), predecessors: Ho({ incoming: true }) }), I(Yo, { neighborhood: Ca(function(e9) {
  for (var t3 = [], n2 = this.nodes(), r2 = 0; r2 < n2.length; r2++)
    for (var i2 = n2[r2], a2 = i2.connectedEdges(), o2 = 0; o2 < a2.length; o2++) {
      var s2 = a2[o2], l2 = s2.source(), u2 = s2.target(), c2 = i2 === l2 ? u2 : l2;
      c2.length > 0 && t3.push(c2[0]), t3.push(s2[0]);
    }
  return this.spawn(t3, true).filter(e9);
}, "neighborhood"), closedNeighborhood: function(e9) {
  return this.neighborhood().add(this).filter(e9);
}, openNeighborhood: function(e9) {
  return this.neighborhood(e9);
} }), Yo.neighbourhood = Yo.neighborhood, Yo.closedNeighbourhood = Yo.closedNeighborhood, Yo.openNeighbourhood = Yo.openNeighborhood, I(Yo, { source: Ca(function(e9) {
  var t3, n2 = this[0];
  return n2 && (t3 = n2._private.source || n2.cy().collection()), t3 && e9 ? t3.filter(e9) : t3;
}, "source"), target: Ca(function(e9) {
  var t3, n2 = this[0];
  return n2 && (t3 = n2._private.target || n2.cy().collection()), t3 && e9 ? t3.filter(e9) : t3;
}, "target"), sources: Ko({ attr: "source" }), targets: Ko({ attr: "target" }) }), I(Yo, { edgesWith: Ca(Go(), "edgesWith"), edgesTo: Ca(Go({ thisIsSrc: true }), "edgesTo") }), I(Yo, { connectedEdges: Ca(function(e9) {
  for (var t3 = [], n2 = 0; n2 < this.length; n2++) {
    var r2 = this[n2];
    if (r2.isNode())
      for (var i2 = r2._private.edges, a2 = 0; a2 < i2.length; a2++) {
        var o2 = i2[a2];
        t3.push(o2);
      }
  }
  return this.spawn(t3, true).filter(e9);
}, "connectedEdges"), connectedNodes: Ca(function(e9) {
  for (var t3 = [], n2 = 0; n2 < this.length; n2++) {
    var r2 = this[n2];
    r2.isEdge() && (t3.push(r2.source()[0]), t3.push(r2.target()[0]));
  }
  return this.spawn(t3, true).filter(e9);
}, "connectedNodes"), parallelEdges: Ca(Uo(), "parallelEdges"), codirectedEdges: Ca(Uo({ codirected: true }), "codirectedEdges") }), I(Yo, { components: function(e9) {
  var t3 = this, n2 = t3.cy(), r2 = n2.collection(), i2 = null == e9 ? t3.nodes() : e9.nodes(), a2 = [];
  null != e9 && i2.empty() && (i2 = e9.sources());
  var o2 = function(e10, t4) {
    r2.merge(e10), i2.unmerge(e10), t4.merge(e10);
  };
  if (i2.empty())
    return t3.spawn();
  var s2 = function() {
    var e10 = n2.collection();
    a2.push(e10);
    var r3 = i2[0];
    o2(r3, e10), t3.bfs({ directed: false, roots: r3, visit: function(t4) {
      return o2(t4, e10);
    } }), e10.forEach(function(n3) {
      n3.connectedEdges().forEach(function(n4) {
        t3.has(n4) && e10.has(n4.source()) && e10.has(n4.target()) && e10.merge(n4);
      });
    });
  };
  do {
    s2();
  } while (i2.length > 0);
  return a2;
}, component: function() {
  var e9 = this[0];
  return e9.cy().mutableElements().components(e9)[0];
} }), Yo.componentsOf = Yo.components;
var Zo = function(e9, t3) {
  var n2 = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], r2 = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
  if (void 0 !== e9) {
    var i2 = new Ue(), a2 = false;
    if (t3) {
      if (t3.length > 0 && y(t3[0]) && !w(t3[0])) {
        a2 = true;
        for (var o2 = [], s2 = new $e(), l2 = 0, u2 = t3.length; l2 < u2; l2++) {
          var c2 = t3[l2];
          null == c2.data && (c2.data = {});
          var d2 = c2.data;
          if (null == d2.id)
            d2.id = je();
          else if (e9.hasElementWithId(d2.id) || s2.has(d2.id))
            continue;
          var h2 = new Qe(e9, c2, false);
          o2.push(h2), s2.add(d2.id);
        }
        t3 = o2;
      }
    } else
      t3 = [];
    this.length = 0;
    for (var p2 = 0, f2 = t3.length; p2 < f2; p2++) {
      var g2 = t3[p2][0];
      if (null != g2) {
        var v2 = g2._private.data.id;
        n2 && i2.has(v2) || (n2 && i2.set(v2, { index: this.length, ele: g2 }), this[this.length] = g2, this.length++);
      }
    }
    this._private = { eles: this, cy: e9, get map() {
      return null == this.lazyMap && this.rebuildMap(), this.lazyMap;
    }, set map(e10) {
      this.lazyMap = e10;
    }, rebuildMap: function() {
      for (var e10 = this.lazyMap = new Ue(), t4 = this.eles, n3 = 0; n3 < t4.length; n3++) {
        var r3 = t4[n3];
        e10.set(r3.id(), { index: n3, ele: r3 });
      }
    } }, n2 && (this._private.map = i2), a2 && !r2 && this.restore();
  } else
    Oe("A collection must have a reference to the core");
};
var $o = Qe.prototype = Zo.prototype = Object.create(Array.prototype);
$o.instanceString = function() {
  return "collection";
}, $o.spawn = function(e9, t3) {
  return new Zo(this.cy(), e9, t3);
}, $o.spawnSelf = function() {
  return this.spawn(this);
}, $o.cy = function() {
  return this._private.cy;
}, $o.renderer = function() {
  return this._private.cy.renderer();
}, $o.element = function() {
  return this[0];
}, $o.collection = function() {
  return E(this) ? this : new Zo(this._private.cy, [this]);
}, $o.unique = function() {
  return new Zo(this._private.cy, this, true);
}, $o.hasElementWithId = function(e9) {
  return e9 = "" + e9, this._private.map.has(e9);
}, $o.getElementById = function(e9) {
  e9 = "" + e9;
  var t3 = this._private.cy, n2 = this._private.map.get(e9);
  return n2 ? n2.ele : new Zo(t3);
}, $o.$id = $o.getElementById, $o.poolIndex = function() {
  var e9 = this._private.cy._private.elements, t3 = this[0]._private.data.id;
  return e9._private.map.get(t3).index;
}, $o.indexOf = function(e9) {
  var t3 = e9[0]._private.data.id;
  return this._private.map.get(t3).index;
}, $o.indexOfId = function(e9) {
  return e9 = "" + e9, this._private.map.get(e9).index;
}, $o.json = function(e9) {
  var t3 = this.element(), n2 = this.cy();
  if (null == t3 && e9)
    return this;
  if (null != t3) {
    var r2 = t3._private;
    if (y(e9)) {
      if (n2.startBatch(), e9.data) {
        t3.data(e9.data);
        var i2 = r2.data;
        if (t3.isEdge()) {
          var a2 = false, o2 = {}, s2 = e9.data.source, l2 = e9.data.target;
          null != s2 && s2 != i2.source && (o2.source = "" + s2, a2 = true), null != l2 && l2 != i2.target && (o2.target = "" + l2, a2 = true), a2 && (t3 = t3.move(o2));
        } else {
          var u2 = "parent" in e9.data, c2 = e9.data.parent;
          !u2 || null == c2 && null == i2.parent || c2 == i2.parent || (void 0 === c2 && (c2 = null), null != c2 && (c2 = "" + c2), t3 = t3.move({ parent: c2 }));
        }
      }
      e9.position && t3.position(e9.position);
      var d2 = function(n3, i3, a3) {
        var o3 = e9[n3];
        null != o3 && o3 !== r2[n3] && (o3 ? t3[i3]() : t3[a3]());
      };
      return d2("removed", "remove", "restore"), d2("selected", "select", "unselect"), d2("selectable", "selectify", "unselectify"), d2("locked", "lock", "unlock"), d2("grabbable", "grabify", "ungrabify"), d2("pannable", "panify", "unpanify"), null != e9.classes && t3.classes(e9.classes), n2.endBatch(), this;
    }
    if (void 0 === e9) {
      var h2 = { data: Fe(r2.data), position: Fe(r2.position), group: r2.group, removed: r2.removed, selected: r2.selected, selectable: r2.selectable, locked: r2.locked, grabbable: r2.grabbable, pannable: r2.pannable, classes: null };
      h2.classes = "";
      var p2 = 0;
      return r2.classes.forEach(function(e10) {
        return h2.classes += 0 == p2++ ? e10 : " " + e10;
      }), h2;
    }
  }
}, $o.jsons = function() {
  for (var e9 = [], t3 = 0; t3 < this.length; t3++) {
    var n2 = this[t3].json();
    e9.push(n2);
  }
  return e9;
}, $o.clone = function() {
  for (var e9 = this.cy(), t3 = [], n2 = 0; n2 < this.length; n2++) {
    var r2 = this[n2].json(), i2 = new Qe(e9, r2, false);
    t3.push(i2);
  }
  return new Zo(e9, t3);
}, $o.copy = $o.clone, $o.restore = function() {
  for (var e9, t3, n2 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], r2 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i2 = this, a2 = i2.cy(), o2 = a2._private, s2 = [], l2 = [], u2 = 0, c2 = i2.length; u2 < c2; u2++) {
    var d2 = i2[u2];
    r2 && !d2.removed() || (d2.isNode() ? s2.push(d2) : l2.push(d2));
  }
  e9 = s2.concat(l2);
  var h2 = function() {
    e9.splice(t3, 1), t3--;
  };
  for (t3 = 0; t3 < e9.length; t3++) {
    var p2 = e9[t3], g2 = p2._private, v2 = g2.data;
    if (p2.clearTraversalCache(), r2 || g2.removed)
      if (void 0 === v2.id)
        v2.id = je();
      else if (m(v2.id))
        v2.id = "" + v2.id;
      else {
        if (S(v2.id) || !f(v2.id)) {
          Oe("Can not create element with invalid string ID `" + v2.id + "`"), h2();
          continue;
        }
        if (a2.hasElementWithId(v2.id)) {
          Oe("Can not create second element with ID `" + v2.id + "`"), h2();
          continue;
        }
      }
    else
      ;
    var y2 = v2.id;
    if (p2.isNode()) {
      var b2 = g2.position;
      null == b2.x && (b2.x = 0), null == b2.y && (b2.y = 0);
    }
    if (p2.isEdge()) {
      for (var x2 = p2, w2 = ["source", "target"], E2 = w2.length, k2 = false, C2 = 0; C2 < E2; C2++) {
        var P2 = w2[C2], D2 = v2[P2];
        m(D2) && (D2 = v2[P2] = "" + v2[P2]), null == D2 || "" === D2 ? (Oe("Can not create edge `" + y2 + "` with unspecified " + P2), k2 = true) : a2.hasElementWithId(D2) || (Oe("Can not create edge `" + y2 + "` with nonexistant " + P2 + " `" + D2 + "`"), k2 = true);
      }
      if (k2) {
        h2();
        continue;
      }
      var T2 = a2.getElementById(v2.source), _2 = a2.getElementById(v2.target);
      T2.same(_2) ? T2._private.edges.push(x2) : (T2._private.edges.push(x2), _2._private.edges.push(x2)), x2._private.source = T2, x2._private.target = _2;
    }
    g2.map = new Ue(), g2.map.set(y2, { ele: p2, index: 0 }), g2.removed = false, r2 && a2.addToPool(p2);
  }
  for (var M2 = 0; M2 < s2.length; M2++) {
    var B2 = s2[M2], N2 = B2._private.data;
    m(N2.parent) && (N2.parent = "" + N2.parent);
    var z2 = N2.parent, I2 = null != z2;
    if (I2 || B2._private.parent) {
      var A2 = B2._private.parent ? a2.collection().merge(B2._private.parent) : a2.getElementById(z2);
      if (A2.empty())
        N2.parent = void 0;
      else if (A2[0].removed())
        Ve("Node added with missing parent, reference to parent removed"), N2.parent = void 0, B2._private.parent = null;
      else {
        for (var L2 = false, O2 = A2; !O2.empty(); ) {
          if (B2.same(O2)) {
            L2 = true, N2.parent = void 0;
            break;
          }
          O2 = O2.parent();
        }
        L2 || (A2[0]._private.children.push(B2), B2._private.parent = A2[0], o2.hasCompoundNodes = true);
      }
    }
  }
  if (e9.length > 0) {
    for (var R2 = e9.length === i2.length ? i2 : new Zo(a2, e9), V2 = 0; V2 < R2.length; V2++) {
      var F2 = R2[V2];
      F2.isNode() || (F2.parallelEdges().clearTraversalCache(), F2.source().clearTraversalCache(), F2.target().clearTraversalCache());
    }
    (o2.hasCompoundNodes ? a2.collection().merge(R2).merge(R2.connectedNodes()).merge(R2.parent()) : R2).dirtyCompoundBoundsCache().dirtyBoundingBoxCache().updateStyle(n2), n2 ? R2.emitAndNotify("add") : r2 && R2.emit("add");
  }
  return i2;
}, $o.removed = function() {
  var e9 = this[0];
  return e9 && e9._private.removed;
}, $o.inside = function() {
  var e9 = this[0];
  return e9 && !e9._private.removed;
}, $o.remove = function() {
  var e9 = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n2 = this, r2 = [], i2 = {}, a2 = n2._private.cy;
  function o2(e10) {
    for (var t4 = e10._private.edges, n3 = 0; n3 < t4.length; n3++)
      l2(t4[n3]);
  }
  function s2(e10) {
    for (var t4 = e10._private.children, n3 = 0; n3 < t4.length; n3++)
      l2(t4[n3]);
  }
  function l2(e10) {
    var n3 = i2[e10.id()];
    t3 && e10.removed() || n3 || (i2[e10.id()] = true, e10.isNode() ? (r2.push(e10), o2(e10), s2(e10)) : r2.unshift(e10));
  }
  for (var u2 = 0, c2 = n2.length; u2 < c2; u2++) {
    var d2 = n2[u2];
    l2(d2);
  }
  function h2(e10, t4) {
    var n3 = e10._private.edges;
    We(n3, t4), e10.clearTraversalCache();
  }
  function p2(e10) {
    e10.clearTraversalCache();
  }
  var f2 = [];
  function g2(e10, t4) {
    t4 = t4[0];
    var n3 = (e10 = e10[0])._private.children, r3 = e10.id();
    We(n3, t4), t4._private.parent = null, f2.ids[r3] || (f2.ids[r3] = true, f2.push(e10));
  }
  f2.ids = {}, n2.dirtyCompoundBoundsCache(), t3 && a2.removeFromPool(r2);
  for (var v2 = 0; v2 < r2.length; v2++) {
    var y2 = r2[v2];
    if (y2.isEdge()) {
      var m2 = y2.source()[0], b2 = y2.target()[0];
      h2(m2, y2), h2(b2, y2);
      for (var x2 = y2.parallelEdges(), w2 = 0; w2 < x2.length; w2++) {
        var E2 = x2[w2];
        p2(E2), E2.isBundledBezier() && E2.dirtyBoundingBoxCache();
      }
    } else {
      var k2 = y2.parent();
      0 !== k2.length && g2(k2, y2);
    }
    t3 && (y2._private.removed = true);
  }
  var C2 = a2._private.elements;
  a2._private.hasCompoundNodes = false;
  for (var S2 = 0; S2 < C2.length; S2++) {
    var P2 = C2[S2];
    if (P2.isParent()) {
      a2._private.hasCompoundNodes = true;
      break;
    }
  }
  var D2 = new Zo(this.cy(), r2);
  D2.size() > 0 && (e9 ? D2.emitAndNotify("remove") : t3 && D2.emit("remove"));
  for (var T2 = 0; T2 < f2.length; T2++) {
    var _2 = f2[T2];
    t3 && _2.removed() || _2.updateStyle();
  }
  return D2;
}, $o.move = function(e9) {
  var t3 = this._private.cy, n2 = this, r2 = function(e10) {
    return null == e10 ? e10 : "" + e10;
  };
  if (void 0 !== e9.source || void 0 !== e9.target) {
    var i2 = r2(e9.source), a2 = r2(e9.target), o2 = null != i2 && t3.hasElementWithId(i2), s2 = null != a2 && t3.hasElementWithId(a2);
    (o2 || s2) && (t3.batch(function() {
      n2.remove(false, false), n2.emitAndNotify("moveout");
      for (var e10 = 0; e10 < n2.length; e10++) {
        var t4 = n2[e10], r3 = t4._private.data;
        t4.isEdge() && (o2 && (r3.source = i2), s2 && (r3.target = a2));
      }
      n2.restore(false, false);
    }), n2.emitAndNotify("move"));
  } else if (void 0 !== e9.parent) {
    var l2 = r2(e9.parent);
    if (null === l2 || t3.hasElementWithId(l2)) {
      var u2 = null === l2 ? void 0 : l2;
      t3.batch(function() {
        var e10 = n2.remove(false, false);
        e10.emitAndNotify("moveout");
        for (var t4 = 0; t4 < n2.length; t4++) {
          var r3 = n2[t4], i3 = r3._private.data;
          r3.isNode() && (i3.parent = u2);
        }
        e10.restore(false, false);
      }), n2.emitAndNotify("move");
    }
  }
  return this;
}, [ar, Oi, Ri, wa, Sa, Na, za, oo, Eo, ko, { isNode: function() {
  return "nodes" === this.group();
}, isEdge: function() {
  return "edges" === this.group();
}, isLoop: function() {
  return this.isEdge() && this.source()[0] === this.target()[0];
}, isSimple: function() {
  return this.isEdge() && this.source()[0] !== this.target()[0];
}, group: function() {
  var e9 = this[0];
  if (e9)
    return e9._private.group;
} }, Po, To, No, Fo, Yo].forEach(function(e9) {
  I($o, e9);
});
var Qo = { add: function(e9) {
  var t3, n2 = this;
  if (x(e9)) {
    var r2 = e9;
    if (r2._private.cy === n2)
      t3 = r2.restore();
    else {
      for (var i2 = [], a2 = 0; a2 < r2.length; a2++) {
        var o2 = r2[a2];
        i2.push(o2.json());
      }
      t3 = new Zo(n2, i2);
    }
  } else if (v(e9)) {
    t3 = new Zo(n2, e9);
  } else if (y(e9) && (v(e9.nodes) || v(e9.edges))) {
    for (var s2 = e9, l2 = [], u2 = ["nodes", "edges"], c2 = 0, d2 = u2.length; c2 < d2; c2++) {
      var h2 = u2[c2], p2 = s2[h2];
      if (v(p2))
        for (var f2 = 0, g2 = p2.length; f2 < g2; f2++) {
          var m2 = I({ group: h2 }, p2[f2]);
          l2.push(m2);
        }
    }
    t3 = new Zo(n2, l2);
  } else {
    t3 = new Qe(n2, e9).collection();
  }
  return t3;
}, remove: function(e9) {
  if (x(e9))
    ;
  else if (f(e9)) {
    var t3 = e9;
    e9 = this.$(t3);
  }
  return e9.remove();
} };
var Jo = function() {
  function e9(e10) {
    return -e10.tension * e10.x - e10.friction * e10.v;
  }
  function t3(t4, n3, r2) {
    var i2 = { x: t4.x + r2.dx * n3, v: t4.v + r2.dv * n3, tension: t4.tension, friction: t4.friction };
    return { dx: i2.v, dv: e9(i2) };
  }
  function n2(n3, r2) {
    var i2 = { dx: n3.v, dv: e9(n3) }, a2 = t3(n3, 0.5 * r2, i2), o2 = t3(n3, 0.5 * r2, a2), s2 = t3(n3, r2, o2), l2 = 1 / 6 * (i2.dx + 2 * (a2.dx + o2.dx) + s2.dx), u2 = 1 / 6 * (i2.dv + 2 * (a2.dv + o2.dv) + s2.dv);
    return n3.x = n3.x + l2 * r2, n3.v = n3.v + u2 * r2, n3;
  }
  return function e10(t4, r2, i2) {
    var a2, o2, s2, l2 = { x: -1, v: 0, tension: null, friction: null }, u2 = [0], c2 = 0;
    for (t4 = parseFloat(t4) || 500, r2 = parseFloat(r2) || 20, i2 = i2 || null, l2.tension = t4, l2.friction = r2, o2 = (a2 = null !== i2) ? (c2 = e10(t4, r2)) / i2 * 0.016 : 0.016; s2 = n2(s2 || l2, o2), u2.push(1 + s2.x), c2 += 16, Math.abs(s2.x) > 1e-4 && Math.abs(s2.v) > 1e-4; )
      ;
    return a2 ? function(e11) {
      return u2[e11 * (u2.length - 1) | 0];
    } : c2;
  };
}();
var es = function(e9, t3, n2, r2) {
  var i2 = function(e10, t4, n3, r3) {
    var i3 = 4, a2 = 1e-3, o2 = 1e-7, s2 = 10, l2 = 11, u2 = 1 / (l2 - 1), c2 = "undefined" != typeof Float32Array;
    if (4 !== arguments.length)
      return false;
    for (var d2 = 0; d2 < 4; ++d2)
      if ("number" != typeof arguments[d2] || isNaN(arguments[d2]) || !isFinite(arguments[d2]))
        return false;
    e10 = Math.min(e10, 1), n3 = Math.min(n3, 1), e10 = Math.max(e10, 0), n3 = Math.max(n3, 0);
    var h2 = c2 ? new Float32Array(l2) : new Array(l2);
    function p2(e11, t5) {
      return 1 - 3 * t5 + 3 * e11;
    }
    function f2(e11, t5) {
      return 3 * t5 - 6 * e11;
    }
    function g2(e11) {
      return 3 * e11;
    }
    function v2(e11, t5, n4) {
      return ((p2(t5, n4) * e11 + f2(t5, n4)) * e11 + g2(t5)) * e11;
    }
    function y2(e11, t5, n4) {
      return 3 * p2(t5, n4) * e11 * e11 + 2 * f2(t5, n4) * e11 + g2(t5);
    }
    function m2(t5, r4) {
      for (var a3 = 0; a3 < i3; ++a3) {
        var o3 = y2(r4, e10, n3);
        if (0 === o3)
          return r4;
        r4 -= (v2(r4, e10, n3) - t5) / o3;
      }
      return r4;
    }
    function b2() {
      for (var t5 = 0; t5 < l2; ++t5)
        h2[t5] = v2(t5 * u2, e10, n3);
    }
    function x2(t5, r4, i4) {
      var a3, l3, u3 = 0;
      do {
        (a3 = v2(l3 = r4 + (i4 - r4) / 2, e10, n3) - t5) > 0 ? i4 = l3 : r4 = l3;
      } while (Math.abs(a3) > o2 && ++u3 < s2);
      return l3;
    }
    function w2(t5) {
      for (var r4 = 0, i4 = 1, o3 = l2 - 1; i4 !== o3 && h2[i4] <= t5; ++i4)
        r4 += u2;
      --i4;
      var s3 = r4 + (t5 - h2[i4]) / (h2[i4 + 1] - h2[i4]) * u2, c3 = y2(s3, e10, n3);
      return c3 >= a2 ? m2(t5, s3) : 0 === c3 ? s3 : x2(t5, r4, r4 + u2);
    }
    var E2 = false;
    function k2() {
      E2 = true, e10 === t4 && n3 === r3 || b2();
    }
    var C2 = function(i4) {
      return E2 || k2(), e10 === t4 && n3 === r3 ? i4 : 0 === i4 ? 0 : 1 === i4 ? 1 : v2(w2(i4), t4, r3);
    };
    C2.getControlPoints = function() {
      return [{ x: e10, y: t4 }, { x: n3, y: r3 }];
    };
    var S2 = "generateBezier(" + [e10, t4, n3, r3] + ")";
    return C2.toString = function() {
      return S2;
    }, C2;
  }(e9, t3, n2, r2);
  return function(e10, t4, n3) {
    return e10 + (t4 - e10) * i2(n3);
  };
};
var ts = { linear: function(e9, t3, n2) {
  return e9 + (t3 - e9) * n2;
}, ease: es(0.25, 0.1, 0.25, 1), "ease-in": es(0.42, 0, 1, 1), "ease-out": es(0, 0, 0.58, 1), "ease-in-out": es(0.42, 0, 0.58, 1), "ease-in-sine": es(0.47, 0, 0.745, 0.715), "ease-out-sine": es(0.39, 0.575, 0.565, 1), "ease-in-out-sine": es(0.445, 0.05, 0.55, 0.95), "ease-in-quad": es(0.55, 0.085, 0.68, 0.53), "ease-out-quad": es(0.25, 0.46, 0.45, 0.94), "ease-in-out-quad": es(0.455, 0.03, 0.515, 0.955), "ease-in-cubic": es(0.55, 0.055, 0.675, 0.19), "ease-out-cubic": es(0.215, 0.61, 0.355, 1), "ease-in-out-cubic": es(0.645, 0.045, 0.355, 1), "ease-in-quart": es(0.895, 0.03, 0.685, 0.22), "ease-out-quart": es(0.165, 0.84, 0.44, 1), "ease-in-out-quart": es(0.77, 0, 0.175, 1), "ease-in-quint": es(0.755, 0.05, 0.855, 0.06), "ease-out-quint": es(0.23, 1, 0.32, 1), "ease-in-out-quint": es(0.86, 0, 0.07, 1), "ease-in-expo": es(0.95, 0.05, 0.795, 0.035), "ease-out-expo": es(0.19, 1, 0.22, 1), "ease-in-out-expo": es(1, 0, 0, 1), "ease-in-circ": es(0.6, 0.04, 0.98, 0.335), "ease-out-circ": es(0.075, 0.82, 0.165, 1), "ease-in-out-circ": es(0.785, 0.135, 0.15, 0.86), spring: function(e9, t3, n2) {
  if (0 === n2)
    return ts.linear;
  var r2 = Jo(e9, t3, n2);
  return function(e10, t4, n3) {
    return e10 + (t4 - e10) * r2(n3);
  };
}, "cubic-bezier": es };
function ns(e9, t3, n2, r2, i2) {
  if (1 === r2)
    return n2;
  if (t3 === n2)
    return n2;
  var a2 = i2(t3, n2, r2);
  return null == e9 || ((e9.roundValue || e9.color) && (a2 = Math.round(a2)), void 0 !== e9.min && (a2 = Math.max(a2, e9.min)), void 0 !== e9.max && (a2 = Math.min(a2, e9.max))), a2;
}
function rs(e9, t3) {
  return null != e9.pfValue || null != e9.value ? null == e9.pfValue || null != t3 && "%" === t3.type.units ? e9.value : e9.pfValue : e9;
}
function is(e9, t3, n2, r2, i2) {
  var a2 = null != i2 ? i2.type : null;
  n2 < 0 ? n2 = 0 : n2 > 1 && (n2 = 1);
  var o2 = rs(e9, i2), s2 = rs(t3, i2);
  if (m(o2) && m(s2))
    return ns(a2, o2, s2, n2, r2);
  if (v(o2) && v(s2)) {
    for (var l2 = [], u2 = 0; u2 < s2.length; u2++) {
      var c2 = o2[u2], d2 = s2[u2];
      if (null != c2 && null != d2) {
        var h2 = ns(a2, c2, d2, n2, r2);
        l2.push(h2);
      } else
        l2.push(d2);
    }
    return l2;
  }
}
function as(e9, t3, n2, r2) {
  var i2 = !r2, a2 = e9._private, o2 = t3._private, s2 = o2.easing, l2 = o2.startTime, u2 = (r2 ? e9 : e9.cy()).style();
  if (!o2.easingImpl)
    if (null == s2)
      o2.easingImpl = ts.linear;
    else {
      var c2, d2, h2;
      if (f(s2))
        c2 = u2.parse("transition-timing-function", s2).value;
      else
        c2 = s2;
      f(c2) ? (d2 = c2, h2 = []) : (d2 = c2[1], h2 = c2.slice(2).map(function(e10) {
        return +e10;
      })), h2.length > 0 ? ("spring" === d2 && h2.push(o2.duration), o2.easingImpl = ts[d2].apply(null, h2)) : o2.easingImpl = ts[d2];
    }
  var p2, g2 = o2.easingImpl;
  if (p2 = 0 === o2.duration ? 1 : (n2 - l2) / o2.duration, o2.applying && (p2 = o2.progress), p2 < 0 ? p2 = 0 : p2 > 1 && (p2 = 1), null == o2.delay) {
    var v2 = o2.startPosition, y2 = o2.position;
    if (y2 && i2 && !e9.locked()) {
      var m2 = {};
      os(v2.x, y2.x) && (m2.x = is(v2.x, y2.x, p2, g2)), os(v2.y, y2.y) && (m2.y = is(v2.y, y2.y, p2, g2)), e9.position(m2);
    }
    var b2 = o2.startPan, x2 = o2.pan, w2 = a2.pan, E2 = null != x2 && r2;
    E2 && (os(b2.x, x2.x) && (w2.x = is(b2.x, x2.x, p2, g2)), os(b2.y, x2.y) && (w2.y = is(b2.y, x2.y, p2, g2)), e9.emit("pan"));
    var k2 = o2.startZoom, C2 = o2.zoom, S2 = null != C2 && r2;
    S2 && (os(k2, C2) && (a2.zoom = Pt(a2.minZoom, is(k2, C2, p2, g2), a2.maxZoom)), e9.emit("zoom")), (E2 || S2) && e9.emit("viewport");
    var P2 = o2.style;
    if (P2 && P2.length > 0 && i2) {
      for (var D2 = 0; D2 < P2.length; D2++) {
        var T2 = P2[D2], _2 = T2.name, M2 = T2, B2 = o2.startStyle[_2], N2 = is(B2, M2, p2, g2, u2.properties[B2.name]);
        u2.overrideBypass(e9, _2, N2);
      }
      e9.emit("style");
    }
  }
  return o2.progress = p2, p2;
}
function os(e9, t3) {
  return null != e9 && null != t3 && (!(!m(e9) || !m(t3)) || !(!e9 || !t3));
}
function ss(e9, t3, n2, r2) {
  var i2 = t3._private;
  i2.started = true, i2.startTime = n2 - i2.progress * i2.duration;
}
function ls(e9, t3) {
  var n2 = t3._private.aniEles, r2 = [];
  function i2(t4, n3) {
    var i3 = t4._private, a3 = i3.animation.current, o3 = i3.animation.queue, s3 = false;
    if (0 === a3.length) {
      var l3 = o3.shift();
      l3 && a3.push(l3);
    }
    for (var u2 = function(e10) {
      for (var t5 = e10.length - 1; t5 >= 0; t5--) {
        (0, e10[t5])();
      }
      e10.splice(0, e10.length);
    }, c2 = a3.length - 1; c2 >= 0; c2--) {
      var d2 = a3[c2], h2 = d2._private;
      h2.stopped ? (a3.splice(c2, 1), h2.hooked = false, h2.playing = false, h2.started = false, u2(h2.frames)) : (h2.playing || h2.applying) && (h2.playing && h2.applying && (h2.applying = false), h2.started || ss(0, d2, e9), as(t4, d2, e9, n3), h2.applying && (h2.applying = false), u2(h2.frames), null != h2.step && h2.step(e9), d2.completed() && (a3.splice(c2, 1), h2.hooked = false, h2.playing = false, h2.started = false, u2(h2.completes)), s3 = true);
    }
    return n3 || 0 !== a3.length || 0 !== o3.length || r2.push(t4), s3;
  }
  for (var a2 = false, o2 = 0; o2 < n2.length; o2++) {
    var s2 = i2(n2[o2]);
    a2 = a2 || s2;
  }
  var l2 = i2(t3, true);
  (a2 || l2) && (n2.length > 0 ? t3.notify("draw", n2) : t3.notify("draw")), n2.unmerge(r2), t3.emit("step");
}
var us = { animate: Li.animate(), animation: Li.animation(), animated: Li.animated(), clearQueue: Li.clearQueue(), delay: Li.delay(), delayAnimation: Li.delayAnimation(), stop: Li.stop(), addToAnimationPool: function(e9) {
  this.styleEnabled() && this._private.aniEles.merge(e9);
}, stopAnimationLoop: function() {
  this._private.animationsRunning = false;
}, startAnimationLoop: function() {
  var e9 = this;
  if (e9._private.animationsRunning = true, e9.styleEnabled()) {
    var t3 = e9.renderer();
    t3 && t3.beforeRender ? t3.beforeRender(function(t4, n2) {
      ls(n2, e9);
    }, t3.beforeRenderPriorities.animations) : function t4() {
      e9._private.animationsRunning && me(function(n2) {
        ls(n2, e9), t4();
      });
    }();
  }
} };
var cs = { qualifierCompare: function(e9, t3) {
  return null == e9 || null == t3 ? null == e9 && null == t3 : e9.sameText(t3);
}, eventMatches: function(e9, t3, n2) {
  var r2 = t3.qualifier;
  return null == r2 || e9 !== n2.target && w(n2.target) && r2.matches(n2.target);
}, addEventFields: function(e9, t3) {
  t3.cy = e9, t3.target = e9;
}, callbackContext: function(e9, t3, n2) {
  return null != t3.qualifier ? n2.target : e9;
} };
var ds = function(e9) {
  return f(e9) ? new ba(e9) : e9;
};
var hs = { createEmitter: function() {
  var e9 = this._private;
  return e9.emitter || (e9.emitter = new go(cs, this)), this;
}, emitter: function() {
  return this._private.emitter;
}, on: function(e9, t3, n2) {
  return this.emitter().on(e9, ds(t3), n2), this;
}, removeListener: function(e9, t3, n2) {
  return this.emitter().removeListener(e9, ds(t3), n2), this;
}, removeAllListeners: function() {
  return this.emitter().removeAllListeners(), this;
}, one: function(e9, t3, n2) {
  return this.emitter().one(e9, ds(t3), n2), this;
}, once: function(e9, t3, n2) {
  return this.emitter().one(e9, ds(t3), n2), this;
}, emit: function(e9, t3) {
  return this.emitter().emit(e9, t3), this;
}, emitAndNotify: function(e9, t3) {
  return this.emit(e9), this.notify(e9, t3), this;
} };
Li.eventAliasesOn(hs);
var ps = { png: function(e9) {
  return e9 = e9 || {}, this._private.renderer.png(e9);
}, jpg: function(e9) {
  var t3 = this._private.renderer;
  return (e9 = e9 || {}).bg = e9.bg || "#fff", t3.jpg(e9);
} };
ps.jpeg = ps.jpg;
var fs = { layout: function(e9) {
  if (null != e9)
    if (null != e9.name) {
      var t3 = e9.name, n2 = this.extension("layout", t3);
      if (null != n2) {
        var r2;
        r2 = f(e9.eles) ? this.$(e9.eles) : null != e9.eles ? e9.eles : this.$();
        var i2 = new n2(I({}, e9, { cy: this, eles: r2 }));
        return i2;
      }
      Oe("No such layout `" + t3 + "` found.  Did you forget to import it and `cytoscape.use()` it?");
    } else
      Oe("A `name` must be specified to make a layout");
  else
    Oe("Layout options must be specified to make a layout");
} };
fs.createLayout = fs.makeLayout = fs.layout;
var gs = { notify: function(e9, t3) {
  var n2 = this._private;
  if (this.batching()) {
    n2.batchNotifications = n2.batchNotifications || {};
    var r2 = n2.batchNotifications[e9] = n2.batchNotifications[e9] || this.collection();
    null != t3 && r2.merge(t3);
  } else if (n2.notificationsEnabled) {
    var i2 = this.renderer();
    !this.destroyed() && i2 && i2.notify(e9, t3);
  }
}, notifications: function(e9) {
  var t3 = this._private;
  return void 0 === e9 ? t3.notificationsEnabled : (t3.notificationsEnabled = !!e9, this);
}, noNotifications: function(e9) {
  this.notifications(false), e9(), this.notifications(true);
}, batching: function() {
  return this._private.batchCount > 0;
}, startBatch: function() {
  var e9 = this._private;
  return null == e9.batchCount && (e9.batchCount = 0), 0 === e9.batchCount && (e9.batchStyleEles = this.collection(), e9.batchNotifications = {}), e9.batchCount++, this;
}, endBatch: function() {
  var e9 = this._private;
  if (0 === e9.batchCount)
    return this;
  if (e9.batchCount--, 0 === e9.batchCount) {
    e9.batchStyleEles.updateStyle();
    var t3 = this.renderer();
    Object.keys(e9.batchNotifications).forEach(function(n2) {
      var r2 = e9.batchNotifications[n2];
      r2.empty() ? t3.notify(n2) : t3.notify(n2, r2);
    });
  }
  return this;
}, batch: function(e9) {
  return this.startBatch(), e9(), this.endBatch(), this;
}, batchData: function(e9) {
  var t3 = this;
  return this.batch(function() {
    for (var n2 = Object.keys(e9), r2 = 0; r2 < n2.length; r2++) {
      var i2 = n2[r2], a2 = e9[i2];
      t3.getElementById(i2).data(a2);
    }
  });
} };
var vs = Xe({ hideEdgesOnViewport: false, textureOnViewport: false, motionBlur: false, motionBlurOpacity: 0.05, pixelRatio: void 0, desktopTapThreshold: 4, touchTapThreshold: 8, wheelSensitivity: 1, debug: false, showFps: false });
var ys = { renderTo: function(e9, t3, n2, r2) {
  return this._private.renderer.renderTo(e9, t3, n2, r2), this;
}, renderer: function() {
  return this._private.renderer;
}, forceRender: function() {
  return this.notify("draw"), this;
}, resize: function() {
  return this.invalidateSize(), this.emitAndNotify("resize"), this;
}, initRenderer: function(e9) {
  var t3 = this.extension("renderer", e9.name);
  if (null != t3) {
    void 0 !== e9.wheelSensitivity && Ve("You have set a custom wheel sensitivity.  This will make your app zoom unnaturally when using mainstream mice.  You should change this value from the default only if you can guarantee that all your users will use the same hardware and OS configuration as your current machine.");
    var n2 = vs(e9);
    n2.cy = this, this._private.renderer = new t3(n2), this.notify("init");
  } else
    Oe("Can not initialise: No such renderer `".concat(e9.name, "` found. Did you forget to import it and `cytoscape.use()` it?"));
}, destroyRenderer: function() {
  this.notify("destroy");
  var e9 = this.container();
  if (e9)
    for (e9._cyreg = null; e9.childNodes.length > 0; )
      e9.removeChild(e9.childNodes[0]);
  this._private.renderer = null, this.mutableElements().forEach(function(e10) {
    var t3 = e10._private;
    t3.rscratch = {}, t3.rstyle = {}, t3.animation.current = [], t3.animation.queue = [];
  });
}, onRender: function(e9) {
  return this.on("render", e9);
}, offRender: function(e9) {
  return this.off("render", e9);
} };
ys.invalidateDimensions = ys.resize;
var ms = { collection: function(e9, t3) {
  return f(e9) ? this.$(e9) : x(e9) ? e9.collection() : v(e9) ? (t3 || (t3 = {}), new Zo(this, e9, t3.unique, t3.removed)) : new Zo(this);
}, nodes: function(e9) {
  var t3 = this.$(function(e10) {
    return e10.isNode();
  });
  return e9 ? t3.filter(e9) : t3;
}, edges: function(e9) {
  var t3 = this.$(function(e10) {
    return e10.isEdge();
  });
  return e9 ? t3.filter(e9) : t3;
}, $: function(e9) {
  var t3 = this._private.elements;
  return e9 ? t3.filter(e9) : t3.spawnSelf();
}, mutableElements: function() {
  return this._private.elements;
} };
ms.elements = ms.filter = ms.$;
var bs = {};
bs.apply = function(e9) {
  for (var t3 = this._private.cy.collection(), n2 = 0; n2 < e9.length; n2++) {
    var r2 = e9[n2], i2 = this.getContextMeta(r2);
    if (!i2.empty) {
      var a2 = this.getContextStyle(i2), o2 = this.applyContextStyle(i2, a2, r2);
      r2._private.appliedInitStyle ? this.updateTransitions(r2, o2.diffProps) : r2._private.appliedInitStyle = true, this.updateStyleHints(r2) && t3.push(r2);
    }
  }
  return t3;
}, bs.getPropertiesDiff = function(e9, t3) {
  var n2 = this._private.propDiffs = this._private.propDiffs || {}, r2 = e9 + "-" + t3, i2 = n2[r2];
  if (i2)
    return i2;
  for (var a2 = [], o2 = {}, s2 = 0; s2 < this.length; s2++) {
    var l2 = this[s2], u2 = "t" === e9[s2], c2 = "t" === t3[s2], d2 = u2 !== c2, h2 = l2.mappedProperties.length > 0;
    if (d2 || c2 && h2) {
      var p2 = void 0;
      d2 && h2 || d2 ? p2 = l2.properties : h2 && (p2 = l2.mappedProperties);
      for (var f2 = 0; f2 < p2.length; f2++) {
        for (var g2 = p2[f2], v2 = g2.name, y2 = false, m2 = s2 + 1; m2 < this.length; m2++) {
          var b2 = this[m2];
          if ("t" === t3[m2] && (y2 = null != b2.properties[g2.name]))
            break;
        }
        o2[v2] || y2 || (o2[v2] = true, a2.push(v2));
      }
    }
  }
  return n2[r2] = a2, a2;
}, bs.getContextMeta = function(e9) {
  for (var t3, n2 = "", r2 = e9._private.styleCxtKey || "", i2 = 0; i2 < this.length; i2++) {
    var a2 = this[i2];
    n2 += a2.selector && a2.selector.matches(e9) ? "t" : "f";
  }
  return t3 = this.getPropertiesDiff(r2, n2), e9._private.styleCxtKey = n2, { key: n2, diffPropNames: t3, empty: 0 === t3.length };
}, bs.getContextStyle = function(e9) {
  var t3 = e9.key, n2 = this._private.contextStyles = this._private.contextStyles || {};
  if (n2[t3])
    return n2[t3];
  for (var r2 = { _private: { key: t3 } }, i2 = 0; i2 < this.length; i2++) {
    var a2 = this[i2];
    if ("t" === t3[i2])
      for (var o2 = 0; o2 < a2.properties.length; o2++) {
        var s2 = a2.properties[o2];
        r2[s2.name] = s2;
      }
  }
  return n2[t3] = r2, r2;
}, bs.applyContextStyle = function(e9, t3, n2) {
  for (var r2 = e9.diffPropNames, i2 = {}, a2 = this.types, o2 = 0; o2 < r2.length; o2++) {
    var s2 = r2[o2], l2 = t3[s2], u2 = n2.pstyle(s2);
    if (!l2) {
      if (!u2)
        continue;
      l2 = u2.bypass ? { name: s2, deleteBypassed: true } : { name: s2, delete: true };
    }
    if (u2 !== l2) {
      if (l2.mapped === a2.fn && null != u2 && null != u2.mapping && u2.mapping.value === l2.value) {
        var c2 = u2.mapping;
        if ((c2.fnValue = l2.value(n2)) === c2.prevFnValue)
          continue;
      }
      var d2 = i2[s2] = { prev: u2 };
      this.applyParsedProperty(n2, l2), d2.next = n2.pstyle(s2), d2.next && d2.next.bypass && (d2.next = d2.next.bypassed);
    }
  }
  return { diffProps: i2 };
}, bs.updateStyleHints = function(e9) {
  var t3 = e9._private, n2 = this, r2 = n2.propertyGroupNames, i2 = n2.propertyGroupKeys, a2 = function(e10, t4, r3) {
    return n2.getPropertiesHash(e10, t4, r3);
  }, o2 = t3.styleKey;
  if (e9.removed())
    return false;
  var s2 = "nodes" === t3.group, l2 = e9._private.style;
  r2 = Object.keys(l2);
  for (var u2 = 0; u2 < i2.length; u2++) {
    var c2 = i2[u2];
    t3.styleKeys[c2] = [9261, 5381];
  }
  for (var d2, h2 = function(e10, n3) {
    return t3.styleKeys[n3][0] = Ee(e10, t3.styleKeys[n3][0]);
  }, p2 = function(e10, n3) {
    return t3.styleKeys[n3][1] = ke(e10, t3.styleKeys[n3][1]);
  }, f2 = function(e10, t4) {
    h2(e10, t4), p2(e10, t4);
  }, g2 = function(e10, t4) {
    for (var n3 = 0; n3 < e10.length; n3++) {
      var r3 = e10.charCodeAt(n3);
      h2(r3, t4), p2(r3, t4);
    }
  }, v2 = 0; v2 < r2.length; v2++) {
    var y2 = r2[v2], m2 = l2[y2];
    if (null != m2) {
      var b2 = this.properties[y2], x2 = b2.type, w2 = b2.groupKey, E2 = void 0;
      null != b2.hashOverride ? E2 = b2.hashOverride(e9, m2) : null != m2.pfValue && (E2 = m2.pfValue);
      var k2 = null == b2.enums ? m2.value : null, C2 = null != E2, S2 = C2 || null != k2, P2 = m2.units;
      if (x2.number && S2 && !x2.multiple)
        f2(-128 < (d2 = C2 ? E2 : k2) && d2 < 128 && Math.floor(d2) !== d2 ? 2e9 - (1024 * d2 | 0) : d2, w2), C2 || null == P2 || g2(P2, w2);
      else
        g2(m2.strValue, w2);
    }
  }
  for (var D2, T2, _2 = [9261, 5381], M2 = 0; M2 < i2.length; M2++) {
    var B2 = i2[M2], N2 = t3.styleKeys[B2];
    _2[0] = Ee(N2[0], _2[0]), _2[1] = ke(N2[1], _2[1]);
  }
  t3.styleKey = (D2 = _2[0], T2 = _2[1], 2097152 * D2 + T2);
  var z2 = t3.styleKeys;
  t3.labelDimsKey = Ce(z2.labelDimensions);
  var I2 = a2(e9, ["label"], z2.labelDimensions);
  if (t3.labelKey = Ce(I2), t3.labelStyleKey = Ce(Se(z2.commonLabel, I2)), !s2) {
    var A2 = a2(e9, ["source-label"], z2.labelDimensions);
    t3.sourceLabelKey = Ce(A2), t3.sourceLabelStyleKey = Ce(Se(z2.commonLabel, A2));
    var L2 = a2(e9, ["target-label"], z2.labelDimensions);
    t3.targetLabelKey = Ce(L2), t3.targetLabelStyleKey = Ce(Se(z2.commonLabel, L2));
  }
  if (s2) {
    var O2 = t3.styleKeys, R2 = O2.nodeBody, V2 = O2.nodeBorder, F2 = O2.backgroundImage, j2 = O2.compound, q2 = O2.pie, Y2 = [R2, V2, F2, j2, q2].filter(function(e10) {
      return null != e10;
    }).reduce(Se, [9261, 5381]);
    t3.nodeKey = Ce(Y2), t3.hasPie = null != q2 && 9261 !== q2[0] && 5381 !== q2[1];
  }
  return o2 !== t3.styleKey;
}, bs.clearStyleHints = function(e9) {
  var t3 = e9._private;
  t3.styleCxtKey = "", t3.styleKeys = {}, t3.styleKey = null, t3.labelKey = null, t3.labelStyleKey = null, t3.sourceLabelKey = null, t3.sourceLabelStyleKey = null, t3.targetLabelKey = null, t3.targetLabelStyleKey = null, t3.nodeKey = null, t3.hasPie = null;
}, bs.applyParsedProperty = function(e9, t3) {
  var n2, r2 = this, i2 = t3, a2 = e9._private.style, o2 = r2.types, s2 = r2.properties[i2.name].type, l2 = i2.bypass, u2 = a2[i2.name], c2 = u2 && u2.bypass, d2 = e9._private, h2 = function(e10) {
    return null == e10 ? null : null != e10.pfValue ? e10.pfValue : e10.value;
  }, p2 = function() {
    var t4 = h2(u2), n3 = h2(i2);
    r2.checkTriggers(e9, i2.name, t4, n3);
  };
  if (i2 && "pie" === i2.name.substr(0, 3) && Ve("The pie style properties are deprecated.  Create charts using background images instead."), "curve-style" === t3.name && e9.isEdge() && ("bezier" !== t3.value && e9.isLoop() || "haystack" === t3.value && (e9.source().isParent() || e9.target().isParent())) && (i2 = t3 = this.parse(t3.name, "bezier", l2)), i2.delete)
    return a2[i2.name] = void 0, p2(), true;
  if (i2.deleteBypassed)
    return u2 ? !!u2.bypass && (u2.bypassed = void 0, p2(), true) : (p2(), true);
  if (i2.deleteBypass)
    return u2 ? !!u2.bypass && (a2[i2.name] = u2.bypassed, p2(), true) : (p2(), true);
  var f2 = function() {
    Ve("Do not assign mappings to elements without corresponding data (i.e. ele `" + e9.id() + "` has no mapping for property `" + i2.name + "` with data field `" + i2.field + "`); try a `[" + i2.field + "]` selector to limit scope to elements with `" + i2.field + "` defined");
  };
  switch (i2.mapped) {
    case o2.mapData:
      for (var g2, v2 = i2.field.split("."), y2 = d2.data, b2 = 0; b2 < v2.length && y2; b2++) {
        y2 = y2[v2[b2]];
      }
      if (null == y2)
        return f2(), false;
      if (!m(y2))
        return Ve("Do not use continuous mappers without specifying numeric data (i.e. `" + i2.field + ": " + y2 + "` for `" + e9.id() + "` is non-numeric)"), false;
      var x2 = i2.fieldMax - i2.fieldMin;
      if ((g2 = 0 === x2 ? 0 : (y2 - i2.fieldMin) / x2) < 0 ? g2 = 0 : g2 > 1 && (g2 = 1), s2.color) {
        var w2 = i2.valueMin[0], E2 = i2.valueMax[0], k2 = i2.valueMin[1], C2 = i2.valueMax[1], S2 = i2.valueMin[2], P2 = i2.valueMax[2], D2 = null == i2.valueMin[3] ? 1 : i2.valueMin[3], T2 = null == i2.valueMax[3] ? 1 : i2.valueMax[3], _2 = [Math.round(w2 + (E2 - w2) * g2), Math.round(k2 + (C2 - k2) * g2), Math.round(S2 + (P2 - S2) * g2), Math.round(D2 + (T2 - D2) * g2)];
        n2 = { bypass: i2.bypass, name: i2.name, value: _2, strValue: "rgb(" + _2[0] + ", " + _2[1] + ", " + _2[2] + ")" };
      } else {
        if (!s2.number)
          return false;
        var M2 = i2.valueMin + (i2.valueMax - i2.valueMin) * g2;
        n2 = this.parse(i2.name, M2, i2.bypass, "mapping");
      }
      if (!n2)
        return f2(), false;
      n2.mapping = i2, i2 = n2;
      break;
    case o2.data:
      for (var B2 = i2.field.split("."), N2 = d2.data, z2 = 0; z2 < B2.length && N2; z2++) {
        N2 = N2[B2[z2]];
      }
      if (null != N2 && (n2 = this.parse(i2.name, N2, i2.bypass, "mapping")), !n2)
        return f2(), false;
      n2.mapping = i2, i2 = n2;
      break;
    case o2.fn:
      var I2 = i2.value, A2 = null != i2.fnValue ? i2.fnValue : I2(e9);
      if (i2.prevFnValue = A2, null == A2)
        return Ve("Custom function mappers may not return null (i.e. `" + i2.name + "` for ele `" + e9.id() + "` is null)"), false;
      if (!(n2 = this.parse(i2.name, A2, i2.bypass, "mapping")))
        return Ve("Custom function mappers may not return invalid values for the property type (i.e. `" + i2.name + "` for ele `" + e9.id() + "` is invalid)"), false;
      n2.mapping = Fe(i2), i2 = n2;
      break;
    case void 0:
      break;
    default:
      return false;
  }
  return l2 ? (i2.bypassed = c2 ? u2.bypassed : u2, a2[i2.name] = i2) : c2 ? u2.bypassed = i2 : a2[i2.name] = i2, p2(), true;
}, bs.cleanElements = function(e9, t3) {
  for (var n2 = 0; n2 < e9.length; n2++) {
    var r2 = e9[n2];
    if (this.clearStyleHints(r2), r2.dirtyCompoundBoundsCache(), r2.dirtyBoundingBoxCache(), t3)
      for (var i2 = r2._private.style, a2 = Object.keys(i2), o2 = 0; o2 < a2.length; o2++) {
        var s2 = a2[o2], l2 = i2[s2];
        null != l2 && (l2.bypass ? l2.bypassed = null : i2[s2] = null);
      }
    else
      r2._private.style = {};
  }
}, bs.update = function() {
  this._private.cy.mutableElements().updateStyle();
}, bs.updateTransitions = function(e9, t3) {
  var n2 = this, r2 = e9._private, i2 = e9.pstyle("transition-property").value, a2 = e9.pstyle("transition-duration").pfValue, o2 = e9.pstyle("transition-delay").pfValue;
  if (i2.length > 0 && a2 > 0) {
    for (var s2 = {}, l2 = false, u2 = 0; u2 < i2.length; u2++) {
      var c2 = i2[u2], d2 = e9.pstyle(c2), h2 = t3[c2];
      if (h2) {
        var p2 = h2.prev, f2 = null != h2.next ? h2.next : d2, g2 = false, y2 = void 0;
        p2 && (m(p2.pfValue) && m(f2.pfValue) ? (g2 = f2.pfValue - p2.pfValue, y2 = p2.pfValue + 1e-6 * g2) : m(p2.value) && m(f2.value) ? (g2 = f2.value - p2.value, y2 = p2.value + 1e-6 * g2) : v(p2.value) && v(f2.value) && (g2 = p2.value[0] !== f2.value[0] || p2.value[1] !== f2.value[1] || p2.value[2] !== f2.value[2], y2 = p2.strValue), g2 && (s2[c2] = f2.strValue, this.applyBypass(e9, c2, y2), l2 = true));
      }
    }
    if (!l2)
      return;
    r2.transitioning = true, new hr(function(t4) {
      o2 > 0 ? e9.delayAnimation(o2).play().promise().then(t4) : t4();
    }).then(function() {
      return e9.animation({ style: s2, duration: a2, easing: e9.pstyle("transition-timing-function").value, queue: false }).play().promise();
    }).then(function() {
      n2.removeBypasses(e9, i2), e9.emitAndNotify("style"), r2.transitioning = false;
    });
  } else
    r2.transitioning && (this.removeBypasses(e9, i2), e9.emitAndNotify("style"), r2.transitioning = false);
}, bs.checkTrigger = function(e9, t3, n2, r2, i2, a2) {
  var o2 = this.properties[t3], s2 = i2(o2);
  null != s2 && s2(n2, r2) && a2(o2);
}, bs.checkZOrderTrigger = function(e9, t3, n2, r2) {
  var i2 = this;
  this.checkTrigger(e9, t3, n2, r2, function(e10) {
    return e10.triggersZOrder;
  }, function() {
    i2._private.cy.notify("zorder", e9);
  });
}, bs.checkBoundsTrigger = function(e9, t3, n2, r2) {
  this.checkTrigger(e9, t3, n2, r2, function(e10) {
    return e10.triggersBounds;
  }, function(i2) {
    e9.dirtyCompoundBoundsCache(), e9.dirtyBoundingBoxCache(), !i2.triggersBoundsOfParallelBeziers || ("curve-style" !== t3 || "bezier" !== n2 && "bezier" !== r2) && ("display" !== t3 || "none" !== n2 && "none" !== r2) || e9.parallelEdges().forEach(function(e10) {
      e10.isBundledBezier() && e10.dirtyBoundingBoxCache();
    });
  });
}, bs.checkTriggers = function(e9, t3, n2, r2) {
  e9.dirtyStyleCache(), this.checkZOrderTrigger(e9, t3, n2, r2), this.checkBoundsTrigger(e9, t3, n2, r2);
};
var xs = { applyBypass: function(e9, t3, n2, r2) {
  var i2 = [];
  if ("*" === t3 || "**" === t3) {
    if (void 0 !== n2)
      for (var a2 = 0; a2 < this.properties.length; a2++) {
        var o2 = this.properties[a2].name, s2 = this.parse(o2, n2, true);
        s2 && i2.push(s2);
      }
  } else if (f(t3)) {
    var l2 = this.parse(t3, n2, true);
    l2 && i2.push(l2);
  } else {
    if (!y(t3))
      return false;
    var u2 = t3;
    r2 = n2;
    for (var c2 = Object.keys(u2), d2 = 0; d2 < c2.length; d2++) {
      var h2 = c2[d2], p2 = u2[h2];
      if (void 0 === p2 && (p2 = u2[_(h2)]), void 0 !== p2) {
        var g2 = this.parse(h2, p2, true);
        g2 && i2.push(g2);
      }
    }
  }
  if (0 === i2.length)
    return false;
  for (var v2 = false, m2 = 0; m2 < e9.length; m2++) {
    for (var b2 = e9[m2], x2 = {}, w2 = void 0, E2 = 0; E2 < i2.length; E2++) {
      var k2 = i2[E2];
      if (r2) {
        var C2 = b2.pstyle(k2.name);
        w2 = x2[k2.name] = { prev: C2 };
      }
      v2 = this.applyParsedProperty(b2, Fe(k2)) || v2, r2 && (w2.next = b2.pstyle(k2.name));
    }
    v2 && this.updateStyleHints(b2), r2 && this.updateTransitions(b2, x2, true);
  }
  return v2;
}, overrideBypass: function(e9, t3, n2) {
  t3 = T(t3);
  for (var r2 = 0; r2 < e9.length; r2++) {
    var i2 = e9[r2], a2 = i2._private.style[t3], o2 = this.properties[t3].type, s2 = o2.color, l2 = o2.mutiple, u2 = a2 ? null != a2.pfValue ? a2.pfValue : a2.value : null;
    a2 && a2.bypass ? (a2.value = n2, null != a2.pfValue && (a2.pfValue = n2), a2.strValue = s2 ? "rgb(" + n2.join(",") + ")" : l2 ? n2.join(" ") : "" + n2, this.updateStyleHints(i2)) : this.applyBypass(i2, t3, n2), this.checkTriggers(i2, t3, u2, n2);
  }
}, removeAllBypasses: function(e9, t3) {
  return this.removeBypasses(e9, this.propertyNames, t3);
}, removeBypasses: function(e9, t3, n2) {
  for (var r2 = 0; r2 < e9.length; r2++) {
    for (var i2 = e9[r2], a2 = {}, o2 = 0; o2 < t3.length; o2++) {
      var s2 = t3[o2], l2 = this.properties[s2], u2 = i2.pstyle(l2.name);
      if (u2 && u2.bypass) {
        var c2 = this.parse(s2, "", true), d2 = a2[l2.name] = { prev: u2 };
        this.applyParsedProperty(i2, c2), d2.next = i2.pstyle(l2.name);
      }
    }
    this.updateStyleHints(i2), n2 && this.updateTransitions(i2, a2, true);
  }
} };
var ws = { getEmSizeInPixels: function() {
  var e9 = this.containerCss("font-size");
  return null != e9 ? parseFloat(e9) : 1;
}, containerCss: function(e9) {
  var t3 = this._private.cy.container();
  if (s && t3 && s.getComputedStyle)
    return s.getComputedStyle(t3).getPropertyValue(e9);
} };
var Es = { getRenderedStyle: function(e9, t3) {
  return t3 ? this.getStylePropertyValue(e9, t3, true) : this.getRawStyle(e9, true);
}, getRawStyle: function(e9, t3) {
  if (e9 = e9[0]) {
    for (var n2 = {}, r2 = 0; r2 < this.properties.length; r2++) {
      var i2 = this.properties[r2], a2 = this.getStylePropertyValue(e9, i2.name, t3);
      null != a2 && (n2[i2.name] = a2, n2[_(i2.name)] = a2);
    }
    return n2;
  }
}, getIndexedStyle: function(e9, t3, n2, r2) {
  var i2 = e9.pstyle(t3)[n2][r2];
  return null != i2 ? i2 : e9.cy().style().getDefaultProperty(t3)[n2][0];
}, getStylePropertyValue: function(e9, t3, n2) {
  if (e9 = e9[0]) {
    var r2 = this.properties[t3];
    r2.alias && (r2 = r2.pointsTo);
    var i2 = r2.type, a2 = e9.pstyle(r2.name);
    if (a2) {
      var o2 = a2.value, s2 = a2.units, l2 = a2.strValue;
      if (n2 && i2.number && null != o2 && m(o2)) {
        var u2 = e9.cy().zoom(), c2 = function(e10) {
          return e10 * u2;
        }, d2 = function(e10, t4) {
          return c2(e10) + t4;
        }, h2 = v(o2);
        return (h2 ? s2.every(function(e10) {
          return null != e10;
        }) : null != s2) ? h2 ? o2.map(function(e10, t4) {
          return d2(e10, s2[t4]);
        }).join(" ") : d2(o2, s2) : h2 ? o2.map(function(e10) {
          return f(e10) ? e10 : "" + c2(e10);
        }).join(" ") : "" + c2(o2);
      }
      if (null != l2)
        return l2;
    }
    return null;
  }
}, getAnimationStartStyle: function(e9, t3) {
  for (var n2 = {}, r2 = 0; r2 < t3.length; r2++) {
    var i2 = t3[r2].name, a2 = e9.pstyle(i2);
    void 0 !== a2 && (a2 = y(a2) ? this.parse(i2, a2.strValue) : this.parse(i2, a2)), a2 && (n2[i2] = a2);
  }
  return n2;
}, getPropsList: function(e9) {
  var t3 = [], n2 = e9, r2 = this.properties;
  if (n2)
    for (var i2 = Object.keys(n2), a2 = 0; a2 < i2.length; a2++) {
      var o2 = i2[a2], s2 = n2[o2], l2 = r2[o2] || r2[T(o2)], u2 = this.parse(l2.name, s2);
      u2 && t3.push(u2);
    }
  return t3;
}, getNonDefaultPropertiesHash: function(e9, t3, n2) {
  var r2, i2, a2, o2, s2, l2, u2 = n2.slice();
  for (s2 = 0; s2 < t3.length; s2++)
    if (r2 = t3[s2], null != (i2 = e9.pstyle(r2, false)))
      if (null != i2.pfValue)
        u2[0] = Ee(o2, u2[0]), u2[1] = ke(o2, u2[1]);
      else
        for (a2 = i2.strValue, l2 = 0; l2 < a2.length; l2++)
          o2 = a2.charCodeAt(l2), u2[0] = Ee(o2, u2[0]), u2[1] = ke(o2, u2[1]);
  return u2;
} };
Es.getPropertiesHash = Es.getNonDefaultPropertiesHash;
var ks = { appendFromJson: function(e9) {
  for (var t3 = 0; t3 < e9.length; t3++) {
    var n2 = e9[t3], r2 = n2.selector, i2 = n2.style || n2.css, a2 = Object.keys(i2);
    this.selector(r2);
    for (var o2 = 0; o2 < a2.length; o2++) {
      var s2 = a2[o2], l2 = i2[s2];
      this.css(s2, l2);
    }
  }
  return this;
}, fromJson: function(e9) {
  return this.resetToDefault(), this.appendFromJson(e9), this;
}, json: function() {
  for (var e9 = [], t3 = this.defaultLength; t3 < this.length; t3++) {
    for (var n2 = this[t3], r2 = n2.selector, i2 = n2.properties, a2 = {}, o2 = 0; o2 < i2.length; o2++) {
      var s2 = i2[o2];
      a2[s2.name] = s2.strValue;
    }
    e9.push({ selector: r2 ? r2.toString() : "core", style: a2 });
  }
  return e9;
} };
var Cs = { appendFromString: function(e9) {
  var t3, n2, r2, i2 = "" + e9;
  function a2() {
    i2 = i2.length > t3.length ? i2.substr(t3.length) : "";
  }
  function o2() {
    n2 = n2.length > r2.length ? n2.substr(r2.length) : "";
  }
  for (i2 = i2.replace(/[/][*](\s|.)+?[*][/]/g, ""); ; ) {
    if (i2.match(/^\s*$/))
      break;
    var s2 = i2.match(/^\s*((?:.|\s)+?)\s*\{((?:.|\s)+?)\}/);
    if (!s2) {
      Ve("Halting stylesheet parsing: String stylesheet contains more to parse but no selector and block found in: " + i2);
      break;
    }
    t3 = s2[0];
    var l2 = s2[1];
    if ("core" !== l2) {
      if (new ba(l2).invalid) {
        Ve("Skipping parsing of block: Invalid selector found in string stylesheet: " + l2), a2();
        continue;
      }
    }
    var u2 = s2[2], c2 = false;
    n2 = u2;
    for (var d2 = []; ; ) {
      if (n2.match(/^\s*$/))
        break;
      var h2 = n2.match(/^\s*(.+?)\s*:\s*(.+?)(?:\s*;|\s*$)/);
      if (!h2) {
        Ve("Skipping parsing of block: Invalid formatting of style property and value definitions found in:" + u2), c2 = true;
        break;
      }
      r2 = h2[0];
      var p2 = h2[1], f2 = h2[2];
      if (this.properties[p2])
        this.parse(p2, f2) ? (d2.push({ name: p2, val: f2 }), o2()) : (Ve("Skipping property: Invalid property definition in: " + r2), o2());
      else
        Ve("Skipping property: Invalid property name in: " + r2), o2();
    }
    if (c2) {
      a2();
      break;
    }
    this.selector(l2);
    for (var g2 = 0; g2 < d2.length; g2++) {
      var v2 = d2[g2];
      this.css(v2.name, v2.val);
    }
    a2();
  }
  return this;
}, fromString: function(e9) {
  return this.resetToDefault(), this.appendFromString(e9), this;
} };
var Ss = {};
!function() {
  var e9 = N, t3 = function(e10) {
    return "^" + e10 + "\\s*\\(\\s*([\\w\\.]+)\\s*\\)$";
  }, n2 = function(t4) {
    var n3 = e9 + "|\\w+|rgb[a]?\\((?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%]?)(?:\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))))?\\)|hsl[a]?\\((?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?)))\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%])\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))[%])(?:\\s*,\\s*(?:(?:[-+]?(?:(?:\\d+|\\d*\\.\\d+)(?:[Ee][+-]?\\d+)?))))?\\)|\\#[0-9a-fA-F]{3}|\\#[0-9a-fA-F]{6}";
    return "^" + t4 + "\\s*\\(([\\w\\.]+)\\s*\\,\\s*(" + e9 + ")\\s*\\,\\s*(" + e9 + ")\\s*,\\s*(" + n3 + ")\\s*\\,\\s*(" + n3 + ")\\)$";
  }, r2 = [`^url\\s*\\(\\s*['"]?(.+?)['"]?\\s*\\)$`, "^(none)$", "^(.+)$"];
  Ss.types = { time: { number: true, min: 0, units: "s|ms", implicitUnits: "ms" }, percent: { number: true, min: 0, max: 100, units: "%", implicitUnits: "%" }, percentages: { number: true, min: 0, max: 100, units: "%", implicitUnits: "%", multiple: true }, zeroOneNumber: { number: true, min: 0, max: 1, unitless: true }, zeroOneNumbers: { number: true, min: 0, max: 1, unitless: true, multiple: true }, nOneOneNumber: { number: true, min: -1, max: 1, unitless: true }, nonNegativeInt: { number: true, min: 0, integer: true, unitless: true }, position: { enums: ["parent", "origin"] }, nodeSize: { number: true, min: 0, enums: ["label"] }, number: { number: true, unitless: true }, numbers: { number: true, unitless: true, multiple: true }, positiveNumber: { number: true, unitless: true, min: 0, strictMin: true }, size: { number: true, min: 0 }, bidirectionalSize: { number: true }, bidirectionalSizeMaybePercent: { number: true, allowPercent: true }, bidirectionalSizes: { number: true, multiple: true }, sizeMaybePercent: { number: true, min: 0, allowPercent: true }, axisDirection: { enums: ["horizontal", "leftward", "rightward", "vertical", "upward", "downward", "auto"] }, paddingRelativeTo: { enums: ["width", "height", "average", "min", "max"] }, bgWH: { number: true, min: 0, allowPercent: true, enums: ["auto"], multiple: true }, bgPos: { number: true, allowPercent: true, multiple: true }, bgRelativeTo: { enums: ["inner", "include-padding"], multiple: true }, bgRepeat: { enums: ["repeat", "repeat-x", "repeat-y", "no-repeat"], multiple: true }, bgFit: { enums: ["none", "contain", "cover"], multiple: true }, bgCrossOrigin: { enums: ["anonymous", "use-credentials"], multiple: true }, bgClip: { enums: ["none", "node"], multiple: true }, bgContainment: { enums: ["inside", "over"], multiple: true }, color: { color: true }, colors: { color: true, multiple: true }, fill: { enums: ["solid", "linear-gradient", "radial-gradient"] }, bool: { enums: ["yes", "no"] }, bools: { enums: ["yes", "no"], multiple: true }, lineStyle: { enums: ["solid", "dotted", "dashed"] }, lineCap: { enums: ["butt", "round", "square"] }, borderStyle: { enums: ["solid", "dotted", "dashed", "double"] }, curveStyle: { enums: ["bezier", "unbundled-bezier", "haystack", "segments", "straight", "straight-triangle", "taxi"] }, fontFamily: { regex: '^([\\w- \\"]+(?:\\s*,\\s*[\\w- \\"]+)*)$' }, fontStyle: { enums: ["italic", "normal", "oblique"] }, fontWeight: { enums: ["normal", "bold", "bolder", "lighter", "100", "200", "300", "400", "500", "600", "800", "900", 100, 200, 300, 400, 500, 600, 700, 800, 900] }, textDecoration: { enums: ["none", "underline", "overline", "line-through"] }, textTransform: { enums: ["none", "uppercase", "lowercase"] }, textWrap: { enums: ["none", "wrap", "ellipsis"] }, textOverflowWrap: { enums: ["whitespace", "anywhere"] }, textBackgroundShape: { enums: ["rectangle", "roundrectangle", "round-rectangle"] }, nodeShape: { enums: ["rectangle", "roundrectangle", "round-rectangle", "cutrectangle", "cut-rectangle", "bottomroundrectangle", "bottom-round-rectangle", "barrel", "ellipse", "triangle", "round-triangle", "square", "pentagon", "round-pentagon", "hexagon", "round-hexagon", "concavehexagon", "concave-hexagon", "heptagon", "round-heptagon", "octagon", "round-octagon", "tag", "round-tag", "star", "diamond", "round-diamond", "vee", "rhomboid", "polygon"] }, overlayShape: { enums: ["roundrectangle", "round-rectangle", "ellipse"] }, compoundIncludeLabels: { enums: ["include", "exclude"] }, arrowShape: { enums: ["tee", "triangle", "triangle-tee", "circle-triangle", "triangle-cross", "triangle-backcurve", "vee", "square", "circle", "diamond", "chevron", "none"] }, arrowFill: { enums: ["filled", "hollow"] }, display: { enums: ["element", "none"] }, visibility: { enums: ["hidden", "visible"] }, zCompoundDepth: { enums: ["bottom", "orphan", "auto", "top"] }, zIndexCompare: { enums: ["auto", "manual"] }, valign: { enums: ["top", "center", "bottom"] }, halign: { enums: ["left", "center", "right"] }, justification: { enums: ["left", "center", "right", "auto"] }, text: { string: true }, data: { mapping: true, regex: t3("data") }, layoutData: { mapping: true, regex: t3("layoutData") }, scratch: { mapping: true, regex: t3("scratch") }, mapData: { mapping: true, regex: n2("mapData") }, mapLayoutData: { mapping: true, regex: n2("mapLayoutData") }, mapScratch: { mapping: true, regex: n2("mapScratch") }, fn: { mapping: true, fn: true }, url: { regexes: r2, singleRegexMatchValue: true }, urls: { regexes: r2, singleRegexMatchValue: true, multiple: true }, propList: { propList: true }, angle: { number: true, units: "deg|rad", implicitUnits: "rad" }, textRotation: { number: true, units: "deg|rad", implicitUnits: "rad", enums: ["none", "autorotate"] }, polygonPointList: { number: true, multiple: true, evenMultiple: true, min: -1, max: 1, unitless: true }, edgeDistances: { enums: ["intersection", "node-position"] }, edgeEndpoint: { number: true, multiple: true, units: "%|px|em|deg|rad", implicitUnits: "px", enums: ["inside-to-node", "outside-to-node", "outside-to-node-or-label", "outside-to-line", "outside-to-line-or-label"], singleEnum: true, validate: function(e10, t4) {
    switch (e10.length) {
      case 2:
        return "deg" !== t4[0] && "rad" !== t4[0] && "deg" !== t4[1] && "rad" !== t4[1];
      case 1:
        return f(e10[0]) || "deg" === t4[0] || "rad" === t4[0];
      default:
        return false;
    }
  } }, easing: { regexes: ["^(spring)\\s*\\(\\s*(" + e9 + ")\\s*,\\s*(" + e9 + ")\\s*\\)$", "^(cubic-bezier)\\s*\\(\\s*(" + e9 + ")\\s*,\\s*(" + e9 + ")\\s*,\\s*(" + e9 + ")\\s*,\\s*(" + e9 + ")\\s*\\)$"], enums: ["linear", "ease", "ease-in", "ease-out", "ease-in-out", "ease-in-sine", "ease-out-sine", "ease-in-out-sine", "ease-in-quad", "ease-out-quad", "ease-in-out-quad", "ease-in-cubic", "ease-out-cubic", "ease-in-out-cubic", "ease-in-quart", "ease-out-quart", "ease-in-out-quart", "ease-in-quint", "ease-out-quint", "ease-in-out-quint", "ease-in-expo", "ease-out-expo", "ease-in-out-expo", "ease-in-circ", "ease-out-circ", "ease-in-out-circ"] }, gradientDirection: { enums: ["to-bottom", "to-top", "to-left", "to-right", "to-bottom-right", "to-bottom-left", "to-top-right", "to-top-left", "to-right-bottom", "to-left-bottom", "to-right-top", "to-left-top"] }, boundsExpansion: { number: true, multiple: true, min: 0, validate: function(e10) {
    var t4 = e10.length;
    return 1 === t4 || 2 === t4 || 4 === t4;
  } } };
  var i2 = { zeroNonZero: function(e10, t4) {
    return (null == e10 || null == t4) && e10 !== t4 || (0 == e10 && 0 != t4 || 0 != e10 && 0 == t4);
  }, any: function(e10, t4) {
    return e10 != t4;
  }, emptyNonEmpty: function(e10, t4) {
    var n3 = S(e10), r3 = S(t4);
    return n3 && !r3 || !n3 && r3;
  } }, a2 = Ss.types, o2 = [{ name: "label", type: a2.text, triggersBounds: i2.any, triggersZOrder: i2.emptyNonEmpty }, { name: "text-rotation", type: a2.textRotation, triggersBounds: i2.any }, { name: "text-margin-x", type: a2.bidirectionalSize, triggersBounds: i2.any }, { name: "text-margin-y", type: a2.bidirectionalSize, triggersBounds: i2.any }], s2 = [{ name: "source-label", type: a2.text, triggersBounds: i2.any }, { name: "source-text-rotation", type: a2.textRotation, triggersBounds: i2.any }, { name: "source-text-margin-x", type: a2.bidirectionalSize, triggersBounds: i2.any }, { name: "source-text-margin-y", type: a2.bidirectionalSize, triggersBounds: i2.any }, { name: "source-text-offset", type: a2.size, triggersBounds: i2.any }], l2 = [{ name: "target-label", type: a2.text, triggersBounds: i2.any }, { name: "target-text-rotation", type: a2.textRotation, triggersBounds: i2.any }, { name: "target-text-margin-x", type: a2.bidirectionalSize, triggersBounds: i2.any }, { name: "target-text-margin-y", type: a2.bidirectionalSize, triggersBounds: i2.any }, { name: "target-text-offset", type: a2.size, triggersBounds: i2.any }], u2 = [{ name: "font-family", type: a2.fontFamily, triggersBounds: i2.any }, { name: "font-style", type: a2.fontStyle, triggersBounds: i2.any }, { name: "font-weight", type: a2.fontWeight, triggersBounds: i2.any }, { name: "font-size", type: a2.size, triggersBounds: i2.any }, { name: "text-transform", type: a2.textTransform, triggersBounds: i2.any }, { name: "text-wrap", type: a2.textWrap, triggersBounds: i2.any }, { name: "text-overflow-wrap", type: a2.textOverflowWrap, triggersBounds: i2.any }, { name: "text-max-width", type: a2.size, triggersBounds: i2.any }, { name: "text-outline-width", type: a2.size, triggersBounds: i2.any }, { name: "line-height", type: a2.positiveNumber, triggersBounds: i2.any }], c2 = [{ name: "text-valign", type: a2.valign, triggersBounds: i2.any }, { name: "text-halign", type: a2.halign, triggersBounds: i2.any }, { name: "color", type: a2.color }, { name: "text-outline-color", type: a2.color }, { name: "text-outline-opacity", type: a2.zeroOneNumber }, { name: "text-background-color", type: a2.color }, { name: "text-background-opacity", type: a2.zeroOneNumber }, { name: "text-background-padding", type: a2.size, triggersBounds: i2.any }, { name: "text-border-opacity", type: a2.zeroOneNumber }, { name: "text-border-color", type: a2.color }, { name: "text-border-width", type: a2.size, triggersBounds: i2.any }, { name: "text-border-style", type: a2.borderStyle, triggersBounds: i2.any }, { name: "text-background-shape", type: a2.textBackgroundShape, triggersBounds: i2.any }, { name: "text-justification", type: a2.justification }], d2 = [{ name: "events", type: a2.bool }, { name: "text-events", type: a2.bool }], h2 = [{ name: "display", type: a2.display, triggersZOrder: i2.any, triggersBounds: i2.any, triggersBoundsOfParallelBeziers: true }, { name: "visibility", type: a2.visibility, triggersZOrder: i2.any }, { name: "opacity", type: a2.zeroOneNumber, triggersZOrder: i2.zeroNonZero }, { name: "text-opacity", type: a2.zeroOneNumber }, { name: "min-zoomed-font-size", type: a2.size }, { name: "z-compound-depth", type: a2.zCompoundDepth, triggersZOrder: i2.any }, { name: "z-index-compare", type: a2.zIndexCompare, triggersZOrder: i2.any }, { name: "z-index", type: a2.nonNegativeInt, triggersZOrder: i2.any }], p2 = [{ name: "overlay-padding", type: a2.size, triggersBounds: i2.any }, { name: "overlay-color", type: a2.color }, { name: "overlay-opacity", type: a2.zeroOneNumber, triggersBounds: i2.zeroNonZero }, { name: "overlay-shape", type: a2.overlayShape, triggersBounds: i2.any }], g2 = [{ name: "underlay-padding", type: a2.size, triggersBounds: i2.any }, { name: "underlay-color", type: a2.color }, { name: "underlay-opacity", type: a2.zeroOneNumber, triggersBounds: i2.zeroNonZero }, { name: "underlay-shape", type: a2.overlayShape, triggersBounds: i2.any }], v2 = [{ name: "transition-property", type: a2.propList }, { name: "transition-duration", type: a2.time }, { name: "transition-delay", type: a2.time }, { name: "transition-timing-function", type: a2.easing }], y2 = function(e10, t4) {
    return "label" === t4.value ? -e10.poolIndex() : t4.pfValue;
  }, m2 = [{ name: "height", type: a2.nodeSize, triggersBounds: i2.any, hashOverride: y2 }, { name: "width", type: a2.nodeSize, triggersBounds: i2.any, hashOverride: y2 }, { name: "shape", type: a2.nodeShape, triggersBounds: i2.any }, { name: "shape-polygon-points", type: a2.polygonPointList, triggersBounds: i2.any }, { name: "background-color", type: a2.color }, { name: "background-fill", type: a2.fill }, { name: "background-opacity", type: a2.zeroOneNumber }, { name: "background-blacken", type: a2.nOneOneNumber }, { name: "background-gradient-stop-colors", type: a2.colors }, { name: "background-gradient-stop-positions", type: a2.percentages }, { name: "background-gradient-direction", type: a2.gradientDirection }, { name: "padding", type: a2.sizeMaybePercent, triggersBounds: i2.any }, { name: "padding-relative-to", type: a2.paddingRelativeTo, triggersBounds: i2.any }, { name: "bounds-expansion", type: a2.boundsExpansion, triggersBounds: i2.any }], b2 = [{ name: "border-color", type: a2.color }, { name: "border-opacity", type: a2.zeroOneNumber }, { name: "border-width", type: a2.size, triggersBounds: i2.any }, { name: "border-style", type: a2.borderStyle }], x2 = [{ name: "background-image", type: a2.urls }, { name: "background-image-crossorigin", type: a2.bgCrossOrigin }, { name: "background-image-opacity", type: a2.zeroOneNumbers }, { name: "background-image-containment", type: a2.bgContainment }, { name: "background-image-smoothing", type: a2.bools }, { name: "background-position-x", type: a2.bgPos }, { name: "background-position-y", type: a2.bgPos }, { name: "background-width-relative-to", type: a2.bgRelativeTo }, { name: "background-height-relative-to", type: a2.bgRelativeTo }, { name: "background-repeat", type: a2.bgRepeat }, { name: "background-fit", type: a2.bgFit }, { name: "background-clip", type: a2.bgClip }, { name: "background-width", type: a2.bgWH }, { name: "background-height", type: a2.bgWH }, { name: "background-offset-x", type: a2.bgPos }, { name: "background-offset-y", type: a2.bgPos }], w2 = [{ name: "position", type: a2.position, triggersBounds: i2.any }, { name: "compound-sizing-wrt-labels", type: a2.compoundIncludeLabels, triggersBounds: i2.any }, { name: "min-width", type: a2.size, triggersBounds: i2.any }, { name: "min-width-bias-left", type: a2.sizeMaybePercent, triggersBounds: i2.any }, { name: "min-width-bias-right", type: a2.sizeMaybePercent, triggersBounds: i2.any }, { name: "min-height", type: a2.size, triggersBounds: i2.any }, { name: "min-height-bias-top", type: a2.sizeMaybePercent, triggersBounds: i2.any }, { name: "min-height-bias-bottom", type: a2.sizeMaybePercent, triggersBounds: i2.any }], E2 = [{ name: "line-style", type: a2.lineStyle }, { name: "line-color", type: a2.color }, { name: "line-fill", type: a2.fill }, { name: "line-cap", type: a2.lineCap }, { name: "line-opacity", type: a2.zeroOneNumber }, { name: "line-dash-pattern", type: a2.numbers }, { name: "line-dash-offset", type: a2.number }, { name: "line-gradient-stop-colors", type: a2.colors }, { name: "line-gradient-stop-positions", type: a2.percentages }, { name: "curve-style", type: a2.curveStyle, triggersBounds: i2.any, triggersBoundsOfParallelBeziers: true }, { name: "haystack-radius", type: a2.zeroOneNumber, triggersBounds: i2.any }, { name: "source-endpoint", type: a2.edgeEndpoint, triggersBounds: i2.any }, { name: "target-endpoint", type: a2.edgeEndpoint, triggersBounds: i2.any }, { name: "control-point-step-size", type: a2.size, triggersBounds: i2.any }, { name: "control-point-distances", type: a2.bidirectionalSizes, triggersBounds: i2.any }, { name: "control-point-weights", type: a2.numbers, triggersBounds: i2.any }, { name: "segment-distances", type: a2.bidirectionalSizes, triggersBounds: i2.any }, { name: "segment-weights", type: a2.numbers, triggersBounds: i2.any }, { name: "taxi-turn", type: a2.bidirectionalSizeMaybePercent, triggersBounds: i2.any }, { name: "taxi-turn-min-distance", type: a2.size, triggersBounds: i2.any }, { name: "taxi-direction", type: a2.axisDirection, triggersBounds: i2.any }, { name: "edge-distances", type: a2.edgeDistances, triggersBounds: i2.any }, { name: "arrow-scale", type: a2.positiveNumber, triggersBounds: i2.any }, { name: "loop-direction", type: a2.angle, triggersBounds: i2.any }, { name: "loop-sweep", type: a2.angle, triggersBounds: i2.any }, { name: "source-distance-from-node", type: a2.size, triggersBounds: i2.any }, { name: "target-distance-from-node", type: a2.size, triggersBounds: i2.any }], k2 = [{ name: "ghost", type: a2.bool, triggersBounds: i2.any }, { name: "ghost-offset-x", type: a2.bidirectionalSize, triggersBounds: i2.any }, { name: "ghost-offset-y", type: a2.bidirectionalSize, triggersBounds: i2.any }, { name: "ghost-opacity", type: a2.zeroOneNumber }], C2 = [{ name: "selection-box-color", type: a2.color }, { name: "selection-box-opacity", type: a2.zeroOneNumber }, { name: "selection-box-border-color", type: a2.color }, { name: "selection-box-border-width", type: a2.size }, { name: "active-bg-color", type: a2.color }, { name: "active-bg-opacity", type: a2.zeroOneNumber }, { name: "active-bg-size", type: a2.size }, { name: "outside-texture-bg-color", type: a2.color }, { name: "outside-texture-bg-opacity", type: a2.zeroOneNumber }], P2 = [];
  Ss.pieBackgroundN = 16, P2.push({ name: "pie-size", type: a2.sizeMaybePercent });
  for (var D2 = 1; D2 <= Ss.pieBackgroundN; D2++)
    P2.push({ name: "pie-" + D2 + "-background-color", type: a2.color }), P2.push({ name: "pie-" + D2 + "-background-size", type: a2.percent }), P2.push({ name: "pie-" + D2 + "-background-opacity", type: a2.zeroOneNumber });
  var T2 = [], _2 = Ss.arrowPrefixes = ["source", "mid-source", "target", "mid-target"];
  [{ name: "arrow-shape", type: a2.arrowShape, triggersBounds: i2.any }, { name: "arrow-color", type: a2.color }, { name: "arrow-fill", type: a2.arrowFill }].forEach(function(e10) {
    _2.forEach(function(t4) {
      var n3 = t4 + "-" + e10.name, r3 = e10.type, i3 = e10.triggersBounds;
      T2.push({ name: n3, type: r3, triggersBounds: i3 });
    });
  }, {});
  var M2 = Ss.properties = [].concat(d2, v2, h2, p2, g2, k2, c2, u2, o2, s2, l2, m2, b2, x2, P2, w2, E2, T2, C2), B2 = Ss.propertyGroups = { behavior: d2, transition: v2, visibility: h2, overlay: p2, underlay: g2, ghost: k2, commonLabel: c2, labelDimensions: u2, mainLabel: o2, sourceLabel: s2, targetLabel: l2, nodeBody: m2, nodeBorder: b2, backgroundImage: x2, pie: P2, compound: w2, edgeLine: E2, edgeArrow: T2, core: C2 }, z2 = Ss.propertyGroupNames = {};
  (Ss.propertyGroupKeys = Object.keys(B2)).forEach(function(e10) {
    z2[e10] = B2[e10].map(function(e11) {
      return e11.name;
    }), B2[e10].forEach(function(t4) {
      return t4.groupKey = e10;
    });
  });
  var I2 = Ss.aliases = [{ name: "content", pointsTo: "label" }, { name: "control-point-distance", pointsTo: "control-point-distances" }, { name: "control-point-weight", pointsTo: "control-point-weights" }, { name: "edge-text-rotation", pointsTo: "text-rotation" }, { name: "padding-left", pointsTo: "padding" }, { name: "padding-right", pointsTo: "padding" }, { name: "padding-top", pointsTo: "padding" }, { name: "padding-bottom", pointsTo: "padding" }];
  Ss.propertyNames = M2.map(function(e10) {
    return e10.name;
  });
  for (var A2 = 0; A2 < M2.length; A2++) {
    var L2 = M2[A2];
    M2[L2.name] = L2;
  }
  for (var O2 = 0; O2 < I2.length; O2++) {
    var R2 = I2[O2], V2 = M2[R2.pointsTo], F2 = { name: R2.name, alias: true, pointsTo: V2 };
    M2.push(F2), M2[R2.name] = F2;
  }
}(), Ss.getDefaultProperty = function(e9) {
  return this.getDefaultProperties()[e9];
}, Ss.getDefaultProperties = function() {
  var e9 = this._private;
  if (null != e9.defaultProperties)
    return e9.defaultProperties;
  for (var t3 = I({ "selection-box-color": "#ddd", "selection-box-opacity": 0.65, "selection-box-border-color": "#aaa", "selection-box-border-width": 1, "active-bg-color": "black", "active-bg-opacity": 0.15, "active-bg-size": 30, "outside-texture-bg-color": "#000", "outside-texture-bg-opacity": 0.125, events: "yes", "text-events": "no", "text-valign": "top", "text-halign": "center", "text-justification": "auto", "line-height": 1, color: "#000", "text-outline-color": "#000", "text-outline-width": 0, "text-outline-opacity": 1, "text-opacity": 1, "text-decoration": "none", "text-transform": "none", "text-wrap": "none", "text-overflow-wrap": "whitespace", "text-max-width": 9999, "text-background-color": "#000", "text-background-opacity": 0, "text-background-shape": "rectangle", "text-background-padding": 0, "text-border-opacity": 0, "text-border-width": 0, "text-border-style": "solid", "text-border-color": "#000", "font-family": "Helvetica Neue, Helvetica, sans-serif", "font-style": "normal", "font-weight": "normal", "font-size": 16, "min-zoomed-font-size": 0, "text-rotation": "none", "source-text-rotation": "none", "target-text-rotation": "none", visibility: "visible", display: "element", opacity: 1, "z-compound-depth": "auto", "z-index-compare": "auto", "z-index": 0, label: "", "text-margin-x": 0, "text-margin-y": 0, "source-label": "", "source-text-offset": 0, "source-text-margin-x": 0, "source-text-margin-y": 0, "target-label": "", "target-text-offset": 0, "target-text-margin-x": 0, "target-text-margin-y": 0, "overlay-opacity": 0, "overlay-color": "#000", "overlay-padding": 10, "overlay-shape": "round-rectangle", "underlay-opacity": 0, "underlay-color": "#000", "underlay-padding": 10, "underlay-shape": "round-rectangle", "transition-property": "none", "transition-duration": 0, "transition-delay": 0, "transition-timing-function": "linear", "background-blacken": 0, "background-color": "#999", "background-fill": "solid", "background-opacity": 1, "background-image": "none", "background-image-crossorigin": "anonymous", "background-image-opacity": 1, "background-image-containment": "inside", "background-image-smoothing": "yes", "background-position-x": "50%", "background-position-y": "50%", "background-offset-x": 0, "background-offset-y": 0, "background-width-relative-to": "include-padding", "background-height-relative-to": "include-padding", "background-repeat": "no-repeat", "background-fit": "none", "background-clip": "node", "background-width": "auto", "background-height": "auto", "border-color": "#000", "border-opacity": 1, "border-width": 0, "border-style": "solid", height: 30, width: 30, shape: "ellipse", "shape-polygon-points": "-1, -1,   1, -1,   1, 1,   -1, 1", "bounds-expansion": 0, "background-gradient-direction": "to-bottom", "background-gradient-stop-colors": "#999", "background-gradient-stop-positions": "0%", ghost: "no", "ghost-offset-y": 0, "ghost-offset-x": 0, "ghost-opacity": 0, padding: 0, "padding-relative-to": "width", position: "origin", "compound-sizing-wrt-labels": "include", "min-width": 0, "min-width-bias-left": 0, "min-width-bias-right": 0, "min-height": 0, "min-height-bias-top": 0, "min-height-bias-bottom": 0 }, { "pie-size": "100%" }, [{ name: "pie-{{i}}-background-color", value: "black" }, { name: "pie-{{i}}-background-size", value: "0%" }, { name: "pie-{{i}}-background-opacity", value: 1 }].reduce(function(e10, t4) {
    for (var n3 = 1; n3 <= Ss.pieBackgroundN; n3++) {
      var r3 = t4.name.replace("{{i}}", n3), i3 = t4.value;
      e10[r3] = i3;
    }
    return e10;
  }, {}), { "line-style": "solid", "line-color": "#999", "line-fill": "solid", "line-cap": "butt", "line-opacity": 1, "line-gradient-stop-colors": "#999", "line-gradient-stop-positions": "0%", "control-point-step-size": 40, "control-point-weights": 0.5, "segment-weights": 0.5, "segment-distances": 20, "taxi-turn": "50%", "taxi-turn-min-distance": 10, "taxi-direction": "auto", "edge-distances": "intersection", "curve-style": "haystack", "haystack-radius": 0, "arrow-scale": 1, "loop-direction": "-45deg", "loop-sweep": "-90deg", "source-distance-from-node": 0, "target-distance-from-node": 0, "source-endpoint": "outside-to-node", "target-endpoint": "outside-to-node", "line-dash-pattern": [6, 3], "line-dash-offset": 0 }, [{ name: "arrow-shape", value: "none" }, { name: "arrow-color", value: "#999" }, { name: "arrow-fill", value: "filled" }].reduce(function(e10, t4) {
    return Ss.arrowPrefixes.forEach(function(n3) {
      var r3 = n3 + "-" + t4.name, i3 = t4.value;
      e10[r3] = i3;
    }), e10;
  }, {})), n2 = {}, r2 = 0; r2 < this.properties.length; r2++) {
    var i2 = this.properties[r2];
    if (!i2.pointsTo) {
      var a2 = i2.name, o2 = t3[a2], s2 = this.parse(a2, o2);
      n2[a2] = s2;
    }
  }
  return e9.defaultProperties = n2, e9.defaultProperties;
}, Ss.addDefaultStylesheet = function() {
  this.selector(":parent").css({ shape: "rectangle", padding: 10, "background-color": "#eee", "border-color": "#ccc", "border-width": 1 }).selector("edge").css({ width: 3 }).selector(":loop").css({ "curve-style": "bezier" }).selector("edge:compound").css({ "curve-style": "bezier", "source-endpoint": "outside-to-line", "target-endpoint": "outside-to-line" }).selector(":selected").css({ "background-color": "#0169D9", "line-color": "#0169D9", "source-arrow-color": "#0169D9", "target-arrow-color": "#0169D9", "mid-source-arrow-color": "#0169D9", "mid-target-arrow-color": "#0169D9" }).selector(":parent:selected").css({ "background-color": "#CCE1F9", "border-color": "#aec8e5" }).selector(":active").css({ "overlay-color": "black", "overlay-padding": 10, "overlay-opacity": 0.25 }), this.defaultLength = this.length;
};
var Ps = { parse: function(e9, t3, n2, r2) {
  if (g(t3))
    return this.parseImplWarn(e9, t3, n2, r2);
  var i2, a2 = De(e9, "" + t3, n2 ? "t" : "f", "mapping" === r2 || true === r2 || false === r2 || null == r2 ? "dontcare" : r2), o2 = this.propCache = this.propCache || [];
  return (i2 = o2[a2]) || (i2 = o2[a2] = this.parseImplWarn(e9, t3, n2, r2)), (n2 || "mapping" === r2) && (i2 = Fe(i2)) && (i2.value = Fe(i2.value)), i2;
}, parseImplWarn: function(e9, t3, n2, r2) {
  var i2 = this.parseImpl(e9, t3, n2, r2);
  return i2 || null == t3 || Ve("The style property `".concat(e9, ": ").concat(t3, "` is invalid")), !i2 || "width" !== i2.name && "height" !== i2.name || "label" !== t3 || Ve("The style value of `label` is deprecated for `" + i2.name + "`"), i2;
} };
Ps.parseImpl = function(e9, t3, n2, r2) {
  e9 = T(e9);
  var i2 = this.properties[e9], a2 = t3, o2 = this.types;
  if (!i2)
    return null;
  if (void 0 === t3)
    return null;
  i2.alias && (i2 = i2.pointsTo, e9 = i2.name);
  var s2 = f(t3);
  s2 && (t3 = t3.trim());
  var l2, u2, c2 = i2.type;
  if (!c2)
    return null;
  if (n2 && ("" === t3 || null === t3))
    return { name: e9, value: t3, bypass: true, deleteBypass: true };
  if (g(t3))
    return { name: e9, value: t3, strValue: "fn", mapped: o2.fn, bypass: n2 };
  if (!s2 || r2 || t3.length < 7 || "a" !== t3[1])
    ;
  else {
    if (t3.length >= 7 && "d" === t3[0] && (l2 = new RegExp(o2.data.regex).exec(t3))) {
      if (n2)
        return false;
      var d2 = o2.data;
      return { name: e9, value: l2, strValue: "" + t3, mapped: d2, field: l2[1], bypass: n2 };
    }
    if (t3.length >= 10 && "m" === t3[0] && (u2 = new RegExp(o2.mapData.regex).exec(t3))) {
      if (n2)
        return false;
      if (c2.multiple)
        return false;
      var h2 = o2.mapData;
      if (!c2.color && !c2.number)
        return false;
      var p2 = this.parse(e9, u2[4]);
      if (!p2 || p2.mapped)
        return false;
      var y2 = this.parse(e9, u2[5]);
      if (!y2 || y2.mapped)
        return false;
      if (p2.pfValue === y2.pfValue || p2.strValue === y2.strValue)
        return Ve("`" + e9 + ": " + t3 + "` is not a valid mapper because the output range is zero; converting to `" + e9 + ": " + p2.strValue + "`"), this.parse(e9, p2.strValue);
      if (c2.color) {
        var b2 = p2.value, x2 = y2.value;
        if (!(b2[0] !== x2[0] || b2[1] !== x2[1] || b2[2] !== x2[2] || b2[3] !== x2[3] && (null != b2[3] && 1 !== b2[3] || null != x2[3] && 1 !== x2[3])))
          return false;
      }
      return { name: e9, value: u2, strValue: "" + t3, mapped: h2, field: u2[1], fieldMin: parseFloat(u2[2]), fieldMax: parseFloat(u2[3]), valueMin: p2.value, valueMax: y2.value, bypass: n2 };
    }
  }
  if (c2.multiple && "multiple" !== r2) {
    var w2;
    if (w2 = s2 ? t3.split(/\s+/) : v(t3) ? t3 : [t3], c2.evenMultiple && w2.length % 2 != 0)
      return null;
    for (var E2 = [], k2 = [], C2 = [], S2 = "", P2 = false, D2 = 0; D2 < w2.length; D2++) {
      var _2 = this.parse(e9, w2[D2], n2, "multiple");
      P2 = P2 || f(_2.value), E2.push(_2.value), C2.push(null != _2.pfValue ? _2.pfValue : _2.value), k2.push(_2.units), S2 += (D2 > 0 ? " " : "") + _2.strValue;
    }
    return c2.validate && !c2.validate(E2, k2) ? null : c2.singleEnum && P2 ? 1 === E2.length && f(E2[0]) ? { name: e9, value: E2[0], strValue: E2[0], bypass: n2 } : null : { name: e9, value: E2, pfValue: C2, strValue: S2, bypass: n2, units: k2 };
  }
  var M2, B2, z2 = function() {
    for (var r3 = 0; r3 < c2.enums.length; r3++) {
      if (c2.enums[r3] === t3)
        return { name: e9, value: t3, strValue: "" + t3, bypass: n2 };
    }
    return null;
  };
  if (c2.number) {
    var I2, L2 = "px";
    if (c2.units && (I2 = c2.units), c2.implicitUnits && (L2 = c2.implicitUnits), !c2.unitless)
      if (s2) {
        var O2 = "px|em" + (c2.allowPercent ? "|\\%" : "");
        I2 && (O2 = I2);
        var R2 = t3.match("^(" + N + ")(" + O2 + ")?$");
        R2 && (t3 = R2[1], I2 = R2[2] || L2);
      } else
        I2 && !c2.implicitUnits || (I2 = L2);
    if (t3 = parseFloat(t3), isNaN(t3) && void 0 === c2.enums)
      return null;
    if (isNaN(t3) && void 0 !== c2.enums)
      return t3 = a2, z2();
    if (c2.integer && (!m(B2 = t3) || Math.floor(B2) !== B2))
      return null;
    if (void 0 !== c2.min && (t3 < c2.min || c2.strictMin && t3 === c2.min) || void 0 !== c2.max && (t3 > c2.max || c2.strictMax && t3 === c2.max))
      return null;
    var V2 = { name: e9, value: t3, strValue: "" + t3 + (I2 || ""), units: I2, bypass: n2 };
    return c2.unitless || "px" !== I2 && "em" !== I2 ? V2.pfValue = t3 : V2.pfValue = "px" !== I2 && I2 ? this.getEmSizeInPixels() * t3 : t3, "ms" !== I2 && "s" !== I2 || (V2.pfValue = "ms" === I2 ? t3 : 1e3 * t3), "deg" !== I2 && "rad" !== I2 || (V2.pfValue = "rad" === I2 ? t3 : (M2 = t3, Math.PI * M2 / 180)), "%" === I2 && (V2.pfValue = t3 / 100), V2;
  }
  if (c2.propList) {
    var F2 = [], j2 = "" + t3;
    if ("none" === j2)
      ;
    else {
      for (var q2 = j2.split(/\s*,\s*|\s+/), Y2 = 0; Y2 < q2.length; Y2++) {
        var X2 = q2[Y2].trim();
        this.properties[X2] ? F2.push(X2) : Ve("`" + X2 + "` is not a valid property name");
      }
      if (0 === F2.length)
        return null;
    }
    return { name: e9, value: F2, strValue: 0 === F2.length ? "none" : F2.join(" "), bypass: n2 };
  }
  if (c2.color) {
    var W2 = A(t3);
    return W2 ? { name: e9, value: W2, pfValue: W2, strValue: "rgb(" + W2[0] + "," + W2[1] + "," + W2[2] + ")", bypass: n2 } : null;
  }
  if (c2.regex || c2.regexes) {
    if (c2.enums) {
      var H2 = z2();
      if (H2)
        return H2;
    }
    for (var K2 = c2.regexes ? c2.regexes : [c2.regex], G2 = 0; G2 < K2.length; G2++) {
      var U2 = new RegExp(K2[G2]).exec(t3);
      if (U2)
        return { name: e9, value: c2.singleRegexMatchValue ? U2[1] : U2, strValue: "" + t3, bypass: n2 };
    }
    return null;
  }
  return c2.string ? { name: e9, value: "" + t3, strValue: "" + t3, bypass: n2 } : c2.enums ? z2() : null;
};
var Ds = function e5(t3) {
  if (!(this instanceof e5))
    return new e5(t3);
  k(t3) ? (this._private = { cy: t3, coreStyle: {} }, this.length = 0, this.resetToDefault()) : Oe("A style must have a core reference");
};
var Ts = Ds.prototype;
Ts.instanceString = function() {
  return "style";
}, Ts.clear = function() {
  for (var e9 = this._private, t3 = e9.cy.elements(), n2 = 0; n2 < this.length; n2++)
    this[n2] = void 0;
  return this.length = 0, e9.contextStyles = {}, e9.propDiffs = {}, this.cleanElements(t3, true), t3.forEach(function(e10) {
    var t4 = e10[0]._private;
    t4.styleDirty = true, t4.appliedInitStyle = false;
  }), this;
}, Ts.resetToDefault = function() {
  return this.clear(), this.addDefaultStylesheet(), this;
}, Ts.core = function(e9) {
  return this._private.coreStyle[e9] || this.getDefaultProperty(e9);
}, Ts.selector = function(e9) {
  var t3 = "core" === e9 ? null : new ba(e9), n2 = this.length++;
  return this[n2] = { selector: t3, properties: [], mappedProperties: [], index: n2 }, this;
}, Ts.css = function() {
  var e9 = this, t3 = arguments;
  if (1 === t3.length)
    for (var n2 = t3[0], r2 = 0; r2 < e9.properties.length; r2++) {
      var i2 = e9.properties[r2], a2 = n2[i2.name];
      void 0 === a2 && (a2 = n2[_(i2.name)]), void 0 !== a2 && this.cssRule(i2.name, a2);
    }
  else
    2 === t3.length && this.cssRule(t3[0], t3[1]);
  return this;
}, Ts.style = Ts.css, Ts.cssRule = function(e9, t3) {
  var n2 = this.parse(e9, t3);
  if (n2) {
    var r2 = this.length - 1;
    this[r2].properties.push(n2), this[r2].properties[n2.name] = n2, n2.name.match(/pie-(\d+)-background-size/) && n2.value && (this._private.hasPie = true), n2.mapped && this[r2].mappedProperties.push(n2), !this[r2].selector && (this._private.coreStyle[n2.name] = n2);
  }
  return this;
}, Ts.append = function(e9) {
  return C(e9) ? e9.appendToStyle(this) : v(e9) ? this.appendFromJson(e9) : f(e9) && this.appendFromString(e9), this;
}, Ds.fromJson = function(e9, t3) {
  var n2 = new Ds(e9);
  return n2.fromJson(t3), n2;
}, Ds.fromString = function(e9, t3) {
  return new Ds(e9).fromString(t3);
}, [bs, xs, ws, Es, ks, Cs, Ss, Ps].forEach(function(e9) {
  I(Ts, e9);
}), Ds.types = Ts.types, Ds.properties = Ts.properties, Ds.propertyGroups = Ts.propertyGroups, Ds.propertyGroupNames = Ts.propertyGroupNames, Ds.propertyGroupKeys = Ts.propertyGroupKeys;
var _s = { style: function(e9) {
  e9 && this.setStyle(e9).update();
  return this._private.style;
}, setStyle: function(e9) {
  var t3 = this._private;
  return C(e9) ? t3.style = e9.generateStyle(this) : v(e9) ? t3.style = Ds.fromJson(this, e9) : f(e9) ? t3.style = Ds.fromString(this, e9) : t3.style = Ds(this), t3.style;
}, updateStyle: function() {
  this.mutableElements().updateStyle();
} };
var Ms = { autolock: function(e9) {
  return void 0 === e9 ? this._private.autolock : (this._private.autolock = !!e9, this);
}, autoungrabify: function(e9) {
  return void 0 === e9 ? this._private.autoungrabify : (this._private.autoungrabify = !!e9, this);
}, autounselectify: function(e9) {
  return void 0 === e9 ? this._private.autounselectify : (this._private.autounselectify = !!e9, this);
}, selectionType: function(e9) {
  var t3 = this._private;
  return null == t3.selectionType && (t3.selectionType = "single"), void 0 === e9 ? t3.selectionType : ("additive" !== e9 && "single" !== e9 || (t3.selectionType = e9), this);
}, panningEnabled: function(e9) {
  return void 0 === e9 ? this._private.panningEnabled : (this._private.panningEnabled = !!e9, this);
}, userPanningEnabled: function(e9) {
  return void 0 === e9 ? this._private.userPanningEnabled : (this._private.userPanningEnabled = !!e9, this);
}, zoomingEnabled: function(e9) {
  return void 0 === e9 ? this._private.zoomingEnabled : (this._private.zoomingEnabled = !!e9, this);
}, userZoomingEnabled: function(e9) {
  return void 0 === e9 ? this._private.userZoomingEnabled : (this._private.userZoomingEnabled = !!e9, this);
}, boxSelectionEnabled: function(e9) {
  return void 0 === e9 ? this._private.boxSelectionEnabled : (this._private.boxSelectionEnabled = !!e9, this);
}, pan: function() {
  var e9, t3, n2, r2, i2, a2 = arguments, o2 = this._private.pan;
  switch (a2.length) {
    case 0:
      return o2;
    case 1:
      if (f(a2[0]))
        return o2[e9 = a2[0]];
      if (y(a2[0])) {
        if (!this._private.panningEnabled)
          return this;
        r2 = (n2 = a2[0]).x, i2 = n2.y, m(r2) && (o2.x = r2), m(i2) && (o2.y = i2), this.emit("pan viewport");
      }
      break;
    case 2:
      if (!this._private.panningEnabled)
        return this;
      e9 = a2[0], t3 = a2[1], "x" !== e9 && "y" !== e9 || !m(t3) || (o2[e9] = t3), this.emit("pan viewport");
  }
  return this.notify("viewport"), this;
}, panBy: function(e9, t3) {
  var n2, r2, i2, a2, o2, s2 = arguments, l2 = this._private.pan;
  if (!this._private.panningEnabled)
    return this;
  switch (s2.length) {
    case 1:
      y(e9) && (a2 = (i2 = s2[0]).x, o2 = i2.y, m(a2) && (l2.x += a2), m(o2) && (l2.y += o2), this.emit("pan viewport"));
      break;
    case 2:
      r2 = t3, "x" !== (n2 = e9) && "y" !== n2 || !m(r2) || (l2[n2] += r2), this.emit("pan viewport");
  }
  return this.notify("viewport"), this;
}, fit: function(e9, t3) {
  var n2 = this.getFitViewport(e9, t3);
  if (n2) {
    var r2 = this._private;
    r2.zoom = n2.zoom, r2.pan = n2.pan, this.emit("pan zoom viewport"), this.notify("viewport");
  }
  return this;
}, getFitViewport: function(e9, t3) {
  if (m(e9) && void 0 === t3 && (t3 = e9, e9 = void 0), this._private.panningEnabled && this._private.zoomingEnabled) {
    var n2, r2;
    if (f(e9)) {
      var i2 = e9;
      e9 = this.$(i2);
    } else if (y(r2 = e9) && m(r2.x1) && m(r2.x2) && m(r2.y1) && m(r2.y2)) {
      var a2 = e9;
      (n2 = { x1: a2.x1, y1: a2.y1, x2: a2.x2, y2: a2.y2 }).w = n2.x2 - n2.x1, n2.h = n2.y2 - n2.y1;
    } else
      x(e9) || (e9 = this.mutableElements());
    if (!x(e9) || !e9.empty()) {
      n2 = n2 || e9.boundingBox();
      var o2, s2 = this.width(), l2 = this.height();
      if (t3 = m(t3) ? t3 : 0, !isNaN(s2) && !isNaN(l2) && s2 > 0 && l2 > 0 && !isNaN(n2.w) && !isNaN(n2.h) && n2.w > 0 && n2.h > 0)
        return { zoom: o2 = (o2 = (o2 = Math.min((s2 - 2 * t3) / n2.w, (l2 - 2 * t3) / n2.h)) > this._private.maxZoom ? this._private.maxZoom : o2) < this._private.minZoom ? this._private.minZoom : o2, pan: { x: (s2 - o2 * (n2.x1 + n2.x2)) / 2, y: (l2 - o2 * (n2.y1 + n2.y2)) / 2 } };
    }
  }
}, zoomRange: function(e9, t3) {
  var n2 = this._private;
  if (null == t3) {
    var r2 = e9;
    e9 = r2.min, t3 = r2.max;
  }
  return m(e9) && m(t3) && e9 <= t3 ? (n2.minZoom = e9, n2.maxZoom = t3) : m(e9) && void 0 === t3 && e9 <= n2.maxZoom ? n2.minZoom = e9 : m(t3) && void 0 === e9 && t3 >= n2.minZoom && (n2.maxZoom = t3), this;
}, minZoom: function(e9) {
  return void 0 === e9 ? this._private.minZoom : this.zoomRange({ min: e9 });
}, maxZoom: function(e9) {
  return void 0 === e9 ? this._private.maxZoom : this.zoomRange({ max: e9 });
}, getZoomedViewport: function(e9) {
  var t3, n2, r2 = this._private, i2 = r2.pan, a2 = r2.zoom, o2 = false;
  if (r2.zoomingEnabled || (o2 = true), m(e9) ? n2 = e9 : y(e9) && (n2 = e9.level, null != e9.position ? t3 = gt(e9.position, a2, i2) : null != e9.renderedPosition && (t3 = e9.renderedPosition), null == t3 || r2.panningEnabled || (o2 = true)), n2 = (n2 = n2 > r2.maxZoom ? r2.maxZoom : n2) < r2.minZoom ? r2.minZoom : n2, o2 || !m(n2) || n2 === a2 || null != t3 && (!m(t3.x) || !m(t3.y)))
    return null;
  if (null != t3) {
    var s2 = i2, l2 = a2, u2 = n2;
    return { zoomed: true, panned: true, zoom: u2, pan: { x: -u2 / l2 * (t3.x - s2.x) + t3.x, y: -u2 / l2 * (t3.y - s2.y) + t3.y } };
  }
  return { zoomed: true, panned: false, zoom: n2, pan: i2 };
}, zoom: function(e9) {
  if (void 0 === e9)
    return this._private.zoom;
  var t3 = this.getZoomedViewport(e9), n2 = this._private;
  return null != t3 && t3.zoomed ? (n2.zoom = t3.zoom, t3.panned && (n2.pan.x = t3.pan.x, n2.pan.y = t3.pan.y), this.emit("zoom" + (t3.panned ? " pan" : "") + " viewport"), this.notify("viewport"), this) : this;
}, viewport: function(e9) {
  var t3 = this._private, n2 = true, r2 = true, i2 = [], a2 = false, o2 = false;
  if (!e9)
    return this;
  if (m(e9.zoom) || (n2 = false), y(e9.pan) || (r2 = false), !n2 && !r2)
    return this;
  if (n2) {
    var s2 = e9.zoom;
    s2 < t3.minZoom || s2 > t3.maxZoom || !t3.zoomingEnabled ? a2 = true : (t3.zoom = s2, i2.push("zoom"));
  }
  if (r2 && (!a2 || !e9.cancelOnFailedZoom) && t3.panningEnabled) {
    var l2 = e9.pan;
    m(l2.x) && (t3.pan.x = l2.x, o2 = false), m(l2.y) && (t3.pan.y = l2.y, o2 = false), o2 || i2.push("pan");
  }
  return i2.length > 0 && (i2.push("viewport"), this.emit(i2.join(" ")), this.notify("viewport")), this;
}, center: function(e9) {
  var t3 = this.getCenterPan(e9);
  return t3 && (this._private.pan = t3, this.emit("pan viewport"), this.notify("viewport")), this;
}, getCenterPan: function(e9, t3) {
  if (this._private.panningEnabled) {
    if (f(e9)) {
      var n2 = e9;
      e9 = this.mutableElements().filter(n2);
    } else
      x(e9) || (e9 = this.mutableElements());
    if (0 !== e9.length) {
      var r2 = e9.boundingBox(), i2 = this.width(), a2 = this.height();
      return { x: (i2 - (t3 = void 0 === t3 ? this._private.zoom : t3) * (r2.x1 + r2.x2)) / 2, y: (a2 - t3 * (r2.y1 + r2.y2)) / 2 };
    }
  }
}, reset: function() {
  return this._private.panningEnabled && this._private.zoomingEnabled ? (this.viewport({ pan: { x: 0, y: 0 }, zoom: 1 }), this) : this;
}, invalidateSize: function() {
  this._private.sizeCache = null;
}, size: function() {
  var e9, t3, n2 = this._private, r2 = n2.container;
  return n2.sizeCache = n2.sizeCache || (r2 ? (e9 = s.getComputedStyle(r2), t3 = function(t4) {
    return parseFloat(e9.getPropertyValue(t4));
  }, { width: r2.clientWidth - t3("padding-left") - t3("padding-right"), height: r2.clientHeight - t3("padding-top") - t3("padding-bottom") }) : { width: 1, height: 1 });
}, width: function() {
  return this.size().width;
}, height: function() {
  return this.size().height;
}, extent: function() {
  var e9 = this._private.pan, t3 = this._private.zoom, n2 = this.renderedExtent(), r2 = { x1: (n2.x1 - e9.x) / t3, x2: (n2.x2 - e9.x) / t3, y1: (n2.y1 - e9.y) / t3, y2: (n2.y2 - e9.y) / t3 };
  return r2.w = r2.x2 - r2.x1, r2.h = r2.y2 - r2.y1, r2;
}, renderedExtent: function() {
  var e9 = this.width(), t3 = this.height();
  return { x1: 0, y1: 0, x2: e9, y2: t3, w: e9, h: t3 };
}, multiClickDebounceTime: function(e9) {
  return e9 ? (this._private.multiClickDebounceTime = e9, this) : this._private.multiClickDebounceTime;
} };
Ms.centre = Ms.center, Ms.autolockNodes = Ms.autolock, Ms.autoungrabifyNodes = Ms.autoungrabify;
var Bs = { data: Li.data({ field: "data", bindingEvent: "data", allowBinding: true, allowSetting: true, settingEvent: "data", settingTriggersEvent: true, triggerFnName: "trigger", allowGetting: true, updateStyle: true }), removeData: Li.removeData({ field: "data", event: "data", triggerFnName: "trigger", triggerEvent: true, updateStyle: true }), scratch: Li.data({ field: "scratch", bindingEvent: "scratch", allowBinding: true, allowSetting: true, settingEvent: "scratch", settingTriggersEvent: true, triggerFnName: "trigger", allowGetting: true, updateStyle: true }), removeScratch: Li.removeData({ field: "scratch", event: "scratch", triggerFnName: "trigger", triggerEvent: true, updateStyle: true }) };
Bs.attr = Bs.data, Bs.removeAttr = Bs.removeData;
var Ns = function(e9) {
  var t3 = this, n2 = (e9 = I({}, e9)).container;
  n2 && !b(n2) && b(n2[0]) && (n2 = n2[0]);
  var r2 = n2 ? n2._cyreg : null;
  (r2 = r2 || {}) && r2.cy && (r2.cy.destroy(), r2 = {});
  var i2 = r2.readies = r2.readies || [];
  n2 && (n2._cyreg = r2), r2.cy = t3;
  var a2 = void 0 !== s && void 0 !== n2 && !e9.headless, o2 = e9;
  o2.layout = I({ name: a2 ? "grid" : "null" }, o2.layout), o2.renderer = I({ name: a2 ? "canvas" : "null" }, o2.renderer);
  var l2 = function(e10, t4, n3) {
    return void 0 !== t4 ? t4 : void 0 !== n3 ? n3 : e10;
  }, u2 = this._private = { container: n2, ready: false, options: o2, elements: new Zo(this), listeners: [], aniEles: new Zo(this), data: o2.data || {}, scratch: {}, layout: null, renderer: null, destroyed: false, notificationsEnabled: true, minZoom: 1e-50, maxZoom: 1e50, zoomingEnabled: l2(true, o2.zoomingEnabled), userZoomingEnabled: l2(true, o2.userZoomingEnabled), panningEnabled: l2(true, o2.panningEnabled), userPanningEnabled: l2(true, o2.userPanningEnabled), boxSelectionEnabled: l2(true, o2.boxSelectionEnabled), autolock: l2(false, o2.autolock, o2.autolockNodes), autoungrabify: l2(false, o2.autoungrabify, o2.autoungrabifyNodes), autounselectify: l2(false, o2.autounselectify), styleEnabled: void 0 === o2.styleEnabled ? a2 : o2.styleEnabled, zoom: m(o2.zoom) ? o2.zoom : 1, pan: { x: y(o2.pan) && m(o2.pan.x) ? o2.pan.x : 0, y: y(o2.pan) && m(o2.pan.y) ? o2.pan.y : 0 }, animation: { current: [], queue: [] }, hasCompoundNodes: false, multiClickDebounceTime: l2(250, o2.multiClickDebounceTime) };
  this.createEmitter(), this.selectionType(o2.selectionType), this.zoomRange({ min: o2.minZoom, max: o2.maxZoom });
  u2.styleEnabled && t3.setStyle([]);
  var c2 = I({}, o2, o2.renderer);
  t3.initRenderer(c2);
  !function(e10, t4) {
    if (e10.some(P))
      return hr.all(e10).then(t4);
    t4(e10);
  }([o2.style, o2.elements], function(e10) {
    var n3 = e10[0], a3 = e10[1];
    u2.styleEnabled && t3.style().append(n3), function(e11, n4, r3) {
      t3.notifications(false);
      var i3 = t3.mutableElements();
      i3.length > 0 && i3.remove(), null != e11 && (y(e11) || v(e11)) && t3.add(e11), t3.one("layoutready", function(e12) {
        t3.notifications(true), t3.emit(e12), t3.one("load", n4), t3.emitAndNotify("load");
      }).one("layoutstop", function() {
        t3.one("done", r3), t3.emit("done");
      });
      var a4 = I({}, t3._private.options.layout);
      a4.eles = t3.elements(), t3.layout(a4).run();
    }(a3, function() {
      t3.startAnimationLoop(), u2.ready = true, g(o2.ready) && t3.on("ready", o2.ready);
      for (var e11 = 0; e11 < i2.length; e11++) {
        var n4 = i2[e11];
        t3.on("ready", n4);
      }
      r2 && (r2.readies = []), t3.emit("ready");
    }, o2.done);
  });
};
var zs = Ns.prototype;
I(zs, { instanceString: function() {
  return "core";
}, isReady: function() {
  return this._private.ready;
}, destroyed: function() {
  return this._private.destroyed;
}, ready: function(e9) {
  return this.isReady() ? this.emitter().emit("ready", [], e9) : this.on("ready", e9), this;
}, destroy: function() {
  var e9 = this;
  if (!e9.destroyed())
    return e9.stopAnimationLoop(), e9.destroyRenderer(), this.emit("destroy"), e9._private.destroyed = true, e9;
}, hasElementWithId: function(e9) {
  return this._private.elements.hasElementWithId(e9);
}, getElementById: function(e9) {
  return this._private.elements.getElementById(e9);
}, hasCompoundNodes: function() {
  return this._private.hasCompoundNodes;
}, headless: function() {
  return this._private.renderer.isHeadless();
}, styleEnabled: function() {
  return this._private.styleEnabled;
}, addToPool: function(e9) {
  return this._private.elements.merge(e9), this;
}, removeFromPool: function(e9) {
  return this._private.elements.unmerge(e9), this;
}, container: function() {
  return this._private.container || null;
}, mount: function(e9) {
  if (null != e9) {
    var t3 = this, n2 = t3._private, r2 = n2.options;
    return !b(e9) && b(e9[0]) && (e9 = e9[0]), t3.stopAnimationLoop(), t3.destroyRenderer(), n2.container = e9, n2.styleEnabled = true, t3.invalidateSize(), t3.initRenderer(I({}, r2, r2.renderer, { name: "null" === r2.renderer.name ? "canvas" : r2.renderer.name })), t3.startAnimationLoop(), t3.style(r2.style), t3.emit("mount"), t3;
  }
}, unmount: function() {
  var e9 = this;
  return e9.stopAnimationLoop(), e9.destroyRenderer(), e9.initRenderer({ name: "null" }), e9.emit("unmount"), e9;
}, options: function() {
  return Fe(this._private.options);
}, json: function(e9) {
  var t3 = this, n2 = t3._private, r2 = t3.mutableElements();
  if (y(e9)) {
    if (t3.startBatch(), e9.elements) {
      var i2 = {}, a2 = function(e10, n3) {
        for (var r3 = [], a3 = [], o3 = 0; o3 < e10.length; o3++) {
          var s3 = e10[o3];
          if (s3.data.id) {
            var l3 = "" + s3.data.id, u3 = t3.getElementById(l3);
            i2[l3] = true, 0 !== u3.length ? a3.push({ ele: u3, json: s3 }) : n3 ? (s3.group = n3, r3.push(s3)) : r3.push(s3);
          } else
            Ve("cy.json() cannot handle elements without an ID attribute");
        }
        t3.add(r3);
        for (var c3 = 0; c3 < a3.length; c3++) {
          var d3 = a3[c3], h3 = d3.ele, p3 = d3.json;
          h3.json(p3);
        }
      };
      if (v(e9.elements))
        a2(e9.elements);
      else
        for (var o2 = ["nodes", "edges"], s2 = 0; s2 < o2.length; s2++) {
          var l2 = o2[s2], u2 = e9.elements[l2];
          v(u2) && a2(u2, l2);
        }
      var c2 = t3.collection();
      r2.filter(function(e10) {
        return !i2[e10.id()];
      }).forEach(function(e10) {
        e10.isParent() ? c2.merge(e10) : e10.remove();
      }), c2.forEach(function(e10) {
        return e10.children().move({ parent: null });
      }), c2.forEach(function(e10) {
        return function(e11) {
          return t3.getElementById(e11.id());
        }(e10).remove();
      });
    }
    e9.style && t3.style(e9.style), null != e9.zoom && e9.zoom !== n2.zoom && t3.zoom(e9.zoom), e9.pan && (e9.pan.x === n2.pan.x && e9.pan.y === n2.pan.y || t3.pan(e9.pan)), e9.data && t3.data(e9.data);
    for (var d2 = ["minZoom", "maxZoom", "zoomingEnabled", "userZoomingEnabled", "panningEnabled", "userPanningEnabled", "boxSelectionEnabled", "autolock", "autoungrabify", "autounselectify", "multiClickDebounceTime"], h2 = 0; h2 < d2.length; h2++) {
      var p2 = d2[h2];
      null != e9[p2] && t3[p2](e9[p2]);
    }
    return t3.endBatch(), this;
  }
  var f2 = {};
  !!e9 ? f2.elements = this.elements().map(function(e10) {
    return e10.json();
  }) : (f2.elements = {}, r2.forEach(function(e10) {
    var t4 = e10.group();
    f2.elements[t4] || (f2.elements[t4] = []), f2.elements[t4].push(e10.json());
  })), this._private.styleEnabled && (f2.style = t3.style().json()), f2.data = Fe(t3.data());
  var g2 = n2.options;
  return f2.zoomingEnabled = n2.zoomingEnabled, f2.userZoomingEnabled = n2.userZoomingEnabled, f2.zoom = n2.zoom, f2.minZoom = n2.minZoom, f2.maxZoom = n2.maxZoom, f2.panningEnabled = n2.panningEnabled, f2.userPanningEnabled = n2.userPanningEnabled, f2.pan = Fe(n2.pan), f2.boxSelectionEnabled = n2.boxSelectionEnabled, f2.renderer = Fe(g2.renderer), f2.hideEdgesOnViewport = g2.hideEdgesOnViewport, f2.textureOnViewport = g2.textureOnViewport, f2.wheelSensitivity = g2.wheelSensitivity, f2.motionBlur = g2.motionBlur, f2.multiClickDebounceTime = g2.multiClickDebounceTime, f2;
} }), zs.$id = zs.getElementById, [Qo, us, hs, ps, fs, gs, ys, ms, _s, Ms, Bs].forEach(function(e9) {
  I(zs, e9);
});
var Is = { fit: true, directed: false, padding: 30, circle: false, grid: false, spacingFactor: 1.75, boundingBox: void 0, avoidOverlap: true, nodeDimensionsIncludeLabels: false, roots: void 0, maximal: false, depthSort: void 0, animate: false, animationDuration: 500, animationEasing: void 0, animateFilter: function(e9, t3) {
  return true;
}, ready: void 0, stop: void 0, transform: function(e9, t3) {
  return t3;
} };
var As = function(e9) {
  return e9.scratch("breadthfirst");
};
var Ls = function(e9, t3) {
  return e9.scratch("breadthfirst", t3);
};
function Os(e9) {
  this.options = I({}, Is, e9);
}
Os.prototype.run = function() {
  var e9, t3 = this.options, n2 = t3, r2 = t3.cy, i2 = n2.eles, a2 = i2.nodes().filter(function(e10) {
    return !e10.isParent();
  }), o2 = i2, s2 = n2.directed, l2 = n2.maximal || n2.maximalAdjustments > 0, u2 = Dt(n2.boundingBox ? n2.boundingBox : { x1: 0, y1: 0, w: r2.width(), h: r2.height() });
  if (x(n2.roots))
    e9 = n2.roots;
  else if (v(n2.roots)) {
    for (var c2 = [], d2 = 0; d2 < n2.roots.length; d2++) {
      var h2 = n2.roots[d2], p2 = r2.getElementById(h2);
      c2.push(p2);
    }
    e9 = r2.collection(c2);
  } else if (f(n2.roots))
    e9 = r2.$(n2.roots);
  else if (s2)
    e9 = a2.roots();
  else {
    var g2 = i2.components();
    e9 = r2.collection();
    for (var y2 = function(t4) {
      var n3 = g2[t4], r3 = n3.maxDegree(false), i3 = n3.filter(function(e10) {
        return e10.degree(false) === r3;
      });
      e9 = e9.add(i3);
    }, m2 = 0; m2 < g2.length; m2++)
      y2(m2);
  }
  var b2 = [], w2 = {}, E2 = function(e10, t4) {
    null == b2[t4] && (b2[t4] = []);
    var n3 = b2[t4].length;
    b2[t4].push(e10), Ls(e10, { index: n3, depth: t4 });
  };
  o2.bfs({ roots: e9, directed: n2.directed, visit: function(e10, t4, n3, r3, i3) {
    var a3 = e10[0], o3 = a3.id();
    E2(a3, i3), w2[o3] = true;
  } });
  for (var k2 = [], C2 = 0; C2 < a2.length; C2++) {
    var S2 = a2[C2];
    w2[S2.id()] || k2.push(S2);
  }
  var P2 = function(e10) {
    for (var t4 = b2[e10], n3 = 0; n3 < t4.length; n3++) {
      var r3 = t4[n3];
      null != r3 ? Ls(r3, { depth: e10, index: n3 }) : (t4.splice(n3, 1), n3--);
    }
  }, D2 = function() {
    for (var e10 = 0; e10 < b2.length; e10++)
      P2(e10);
  }, T2 = function(e10, t4) {
    for (var n3 = As(e10), r3 = e10.incomers().filter(function(e11) {
      return e11.isNode() && i2.has(e11);
    }), a3 = -1, o3 = e10.id(), s3 = 0; s3 < r3.length; s3++) {
      var l3 = r3[s3], u3 = As(l3);
      a3 = Math.max(a3, u3.depth);
    }
    return n3.depth <= a3 && (t4[o3] ? null : (function(e11, t5) {
      var n4 = As(e11), r4 = n4.depth, i3 = n4.index;
      b2[r4][i3] = null, E2(e11, t5);
    }(e10, a3 + 1), t4[o3] = true, true));
  };
  if (s2 && l2) {
    var _2 = [], M2 = {}, B2 = function(e10) {
      return _2.push(e10);
    };
    for (a2.forEach(function(e10) {
      return _2.push(e10);
    }); _2.length > 0; ) {
      var N2 = _2.shift(), I2 = T2(N2, M2);
      if (I2)
        N2.outgoers().filter(function(e10) {
          return e10.isNode() && i2.has(e10);
        }).forEach(B2);
      else if (null === I2) {
        Ve("Detected double maximal shift for node `" + N2.id() + "`.  Bailing maximal adjustment due to cycle.  Use `options.maximal: true` only on DAGs.");
        break;
      }
    }
  }
  D2();
  var A2 = 0;
  if (n2.avoidOverlap)
    for (var L2 = 0; L2 < a2.length; L2++) {
      var O2 = a2[L2].layoutDimensions(n2), R2 = O2.w, V2 = O2.h;
      A2 = Math.max(A2, R2, V2);
    }
  var F2 = {}, j2 = function(e10) {
    if (F2[e10.id()])
      return F2[e10.id()];
    for (var t4 = As(e10).depth, n3 = e10.neighborhood(), r3 = 0, i3 = 0, o3 = 0; o3 < n3.length; o3++) {
      var s3 = n3[o3];
      if (!s3.isEdge() && !s3.isParent() && a2.has(s3)) {
        var l3 = As(s3);
        if (null != l3) {
          var u3 = l3.index, c3 = l3.depth;
          if (null != u3 && null != c3) {
            var d3 = b2[c3].length;
            c3 < t4 && (r3 += u3 / d3, i3++);
          }
        }
      }
    }
    return r3 /= i3 = Math.max(1, i3), 0 === i3 && (r3 = 0), F2[e10.id()] = r3, r3;
  }, q2 = function(e10, t4) {
    var n3 = j2(e10) - j2(t4);
    return 0 === n3 ? z(e10.id(), t4.id()) : n3;
  };
  void 0 !== n2.depthSort && (q2 = n2.depthSort);
  for (var Y2 = 0; Y2 < b2.length; Y2++)
    b2[Y2].sort(q2), P2(Y2);
  for (var X2 = [], W2 = 0; W2 < k2.length; W2++)
    X2.push(k2[W2]);
  b2.unshift(X2), D2();
  for (var H2 = 0, K2 = 0; K2 < b2.length; K2++)
    H2 = Math.max(b2[K2].length, H2);
  var G2 = u2.x1 + u2.w / 2, U2 = u2.x1 + u2.h / 2, Z2 = b2.reduce(function(e10, t4) {
    return Math.max(e10, t4.length);
  }, 0);
  return i2.nodes().layoutPositions(this, n2, function(e10) {
    var t4 = As(e10), r3 = t4.depth, i3 = t4.index, a3 = b2[r3].length, o3 = Math.max(u2.w / ((n2.grid ? Z2 : a3) + 1), A2), s3 = Math.max(u2.h / (b2.length + 1), A2), l3 = Math.min(u2.w / 2 / b2.length, u2.h / 2 / b2.length);
    if (l3 = Math.max(l3, A2), n2.circle) {
      var c3 = l3 * r3 + l3 - (b2.length > 0 && b2[0].length <= 3 ? l3 / 2 : 0), d3 = 2 * Math.PI / b2[r3].length * i3;
      return 0 === r3 && 1 === b2[0].length && (c3 = 1), { x: G2 + c3 * Math.cos(d3), y: U2 + c3 * Math.sin(d3) };
    }
    return { x: G2 + (i3 + 1 - (a3 + 1) / 2) * o3, y: (r3 + 1) * s3 };
  }), this;
};
var Rs = { fit: true, padding: 30, boundingBox: void 0, avoidOverlap: true, nodeDimensionsIncludeLabels: false, spacingFactor: void 0, radius: void 0, startAngle: 1.5 * Math.PI, sweep: void 0, clockwise: true, sort: void 0, animate: false, animationDuration: 500, animationEasing: void 0, animateFilter: function(e9, t3) {
  return true;
}, ready: void 0, stop: void 0, transform: function(e9, t3) {
  return t3;
} };
function Vs(e9) {
  this.options = I({}, Rs, e9);
}
Vs.prototype.run = function() {
  var e9 = this.options, t3 = e9, n2 = e9.cy, r2 = t3.eles, i2 = void 0 !== t3.counterclockwise ? !t3.counterclockwise : t3.clockwise, a2 = r2.nodes().not(":parent");
  t3.sort && (a2 = a2.sort(t3.sort));
  for (var o2, s2 = Dt(t3.boundingBox ? t3.boundingBox : { x1: 0, y1: 0, w: n2.width(), h: n2.height() }), l2 = s2.x1 + s2.w / 2, u2 = s2.y1 + s2.h / 2, c2 = (void 0 === t3.sweep ? 2 * Math.PI - 2 * Math.PI / a2.length : t3.sweep) / Math.max(1, a2.length - 1), d2 = 0, h2 = 0; h2 < a2.length; h2++) {
    var p2 = a2[h2].layoutDimensions(t3), f2 = p2.w, g2 = p2.h;
    d2 = Math.max(d2, f2, g2);
  }
  if (o2 = m(t3.radius) ? t3.radius : a2.length <= 1 ? 0 : Math.min(s2.h, s2.w) / 2 - d2, a2.length > 1 && t3.avoidOverlap) {
    d2 *= 1.75;
    var v2 = Math.cos(c2) - Math.cos(0), y2 = Math.sin(c2) - Math.sin(0), b2 = Math.sqrt(d2 * d2 / (v2 * v2 + y2 * y2));
    o2 = Math.max(b2, o2);
  }
  return r2.nodes().layoutPositions(this, t3, function(e10, n3) {
    var r3 = t3.startAngle + n3 * c2 * (i2 ? 1 : -1), a3 = o2 * Math.cos(r3), s3 = o2 * Math.sin(r3);
    return { x: l2 + a3, y: u2 + s3 };
  }), this;
};
var Fs;
var js = { fit: true, padding: 30, startAngle: 1.5 * Math.PI, sweep: void 0, clockwise: true, equidistant: false, minNodeSpacing: 10, boundingBox: void 0, avoidOverlap: true, nodeDimensionsIncludeLabels: false, height: void 0, width: void 0, spacingFactor: void 0, concentric: function(e9) {
  return e9.degree();
}, levelWidth: function(e9) {
  return e9.maxDegree() / 4;
}, animate: false, animationDuration: 500, animationEasing: void 0, animateFilter: function(e9, t3) {
  return true;
}, ready: void 0, stop: void 0, transform: function(e9, t3) {
  return t3;
} };
function qs(e9) {
  this.options = I({}, js, e9);
}
qs.prototype.run = function() {
  for (var e9 = this.options, t3 = e9, n2 = void 0 !== t3.counterclockwise ? !t3.counterclockwise : t3.clockwise, r2 = e9.cy, i2 = t3.eles, a2 = i2.nodes().not(":parent"), o2 = Dt(t3.boundingBox ? t3.boundingBox : { x1: 0, y1: 0, w: r2.width(), h: r2.height() }), s2 = o2.x1 + o2.w / 2, l2 = o2.y1 + o2.h / 2, u2 = [], c2 = 0, d2 = 0; d2 < a2.length; d2++) {
    var h2, p2 = a2[d2];
    h2 = t3.concentric(p2), u2.push({ value: h2, node: p2 }), p2._private.scratch.concentric = h2;
  }
  a2.updateStyle();
  for (var f2 = 0; f2 < a2.length; f2++) {
    var g2 = a2[f2].layoutDimensions(t3);
    c2 = Math.max(c2, g2.w, g2.h);
  }
  u2.sort(function(e10, t4) {
    return t4.value - e10.value;
  });
  for (var v2 = t3.levelWidth(a2), y2 = [[]], m2 = y2[0], b2 = 0; b2 < u2.length; b2++) {
    var x2 = u2[b2];
    if (m2.length > 0)
      Math.abs(m2[0].value - x2.value) >= v2 && (m2 = [], y2.push(m2));
    m2.push(x2);
  }
  var w2 = c2 + t3.minNodeSpacing;
  if (!t3.avoidOverlap) {
    var E2 = y2.length > 0 && y2[0].length > 1, k2 = (Math.min(o2.w, o2.h) / 2 - w2) / (y2.length + E2 ? 1 : 0);
    w2 = Math.min(w2, k2);
  }
  for (var C2 = 0, S2 = 0; S2 < y2.length; S2++) {
    var P2 = y2[S2], D2 = void 0 === t3.sweep ? 2 * Math.PI - 2 * Math.PI / P2.length : t3.sweep, T2 = P2.dTheta = D2 / Math.max(1, P2.length - 1);
    if (P2.length > 1 && t3.avoidOverlap) {
      var _2 = Math.cos(T2) - Math.cos(0), M2 = Math.sin(T2) - Math.sin(0), B2 = Math.sqrt(w2 * w2 / (_2 * _2 + M2 * M2));
      C2 = Math.max(B2, C2);
    }
    P2.r = C2, C2 += w2;
  }
  if (t3.equidistant) {
    for (var N2 = 0, z2 = 0, I2 = 0; I2 < y2.length; I2++) {
      var A2 = y2[I2].r - z2;
      N2 = Math.max(N2, A2);
    }
    z2 = 0;
    for (var L2 = 0; L2 < y2.length; L2++) {
      var O2 = y2[L2];
      0 === L2 && (z2 = O2.r), O2.r = z2, z2 += N2;
    }
  }
  for (var R2 = {}, V2 = 0; V2 < y2.length; V2++)
    for (var F2 = y2[V2], j2 = F2.dTheta, q2 = F2.r, Y2 = 0; Y2 < F2.length; Y2++) {
      var X2 = F2[Y2], W2 = t3.startAngle + (n2 ? 1 : -1) * j2 * Y2, H2 = { x: s2 + q2 * Math.cos(W2), y: l2 + q2 * Math.sin(W2) };
      R2[X2.node.id()] = H2;
    }
  return i2.nodes().layoutPositions(this, t3, function(e10) {
    var t4 = e10.id();
    return R2[t4];
  }), this;
};
var Ys = { ready: function() {
}, stop: function() {
}, animate: true, animationEasing: void 0, animationDuration: void 0, animateFilter: function(e9, t3) {
  return true;
}, animationThreshold: 250, refresh: 20, fit: true, padding: 30, boundingBox: void 0, nodeDimensionsIncludeLabels: false, randomize: false, componentSpacing: 40, nodeRepulsion: function(e9) {
  return 2048;
}, nodeOverlap: 4, idealEdgeLength: function(e9) {
  return 32;
}, edgeElasticity: function(e9) {
  return 32;
}, nestingFactor: 1.2, gravity: 1, numIter: 1e3, initialTemp: 1e3, coolingFactor: 0.99, minTemp: 1 };
function Xs(e9) {
  this.options = I({}, Ys, e9), this.options.layout = this;
}
Xs.prototype.run = function() {
  var e9 = this.options, t3 = e9.cy, n2 = this;
  n2.stopped = false, true !== e9.animate && false !== e9.animate || n2.emit({ type: "layoutstart", layout: n2 }), Fs = true === e9.debug;
  var r2 = Ws(t3, n2, e9);
  Fs && (void 0)(r2), e9.randomize && Gs(r2);
  var i2 = be(), a2 = function() {
    Zs(r2, t3, e9), true === e9.fit && t3.fit(e9.padding);
  }, o2 = function(t4) {
    return !(n2.stopped || t4 >= e9.numIter) && ($s(r2, e9), r2.temperature = r2.temperature * e9.coolingFactor, !(r2.temperature < e9.minTemp));
  }, s2 = function() {
    if (true === e9.animate || false === e9.animate)
      a2(), n2.one("layoutstop", e9.stop), n2.emit({ type: "layoutstop", layout: n2 });
    else {
      var t4 = e9.eles.nodes(), i3 = Us(r2, e9, t4);
      t4.layoutPositions(n2, e9, i3);
    }
  }, l2 = 0, u2 = true;
  if (true === e9.animate) {
    !function t4() {
      for (var n3 = 0; u2 && n3 < e9.refresh; )
        u2 = o2(l2), l2++, n3++;
      u2 ? (be() - i2 >= e9.animationThreshold && a2(), me(t4)) : (ul(r2, e9), s2());
    }();
  } else {
    for (; u2; )
      u2 = o2(l2), l2++;
    ul(r2, e9), s2();
  }
  return this;
}, Xs.prototype.stop = function() {
  return this.stopped = true, this.thread && this.thread.stop(), this.emit("layoutstop"), this;
}, Xs.prototype.destroy = function() {
  return this.thread && this.thread.stop(), this;
};
var Ws = function(e9, t3, n2) {
  for (var r2 = n2.eles.edges(), i2 = n2.eles.nodes(), a2 = { isCompound: e9.hasCompoundNodes(), layoutNodes: [], idToIndex: {}, nodeSize: i2.size(), graphSet: [], indexToGraph: [], layoutEdges: [], edgeSize: r2.size(), temperature: n2.initialTemp, clientWidth: e9.width(), clientHeight: e9.width(), boundingBox: Dt(n2.boundingBox ? n2.boundingBox : { x1: 0, y1: 0, w: e9.width(), h: e9.height() }) }, o2 = n2.eles.components(), s2 = {}, l2 = 0; l2 < o2.length; l2++)
    for (var u2 = o2[l2], c2 = 0; c2 < u2.length; c2++) {
      s2[u2[c2].id()] = l2;
    }
  for (l2 = 0; l2 < a2.nodeSize; l2++) {
    var d2 = (y2 = i2[l2]).layoutDimensions(n2);
    (z2 = {}).isLocked = y2.locked(), z2.id = y2.data("id"), z2.parentId = y2.data("parent"), z2.cmptId = s2[y2.id()], z2.children = [], z2.positionX = y2.position("x"), z2.positionY = y2.position("y"), z2.offsetX = 0, z2.offsetY = 0, z2.height = d2.w, z2.width = d2.h, z2.maxX = z2.positionX + z2.width / 2, z2.minX = z2.positionX - z2.width / 2, z2.maxY = z2.positionY + z2.height / 2, z2.minY = z2.positionY - z2.height / 2, z2.padLeft = parseFloat(y2.style("padding")), z2.padRight = parseFloat(y2.style("padding")), z2.padTop = parseFloat(y2.style("padding")), z2.padBottom = parseFloat(y2.style("padding")), z2.nodeRepulsion = g(n2.nodeRepulsion) ? n2.nodeRepulsion(y2) : n2.nodeRepulsion, a2.layoutNodes.push(z2), a2.idToIndex[z2.id] = l2;
  }
  var h2 = [], p2 = 0, f2 = -1, v2 = [];
  for (l2 = 0; l2 < a2.nodeSize; l2++) {
    var y2, m2 = (y2 = a2.layoutNodes[l2]).parentId;
    null != m2 ? a2.layoutNodes[a2.idToIndex[m2]].children.push(y2.id) : (h2[++f2] = y2.id, v2.push(y2.id));
  }
  for (a2.graphSet.push(v2); p2 <= f2; ) {
    var b2 = h2[p2++], x2 = a2.idToIndex[b2], w2 = a2.layoutNodes[x2].children;
    if (w2.length > 0) {
      a2.graphSet.push(w2);
      for (l2 = 0; l2 < w2.length; l2++)
        h2[++f2] = w2[l2];
    }
  }
  for (l2 = 0; l2 < a2.graphSet.length; l2++) {
    var E2 = a2.graphSet[l2];
    for (c2 = 0; c2 < E2.length; c2++) {
      var k2 = a2.idToIndex[E2[c2]];
      a2.indexToGraph[k2] = l2;
    }
  }
  for (l2 = 0; l2 < a2.edgeSize; l2++) {
    var C2 = r2[l2], S2 = {};
    S2.id = C2.data("id"), S2.sourceId = C2.data("source"), S2.targetId = C2.data("target");
    var P2 = g(n2.idealEdgeLength) ? n2.idealEdgeLength(C2) : n2.idealEdgeLength, D2 = g(n2.edgeElasticity) ? n2.edgeElasticity(C2) : n2.edgeElasticity, T2 = a2.idToIndex[S2.sourceId], _2 = a2.idToIndex[S2.targetId];
    if (a2.indexToGraph[T2] != a2.indexToGraph[_2]) {
      for (var M2 = Hs(S2.sourceId, S2.targetId, a2), B2 = a2.graphSet[M2], N2 = 0, z2 = a2.layoutNodes[T2]; -1 === B2.indexOf(z2.id); )
        z2 = a2.layoutNodes[a2.idToIndex[z2.parentId]], N2++;
      for (z2 = a2.layoutNodes[_2]; -1 === B2.indexOf(z2.id); )
        z2 = a2.layoutNodes[a2.idToIndex[z2.parentId]], N2++;
      P2 *= N2 * n2.nestingFactor;
    }
    S2.idealLength = P2, S2.elasticity = D2, a2.layoutEdges.push(S2);
  }
  return a2;
};
var Hs = function(e9, t3, n2) {
  var r2 = Ks(e9, t3, 0, n2);
  return 2 > r2.count ? 0 : r2.graph;
};
var Ks = function e6(t3, n2, r2, i2) {
  var a2 = i2.graphSet[r2];
  if (-1 < a2.indexOf(t3) && -1 < a2.indexOf(n2))
    return { count: 2, graph: r2 };
  for (var o2 = 0, s2 = 0; s2 < a2.length; s2++) {
    var l2 = a2[s2], u2 = i2.idToIndex[l2], c2 = i2.layoutNodes[u2].children;
    if (0 !== c2.length) {
      var d2 = e6(t3, n2, i2.indexToGraph[i2.idToIndex[c2[0]]], i2);
      if (0 !== d2.count) {
        if (1 !== d2.count)
          return d2;
        if (2 === ++o2)
          break;
      }
    }
  }
  return { count: o2, graph: r2 };
};
var Gs = function(e9, t3) {
  for (var n2 = e9.clientWidth, r2 = e9.clientHeight, i2 = 0; i2 < e9.nodeSize; i2++) {
    var a2 = e9.layoutNodes[i2];
    0 !== a2.children.length || a2.isLocked || (a2.positionX = Math.random() * n2, a2.positionY = Math.random() * r2);
  }
};
var Us = function(e9, t3, n2) {
  var r2 = e9.boundingBox, i2 = { x1: 1 / 0, x2: -1 / 0, y1: 1 / 0, y2: -1 / 0 };
  return t3.boundingBox && (n2.forEach(function(t4) {
    var n3 = e9.layoutNodes[e9.idToIndex[t4.data("id")]];
    i2.x1 = Math.min(i2.x1, n3.positionX), i2.x2 = Math.max(i2.x2, n3.positionX), i2.y1 = Math.min(i2.y1, n3.positionY), i2.y2 = Math.max(i2.y2, n3.positionY);
  }), i2.w = i2.x2 - i2.x1, i2.h = i2.y2 - i2.y1), function(n3, a2) {
    var o2 = e9.layoutNodes[e9.idToIndex[n3.data("id")]];
    if (t3.boundingBox) {
      var s2 = (o2.positionX - i2.x1) / i2.w, l2 = (o2.positionY - i2.y1) / i2.h;
      return { x: r2.x1 + s2 * r2.w, y: r2.y1 + l2 * r2.h };
    }
    return { x: o2.positionX, y: o2.positionY };
  };
};
var Zs = function(e9, t3, n2) {
  var r2 = n2.layout, i2 = n2.eles.nodes(), a2 = Us(e9, n2, i2);
  i2.positions(a2), true !== e9.ready && (e9.ready = true, r2.one("layoutready", n2.ready), r2.emit({ type: "layoutready", layout: this }));
};
var $s = function(e9, t3, n2) {
  Qs(e9, t3), rl(e9), il(e9, t3), al(e9), ol(e9);
};
var Qs = function(e9, t3) {
  for (var n2 = 0; n2 < e9.graphSet.length; n2++)
    for (var r2 = e9.graphSet[n2], i2 = r2.length, a2 = 0; a2 < i2; a2++)
      for (var o2 = e9.layoutNodes[e9.idToIndex[r2[a2]]], s2 = a2 + 1; s2 < i2; s2++) {
        var l2 = e9.layoutNodes[e9.idToIndex[r2[s2]]];
        el(o2, l2, e9, t3);
      }
};
var Js = function(e9) {
  return -e9 + 2 * e9 * Math.random();
};
var el = function(e9, t3, n2, r2) {
  if (e9.cmptId === t3.cmptId || n2.isCompound) {
    var i2 = t3.positionX - e9.positionX, a2 = t3.positionY - e9.positionY;
    0 === i2 && 0 === a2 && (i2 = Js(1), a2 = Js(1));
    var o2 = tl(e9, t3, i2, a2);
    if (o2 > 0)
      var s2 = (u2 = r2.nodeOverlap * o2) * i2 / (g2 = Math.sqrt(i2 * i2 + a2 * a2)), l2 = u2 * a2 / g2;
    else {
      var u2, c2 = nl(e9, i2, a2), d2 = nl(t3, -1 * i2, -1 * a2), h2 = d2.x - c2.x, p2 = d2.y - c2.y, f2 = h2 * h2 + p2 * p2, g2 = Math.sqrt(f2);
      s2 = (u2 = (e9.nodeRepulsion + t3.nodeRepulsion) / f2) * h2 / g2, l2 = u2 * p2 / g2;
    }
    e9.isLocked || (e9.offsetX -= s2, e9.offsetY -= l2), t3.isLocked || (t3.offsetX += s2, t3.offsetY += l2);
  }
};
var tl = function(e9, t3, n2, r2) {
  if (n2 > 0)
    var i2 = e9.maxX - t3.minX;
  else
    i2 = t3.maxX - e9.minX;
  if (r2 > 0)
    var a2 = e9.maxY - t3.minY;
  else
    a2 = t3.maxY - e9.minY;
  return i2 >= 0 && a2 >= 0 ? Math.sqrt(i2 * i2 + a2 * a2) : 0;
};
var nl = function(e9, t3, n2) {
  var r2 = e9.positionX, i2 = e9.positionY, a2 = e9.height || 1, o2 = e9.width || 1, s2 = n2 / t3, l2 = a2 / o2, u2 = {};
  return 0 === t3 && 0 < n2 || 0 === t3 && 0 > n2 ? (u2.x = r2, u2.y = i2 + a2 / 2, u2) : 0 < t3 && -1 * l2 <= s2 && s2 <= l2 ? (u2.x = r2 + o2 / 2, u2.y = i2 + o2 * n2 / 2 / t3, u2) : 0 > t3 && -1 * l2 <= s2 && s2 <= l2 ? (u2.x = r2 - o2 / 2, u2.y = i2 - o2 * n2 / 2 / t3, u2) : 0 < n2 && (s2 <= -1 * l2 || s2 >= l2) ? (u2.x = r2 + a2 * t3 / 2 / n2, u2.y = i2 + a2 / 2, u2) : 0 > n2 && (s2 <= -1 * l2 || s2 >= l2) ? (u2.x = r2 - a2 * t3 / 2 / n2, u2.y = i2 - a2 / 2, u2) : u2;
};
var rl = function(e9, t3) {
  for (var n2 = 0; n2 < e9.edgeSize; n2++) {
    var r2 = e9.layoutEdges[n2], i2 = e9.idToIndex[r2.sourceId], a2 = e9.layoutNodes[i2], o2 = e9.idToIndex[r2.targetId], s2 = e9.layoutNodes[o2], l2 = s2.positionX - a2.positionX, u2 = s2.positionY - a2.positionY;
    if (0 !== l2 || 0 !== u2) {
      var c2 = nl(a2, l2, u2), d2 = nl(s2, -1 * l2, -1 * u2), h2 = d2.x - c2.x, p2 = d2.y - c2.y, f2 = Math.sqrt(h2 * h2 + p2 * p2), g2 = Math.pow(r2.idealLength - f2, 2) / r2.elasticity;
      if (0 !== f2)
        var v2 = g2 * h2 / f2, y2 = g2 * p2 / f2;
      else
        v2 = 0, y2 = 0;
      a2.isLocked || (a2.offsetX += v2, a2.offsetY += y2), s2.isLocked || (s2.offsetX -= v2, s2.offsetY -= y2);
    }
  }
};
var il = function(e9, t3) {
  if (0 !== t3.gravity)
    for (var n2 = 0; n2 < e9.graphSet.length; n2++) {
      var r2 = e9.graphSet[n2], i2 = r2.length;
      if (0 === n2)
        var a2 = e9.clientHeight / 2, o2 = e9.clientWidth / 2;
      else {
        var s2 = e9.layoutNodes[e9.idToIndex[r2[0]]], l2 = e9.layoutNodes[e9.idToIndex[s2.parentId]];
        a2 = l2.positionX, o2 = l2.positionY;
      }
      for (var u2 = 0; u2 < i2; u2++) {
        var c2 = e9.layoutNodes[e9.idToIndex[r2[u2]]];
        if (!c2.isLocked) {
          var d2 = a2 - c2.positionX, h2 = o2 - c2.positionY, p2 = Math.sqrt(d2 * d2 + h2 * h2);
          if (p2 > 1) {
            var f2 = t3.gravity * d2 / p2, g2 = t3.gravity * h2 / p2;
            c2.offsetX += f2, c2.offsetY += g2;
          }
        }
      }
    }
};
var al = function(e9, t3) {
  var n2 = [], r2 = 0, i2 = -1;
  for (n2.push.apply(n2, e9.graphSet[0]), i2 += e9.graphSet[0].length; r2 <= i2; ) {
    var a2 = n2[r2++], o2 = e9.idToIndex[a2], s2 = e9.layoutNodes[o2], l2 = s2.children;
    if (0 < l2.length && !s2.isLocked) {
      for (var u2 = s2.offsetX, c2 = s2.offsetY, d2 = 0; d2 < l2.length; d2++) {
        var h2 = e9.layoutNodes[e9.idToIndex[l2[d2]]];
        h2.offsetX += u2, h2.offsetY += c2, n2[++i2] = l2[d2];
      }
      s2.offsetX = 0, s2.offsetY = 0;
    }
  }
};
var ol = function(e9, t3) {
  for (var n2 = 0; n2 < e9.nodeSize; n2++) {
    0 < (i2 = e9.layoutNodes[n2]).children.length && (i2.maxX = void 0, i2.minX = void 0, i2.maxY = void 0, i2.minY = void 0);
  }
  for (n2 = 0; n2 < e9.nodeSize; n2++) {
    if (!(0 < (i2 = e9.layoutNodes[n2]).children.length || i2.isLocked)) {
      var r2 = sl(i2.offsetX, i2.offsetY, e9.temperature);
      i2.positionX += r2.x, i2.positionY += r2.y, i2.offsetX = 0, i2.offsetY = 0, i2.minX = i2.positionX - i2.width, i2.maxX = i2.positionX + i2.width, i2.minY = i2.positionY - i2.height, i2.maxY = i2.positionY + i2.height, ll(i2, e9);
    }
  }
  for (n2 = 0; n2 < e9.nodeSize; n2++) {
    var i2;
    0 < (i2 = e9.layoutNodes[n2]).children.length && !i2.isLocked && (i2.positionX = (i2.maxX + i2.minX) / 2, i2.positionY = (i2.maxY + i2.minY) / 2, i2.width = i2.maxX - i2.minX, i2.height = i2.maxY - i2.minY);
  }
};
var sl = function(e9, t3, n2) {
  var r2 = Math.sqrt(e9 * e9 + t3 * t3);
  if (r2 > n2)
    var i2 = { x: n2 * e9 / r2, y: n2 * t3 / r2 };
  else
    i2 = { x: e9, y: t3 };
  return i2;
};
var ll = function e7(t3, n2) {
  var r2 = t3.parentId;
  if (null != r2) {
    var i2 = n2.layoutNodes[n2.idToIndex[r2]], a2 = false;
    return (null == i2.maxX || t3.maxX + i2.padRight > i2.maxX) && (i2.maxX = t3.maxX + i2.padRight, a2 = true), (null == i2.minX || t3.minX - i2.padLeft < i2.minX) && (i2.minX = t3.minX - i2.padLeft, a2 = true), (null == i2.maxY || t3.maxY + i2.padBottom > i2.maxY) && (i2.maxY = t3.maxY + i2.padBottom, a2 = true), (null == i2.minY || t3.minY - i2.padTop < i2.minY) && (i2.minY = t3.minY - i2.padTop, a2 = true), a2 ? e7(i2, n2) : void 0;
  }
};
var ul = function(e9, t3) {
  for (var n2 = e9.layoutNodes, r2 = [], i2 = 0; i2 < n2.length; i2++) {
    var a2 = n2[i2], o2 = a2.cmptId;
    (r2[o2] = r2[o2] || []).push(a2);
  }
  var s2 = 0;
  for (i2 = 0; i2 < r2.length; i2++) {
    if (g2 = r2[i2]) {
      g2.x1 = 1 / 0, g2.x2 = -1 / 0, g2.y1 = 1 / 0, g2.y2 = -1 / 0;
      for (var l2 = 0; l2 < g2.length; l2++) {
        var u2 = g2[l2];
        g2.x1 = Math.min(g2.x1, u2.positionX - u2.width / 2), g2.x2 = Math.max(g2.x2, u2.positionX + u2.width / 2), g2.y1 = Math.min(g2.y1, u2.positionY - u2.height / 2), g2.y2 = Math.max(g2.y2, u2.positionY + u2.height / 2);
      }
      g2.w = g2.x2 - g2.x1, g2.h = g2.y2 - g2.y1, s2 += g2.w * g2.h;
    }
  }
  r2.sort(function(e10, t4) {
    return t4.w * t4.h - e10.w * e10.h;
  });
  var c2 = 0, d2 = 0, h2 = 0, p2 = 0, f2 = Math.sqrt(s2) * e9.clientWidth / e9.clientHeight;
  for (i2 = 0; i2 < r2.length; i2++) {
    var g2;
    if (g2 = r2[i2]) {
      for (l2 = 0; l2 < g2.length; l2++) {
        (u2 = g2[l2]).isLocked || (u2.positionX += c2 - g2.x1, u2.positionY += d2 - g2.y1);
      }
      c2 += g2.w + t3.componentSpacing, h2 += g2.w + t3.componentSpacing, p2 = Math.max(p2, g2.h), h2 > f2 && (d2 += p2 + t3.componentSpacing, c2 = 0, h2 = 0, p2 = 0);
    }
  }
};
var cl = { fit: true, padding: 30, boundingBox: void 0, avoidOverlap: true, avoidOverlapPadding: 10, nodeDimensionsIncludeLabels: false, spacingFactor: void 0, condense: false, rows: void 0, cols: void 0, position: function(e9) {
}, sort: void 0, animate: false, animationDuration: 500, animationEasing: void 0, animateFilter: function(e9, t3) {
  return true;
}, ready: void 0, stop: void 0, transform: function(e9, t3) {
  return t3;
} };
function dl(e9) {
  this.options = I({}, cl, e9);
}
dl.prototype.run = function() {
  var e9 = this.options, t3 = e9, n2 = e9.cy, r2 = t3.eles, i2 = r2.nodes().not(":parent");
  t3.sort && (i2 = i2.sort(t3.sort));
  var a2 = Dt(t3.boundingBox ? t3.boundingBox : { x1: 0, y1: 0, w: n2.width(), h: n2.height() });
  if (0 === a2.h || 0 === a2.w)
    r2.nodes().layoutPositions(this, t3, function(e10) {
      return { x: a2.x1, y: a2.y1 };
    });
  else {
    var o2 = i2.size(), s2 = Math.sqrt(o2 * a2.h / a2.w), l2 = Math.round(s2), u2 = Math.round(a2.w / a2.h * s2), c2 = function(e10) {
      if (null == e10)
        return Math.min(l2, u2);
      Math.min(l2, u2) == l2 ? l2 = e10 : u2 = e10;
    }, d2 = function(e10) {
      if (null == e10)
        return Math.max(l2, u2);
      Math.max(l2, u2) == l2 ? l2 = e10 : u2 = e10;
    }, h2 = t3.rows, p2 = null != t3.cols ? t3.cols : t3.columns;
    if (null != h2 && null != p2)
      l2 = h2, u2 = p2;
    else if (null != h2 && null == p2)
      l2 = h2, u2 = Math.ceil(o2 / l2);
    else if (null == h2 && null != p2)
      u2 = p2, l2 = Math.ceil(o2 / u2);
    else if (u2 * l2 > o2) {
      var f2 = c2(), g2 = d2();
      (f2 - 1) * g2 >= o2 ? c2(f2 - 1) : (g2 - 1) * f2 >= o2 && d2(g2 - 1);
    } else
      for (; u2 * l2 < o2; ) {
        var v2 = c2(), y2 = d2();
        (y2 + 1) * v2 >= o2 ? d2(y2 + 1) : c2(v2 + 1);
      }
    var m2 = a2.w / u2, b2 = a2.h / l2;
    if (t3.condense && (m2 = 0, b2 = 0), t3.avoidOverlap)
      for (var x2 = 0; x2 < i2.length; x2++) {
        var w2 = i2[x2], E2 = w2._private.position;
        null != E2.x && null != E2.y || (E2.x = 0, E2.y = 0);
        var k2 = w2.layoutDimensions(t3), C2 = t3.avoidOverlapPadding, S2 = k2.w + C2, P2 = k2.h + C2;
        m2 = Math.max(m2, S2), b2 = Math.max(b2, P2);
      }
    for (var D2 = {}, T2 = function(e10, t4) {
      return !!D2["c-" + e10 + "-" + t4];
    }, _2 = function(e10, t4) {
      D2["c-" + e10 + "-" + t4] = true;
    }, M2 = 0, B2 = 0, N2 = function() {
      ++B2 >= u2 && (B2 = 0, M2++);
    }, z2 = {}, I2 = 0; I2 < i2.length; I2++) {
      var A2 = i2[I2], L2 = t3.position(A2);
      if (L2 && (void 0 !== L2.row || void 0 !== L2.col)) {
        var O2 = { row: L2.row, col: L2.col };
        if (void 0 === O2.col)
          for (O2.col = 0; T2(O2.row, O2.col); )
            O2.col++;
        else if (void 0 === O2.row)
          for (O2.row = 0; T2(O2.row, O2.col); )
            O2.row++;
        z2[A2.id()] = O2, _2(O2.row, O2.col);
      }
    }
    i2.layoutPositions(this, t3, function(e10, t4) {
      var n3, r3;
      if (e10.locked() || e10.isParent())
        return false;
      var i3 = z2[e10.id()];
      if (i3)
        n3 = i3.col * m2 + m2 / 2 + a2.x1, r3 = i3.row * b2 + b2 / 2 + a2.y1;
      else {
        for (; T2(M2, B2); )
          N2();
        n3 = B2 * m2 + m2 / 2 + a2.x1, r3 = M2 * b2 + b2 / 2 + a2.y1, _2(M2, B2), N2();
      }
      return { x: n3, y: r3 };
    });
  }
  return this;
};
var hl = { ready: function() {
}, stop: function() {
} };
function pl(e9) {
  this.options = I({}, hl, e9);
}
pl.prototype.run = function() {
  var e9 = this.options, t3 = e9.eles;
  return e9.cy, this.emit("layoutstart"), t3.nodes().positions(function() {
    return { x: 0, y: 0 };
  }), this.one("layoutready", e9.ready), this.emit("layoutready"), this.one("layoutstop", e9.stop), this.emit("layoutstop"), this;
}, pl.prototype.stop = function() {
  return this;
};
var fl = { positions: void 0, zoom: void 0, pan: void 0, fit: true, padding: 30, animate: false, animationDuration: 500, animationEasing: void 0, animateFilter: function(e9, t3) {
  return true;
}, ready: void 0, stop: void 0, transform: function(e9, t3) {
  return t3;
} };
function gl(e9) {
  this.options = I({}, fl, e9);
}
gl.prototype.run = function() {
  var e9 = this.options, t3 = e9.eles.nodes(), n2 = g(e9.positions);
  return t3.layoutPositions(this, e9, function(t4, r2) {
    var i2 = function(t5) {
      if (null == e9.positions)
        return function(e10) {
          return { x: e10.x, y: e10.y };
        }(t5.position());
      if (n2)
        return e9.positions(t5);
      var r3 = e9.positions[t5._private.data.id];
      return null == r3 ? null : r3;
    }(t4);
    return !t4.locked() && null != i2 && i2;
  }), this;
};
var vl = { fit: true, padding: 30, boundingBox: void 0, animate: false, animationDuration: 500, animationEasing: void 0, animateFilter: function(e9, t3) {
  return true;
}, ready: void 0, stop: void 0, transform: function(e9, t3) {
  return t3;
} };
function yl(e9) {
  this.options = I({}, vl, e9);
}
yl.prototype.run = function() {
  var e9 = this.options, t3 = e9.cy, n2 = e9.eles, r2 = Dt(e9.boundingBox ? e9.boundingBox : { x1: 0, y1: 0, w: t3.width(), h: t3.height() });
  return n2.nodes().layoutPositions(this, e9, function(e10, t4) {
    return { x: r2.x1 + Math.round(Math.random() * r2.w), y: r2.y1 + Math.round(Math.random() * r2.h) };
  }), this;
};
var ml = [{ name: "breadthfirst", impl: Os }, { name: "circle", impl: Vs }, { name: "concentric", impl: qs }, { name: "cose", impl: Xs }, { name: "grid", impl: dl }, { name: "null", impl: pl }, { name: "preset", impl: gl }, { name: "random", impl: yl }];
function bl(e9) {
  this.options = e9, this.notifications = 0;
}
var xl = function() {
};
var wl = function() {
  throw new Error("A headless instance can not render images");
};
bl.prototype = { recalculateRenderedStyle: xl, notify: function() {
  this.notifications++;
}, init: xl, isHeadless: function() {
  return true;
}, png: wl, jpg: wl };
var El = { arrowShapeWidth: 0.3, registerArrowShapes: function() {
  var e9 = this.arrowShapes = {}, t3 = this, n2 = function(e10, t4, n3, r3, i3, a3, o3) {
    var s3 = i3.x - n3 / 2 - o3, l2 = i3.x + n3 / 2 + o3, u2 = i3.y - n3 / 2 - o3, c2 = i3.y + n3 / 2 + o3;
    return s3 <= e10 && e10 <= l2 && u2 <= t4 && t4 <= c2;
  }, r2 = function(e10, t4, n3, r3, i3) {
    var a3 = e10 * Math.cos(r3) - t4 * Math.sin(r3), o3 = (e10 * Math.sin(r3) + t4 * Math.cos(r3)) * n3;
    return { x: a3 * n3 + i3.x, y: o3 + i3.y };
  }, i2 = function(e10, t4, n3, i3) {
    for (var a3 = [], o3 = 0; o3 < e10.length; o3 += 2) {
      var s3 = e10[o3], l2 = e10[o3 + 1];
      a3.push(r2(s3, l2, t4, n3, i3));
    }
    return a3;
  }, a2 = function(e10) {
    for (var t4 = [], n3 = 0; n3 < e10.length; n3++) {
      var r3 = e10[n3];
      t4.push(r3.x, r3.y);
    }
    return t4;
  }, o2 = function(e10) {
    return e10.pstyle("width").pfValue * e10.pstyle("arrow-scale").pfValue * 2;
  }, s2 = function(r3, s3) {
    f(s3) && (s3 = e9[s3]), e9[r3] = I({ name: r3, points: [-0.15, -0.3, 0.15, -0.3, 0.15, 0.3, -0.15, 0.3], collide: function(e10, t4, n3, r4, o3, s4) {
      var l2 = a2(i2(this.points, n3 + 2 * s4, r4, o3));
      return Ft(e10, t4, l2);
    }, roughCollide: n2, draw: function(e10, n3, r4, a3) {
      var o3 = i2(this.points, n3, r4, a3);
      t3.arrowShapeImpl("polygon")(e10, o3);
    }, spacing: function(e10) {
      return 0;
    }, gap: o2 }, s3);
  };
  s2("none", { collide: Ie, roughCollide: Ie, draw: Le, spacing: Ae, gap: Ae }), s2("triangle", { points: [-0.15, -0.3, 0, 0, 0.15, -0.3] }), s2("arrow", "triangle"), s2("triangle-backcurve", { points: e9.triangle.points, controlPoint: [0, -0.15], roughCollide: n2, draw: function(e10, n3, a3, o3, s3) {
    var l2 = i2(this.points, n3, a3, o3), u2 = this.controlPoint, c2 = r2(u2[0], u2[1], n3, a3, o3);
    t3.arrowShapeImpl(this.name)(e10, l2, c2);
  }, gap: function(e10) {
    return 0.8 * o2(e10);
  } }), s2("triangle-tee", { points: [0, 0, 0.15, -0.3, -0.15, -0.3, 0, 0], pointsTee: [-0.15, -0.4, -0.15, -0.5, 0.15, -0.5, 0.15, -0.4], collide: function(e10, t4, n3, r3, o3, s3, l2) {
    var u2 = a2(i2(this.points, n3 + 2 * l2, r3, o3)), c2 = a2(i2(this.pointsTee, n3 + 2 * l2, r3, o3));
    return Ft(e10, t4, u2) || Ft(e10, t4, c2);
  }, draw: function(e10, n3, r3, a3, o3) {
    var s3 = i2(this.points, n3, r3, a3), l2 = i2(this.pointsTee, n3, r3, a3);
    t3.arrowShapeImpl(this.name)(e10, s3, l2);
  } }), s2("circle-triangle", { radius: 0.15, pointsTr: [0, -0.15, 0.15, -0.45, -0.15, -0.45, 0, -0.15], collide: function(e10, t4, n3, r3, o3, s3, l2) {
    var u2 = o3, c2 = Math.pow(u2.x - e10, 2) + Math.pow(u2.y - t4, 2) <= Math.pow((n3 + 2 * l2) * this.radius, 2), d2 = a2(i2(this.points, n3 + 2 * l2, r3, o3));
    return Ft(e10, t4, d2) || c2;
  }, draw: function(e10, n3, r3, a3, o3) {
    var s3 = i2(this.pointsTr, n3, r3, a3);
    t3.arrowShapeImpl(this.name)(e10, s3, a3.x, a3.y, this.radius * n3);
  }, spacing: function(e10) {
    return t3.getArrowWidth(e10.pstyle("width").pfValue, e10.pstyle("arrow-scale").value) * this.radius;
  } }), s2("triangle-cross", { points: [0, 0, 0.15, -0.3, -0.15, -0.3, 0, 0], baseCrossLinePts: [-0.15, -0.4, -0.15, -0.4, 0.15, -0.4, 0.15, -0.4], crossLinePts: function(e10, t4) {
    var n3 = this.baseCrossLinePts.slice(), r3 = t4 / e10;
    return n3[3] = n3[3] - r3, n3[5] = n3[5] - r3, n3;
  }, collide: function(e10, t4, n3, r3, o3, s3, l2) {
    var u2 = a2(i2(this.points, n3 + 2 * l2, r3, o3)), c2 = a2(i2(this.crossLinePts(n3, s3), n3 + 2 * l2, r3, o3));
    return Ft(e10, t4, u2) || Ft(e10, t4, c2);
  }, draw: function(e10, n3, r3, a3, o3) {
    var s3 = i2(this.points, n3, r3, a3), l2 = i2(this.crossLinePts(n3, o3), n3, r3, a3);
    t3.arrowShapeImpl(this.name)(e10, s3, l2);
  } }), s2("vee", { points: [-0.15, -0.3, 0, 0, 0.15, -0.3, 0, -0.15], gap: function(e10) {
    return 0.525 * o2(e10);
  } }), s2("circle", { radius: 0.15, collide: function(e10, t4, n3, r3, i3, a3, o3) {
    var s3 = i3;
    return Math.pow(s3.x - e10, 2) + Math.pow(s3.y - t4, 2) <= Math.pow((n3 + 2 * o3) * this.radius, 2);
  }, draw: function(e10, n3, r3, i3, a3) {
    t3.arrowShapeImpl(this.name)(e10, i3.x, i3.y, this.radius * n3);
  }, spacing: function(e10) {
    return t3.getArrowWidth(e10.pstyle("width").pfValue, e10.pstyle("arrow-scale").value) * this.radius;
  } }), s2("tee", { points: [-0.15, 0, -0.15, -0.1, 0.15, -0.1, 0.15, 0], spacing: function(e10) {
    return 1;
  }, gap: function(e10) {
    return 1;
  } }), s2("square", { points: [-0.15, 0, 0.15, 0, 0.15, -0.3, -0.15, -0.3] }), s2("diamond", { points: [-0.15, -0.15, 0, -0.3, 0.15, -0.15, 0, 0], gap: function(e10) {
    return e10.pstyle("width").pfValue * e10.pstyle("arrow-scale").value;
  } }), s2("chevron", { points: [0, 0, -0.15, -0.15, -0.1, -0.2, 0, -0.1, 0.1, -0.2, 0.15, -0.15], gap: function(e10) {
    return 0.95 * e10.pstyle("width").pfValue * e10.pstyle("arrow-scale").value;
  } });
} };
var kl = { projectIntoViewport: function(e9, t3) {
  var n2 = this.cy, r2 = this.findContainerClientCoords(), i2 = r2[0], a2 = r2[1], o2 = r2[4], s2 = n2.pan(), l2 = n2.zoom();
  return [((e9 - i2) / o2 - s2.x) / l2, ((t3 - a2) / o2 - s2.y) / l2];
}, findContainerClientCoords: function() {
  if (this.containerBB)
    return this.containerBB;
  var e9 = this.container, t3 = e9.getBoundingClientRect(), n2 = s.getComputedStyle(e9), r2 = function(e10) {
    return parseFloat(n2.getPropertyValue(e10));
  }, i2 = r2("padding-left"), a2 = r2("padding-right"), o2 = r2("padding-top"), l2 = r2("padding-bottom"), u2 = r2("border-left-width"), c2 = r2("border-right-width"), d2 = r2("border-top-width"), h2 = (r2("border-bottom-width"), e9.clientWidth), p2 = e9.clientHeight, f2 = i2 + a2, g2 = o2 + l2, v2 = u2 + c2, y2 = t3.width / (h2 + v2), m2 = h2 - f2, b2 = p2 - g2, x2 = t3.left + i2 + u2, w2 = t3.top + o2 + d2;
  return this.containerBB = [x2, w2, m2, b2, y2];
}, invalidateContainerClientCoordsCache: function() {
  this.containerBB = null;
}, findNearestElement: function(e9, t3, n2, r2) {
  return this.findNearestElements(e9, t3, n2, r2)[0];
}, findNearestElements: function(e9, t3, n2, r2) {
  var i2, a2, o2 = this, s2 = this, l2 = s2.getCachedZSortedEles(), u2 = [], c2 = s2.cy.zoom(), d2 = s2.cy.hasCompoundNodes(), h2 = (r2 ? 24 : 8) / c2, p2 = (r2 ? 8 : 2) / c2, f2 = (r2 ? 8 : 2) / c2, g2 = 1 / 0;
  function v2(e10, t4) {
    if (e10.isNode()) {
      if (a2)
        return;
      a2 = e10, u2.push(e10);
    }
    if (e10.isEdge() && (null == t4 || t4 < g2))
      if (i2) {
        if (i2.pstyle("z-compound-depth").value === e10.pstyle("z-compound-depth").value && i2.pstyle("z-compound-depth").value === e10.pstyle("z-compound-depth").value) {
          for (var n3 = 0; n3 < u2.length; n3++)
            if (u2[n3].isEdge()) {
              u2[n3] = e10, i2 = e10, g2 = null != t4 ? t4 : g2;
              break;
            }
        }
      } else
        u2.push(e10), i2 = e10, g2 = null != t4 ? t4 : g2;
  }
  function y2(n3) {
    var r3 = n3.outerWidth() + 2 * p2, i3 = n3.outerHeight() + 2 * p2, a3 = r3 / 2, l3 = i3 / 2, u3 = n3.position();
    if (u3.x - a3 <= e9 && e9 <= u3.x + a3 && u3.y - l3 <= t3 && t3 <= u3.y + l3 && s2.nodeShapes[o2.getNodeShape(n3)].checkPoint(e9, t3, 0, r3, i3, u3.x, u3.y))
      return v2(n3, 0), true;
  }
  function m2(n3) {
    var r3, i3 = n3._private, a3 = i3.rscratch, l3 = n3.pstyle("width").pfValue, c3 = n3.pstyle("arrow-scale").value, p3 = l3 / 2 + h2, f3 = p3 * p3, g3 = 2 * p3, m3 = i3.source, b3 = i3.target;
    if ("segments" === a3.edgeType || "straight" === a3.edgeType || "haystack" === a3.edgeType) {
      for (var x3 = a3.allpts, w3 = 0; w3 + 3 < x3.length; w3 += 2)
        if (Lt(e9, t3, x3[w3], x3[w3 + 1], x3[w3 + 2], x3[w3 + 3], g3) && f3 > (r3 = Vt(e9, t3, x3[w3], x3[w3 + 1], x3[w3 + 2], x3[w3 + 3])))
          return v2(n3, r3), true;
    } else if ("bezier" === a3.edgeType || "multibezier" === a3.edgeType || "self" === a3.edgeType || "compound" === a3.edgeType) {
      for (x3 = a3.allpts, w3 = 0; w3 + 5 < a3.allpts.length; w3 += 4)
        if (Ot(e9, t3, x3[w3], x3[w3 + 1], x3[w3 + 2], x3[w3 + 3], x3[w3 + 4], x3[w3 + 5], g3) && f3 > (r3 = Rt(e9, t3, x3[w3], x3[w3 + 1], x3[w3 + 2], x3[w3 + 3], x3[w3 + 4], x3[w3 + 5])))
          return v2(n3, r3), true;
    }
    m3 = m3 || i3.source, b3 = b3 || i3.target;
    var E3 = o2.getArrowWidth(l3, c3), k2 = [{ name: "source", x: a3.arrowStartX, y: a3.arrowStartY, angle: a3.srcArrowAngle }, { name: "target", x: a3.arrowEndX, y: a3.arrowEndY, angle: a3.tgtArrowAngle }, { name: "mid-source", x: a3.midX, y: a3.midY, angle: a3.midsrcArrowAngle }, { name: "mid-target", x: a3.midX, y: a3.midY, angle: a3.midtgtArrowAngle }];
    for (w3 = 0; w3 < k2.length; w3++) {
      var C2 = k2[w3], S2 = s2.arrowShapes[n3.pstyle(C2.name + "-arrow-shape").value], P2 = n3.pstyle("width").pfValue;
      if (S2.roughCollide(e9, t3, E3, C2.angle, { x: C2.x, y: C2.y }, P2, h2) && S2.collide(e9, t3, E3, C2.angle, { x: C2.x, y: C2.y }, P2, h2))
        return v2(n3), true;
    }
    d2 && u2.length > 0 && (y2(m3), y2(b3));
  }
  function b2(e10, t4, n3) {
    return Ke(e10, t4, n3);
  }
  function x2(n3, r3) {
    var i3, a3 = n3._private, o3 = f2;
    i3 = r3 ? r3 + "-" : "", n3.boundingBox();
    var s3 = a3.labelBounds[r3 || "main"], l3 = n3.pstyle(i3 + "label").value;
    if ("yes" === n3.pstyle("text-events").strValue && l3) {
      var u3 = b2(a3.rscratch, "labelX", r3), c3 = b2(a3.rscratch, "labelY", r3), d3 = b2(a3.rscratch, "labelAngle", r3), h3 = n3.pstyle(i3 + "text-margin-x").pfValue, p3 = n3.pstyle(i3 + "text-margin-y").pfValue, g3 = s3.x1 - o3 - h3, y3 = s3.x2 + o3 - h3, m3 = s3.y1 - o3 - p3, x3 = s3.y2 + o3 - p3;
      if (d3) {
        var w3 = Math.cos(d3), E3 = Math.sin(d3), k2 = function(e10, t4) {
          return { x: (e10 -= u3) * w3 - (t4 -= c3) * E3 + u3, y: e10 * E3 + t4 * w3 + c3 };
        }, C2 = k2(g3, m3), S2 = k2(g3, x3), P2 = k2(y3, m3), D2 = k2(y3, x3), T2 = [C2.x + h3, C2.y + p3, P2.x + h3, P2.y + p3, D2.x + h3, D2.y + p3, S2.x + h3, S2.y + p3];
        if (Ft(e9, t3, T2))
          return v2(n3), true;
      } else if (zt(s3, e9, t3))
        return v2(n3), true;
    }
  }
  n2 && (l2 = l2.interactive);
  for (var w2 = l2.length - 1; w2 >= 0; w2--) {
    var E2 = l2[w2];
    E2.isNode() ? y2(E2) || x2(E2) : m2(E2) || x2(E2) || x2(E2, "source") || x2(E2, "target");
  }
  return u2;
}, getAllInBox: function(e9, t3, n2, r2) {
  for (var i2, a2, o2 = this.getCachedZSortedEles().interactive, s2 = [], l2 = Math.min(e9, n2), u2 = Math.max(e9, n2), c2 = Math.min(t3, r2), d2 = Math.max(t3, r2), h2 = Dt({ x1: e9 = l2, y1: t3 = c2, x2: n2 = u2, y2: r2 = d2 }), p2 = 0; p2 < o2.length; p2++) {
    var f2 = o2[p2];
    if (f2.isNode()) {
      var g2 = f2, v2 = g2.boundingBox({ includeNodes: true, includeEdges: false, includeLabels: false });
      Nt(h2, v2) && !It(v2, h2) && s2.push(g2);
    } else {
      var y2 = f2, m2 = y2._private, b2 = m2.rscratch;
      if (null != b2.startX && null != b2.startY && !zt(h2, b2.startX, b2.startY))
        continue;
      if (null != b2.endX && null != b2.endY && !zt(h2, b2.endX, b2.endY))
        continue;
      if ("bezier" === b2.edgeType || "multibezier" === b2.edgeType || "self" === b2.edgeType || "compound" === b2.edgeType || "segments" === b2.edgeType || "haystack" === b2.edgeType) {
        for (var x2 = m2.rstyle.bezierPts || m2.rstyle.linePts || m2.rstyle.haystackPts, w2 = true, E2 = 0; E2 < x2.length; E2++)
          if (i2 = h2, a2 = x2[E2], !zt(i2, a2.x, a2.y)) {
            w2 = false;
            break;
          }
        w2 && s2.push(y2);
      } else
        "haystack" !== b2.edgeType && "straight" !== b2.edgeType || s2.push(y2);
    }
  }
  return s2;
} };
var Cl = { calculateArrowAngles: function(e9) {
  var t3, n2, r2, i2, a2, o2, s2 = e9._private.rscratch, l2 = "haystack" === s2.edgeType, u2 = "bezier" === s2.edgeType, c2 = "multibezier" === s2.edgeType, d2 = "segments" === s2.edgeType, h2 = "compound" === s2.edgeType, p2 = "self" === s2.edgeType;
  if (l2 ? (r2 = s2.haystackPts[0], i2 = s2.haystackPts[1], a2 = s2.haystackPts[2], o2 = s2.haystackPts[3]) : (r2 = s2.arrowStartX, i2 = s2.arrowStartY, a2 = s2.arrowEndX, o2 = s2.arrowEndY), g2 = s2.midX, v2 = s2.midY, d2)
    t3 = r2 - s2.segpts[0], n2 = i2 - s2.segpts[1];
  else if (c2 || h2 || p2 || u2) {
    var f2 = s2.allpts;
    t3 = r2 - Ct(f2[0], f2[2], f2[4], 0.1), n2 = i2 - Ct(f2[1], f2[3], f2[5], 0.1);
  } else
    t3 = r2 - g2, n2 = i2 - v2;
  s2.srcArrowAngle = mt(t3, n2);
  var g2 = s2.midX, v2 = s2.midY;
  if (l2 && (g2 = (r2 + a2) / 2, v2 = (i2 + o2) / 2), t3 = a2 - r2, n2 = o2 - i2, d2)
    if ((f2 = s2.allpts).length / 2 % 2 == 0) {
      var y2 = (m2 = f2.length / 2) - 2;
      t3 = f2[m2] - f2[y2], n2 = f2[m2 + 1] - f2[y2 + 1];
    } else {
      y2 = (m2 = f2.length / 2 - 1) - 2;
      var m2, b2 = m2 + 2;
      t3 = f2[m2] - f2[y2], n2 = f2[m2 + 1] - f2[y2 + 1];
    }
  else if (c2 || h2 || p2) {
    var x2, w2, E2, k2, f2 = s2.allpts;
    if (s2.ctrlpts.length / 2 % 2 == 0) {
      var C2 = (S2 = (P2 = f2.length / 2 - 1) + 2) + 2;
      x2 = Ct(f2[P2], f2[S2], f2[C2], 0), w2 = Ct(f2[P2 + 1], f2[S2 + 1], f2[C2 + 1], 0), E2 = Ct(f2[P2], f2[S2], f2[C2], 1e-4), k2 = Ct(f2[P2 + 1], f2[S2 + 1], f2[C2 + 1], 1e-4);
    } else {
      var S2, P2;
      C2 = (S2 = f2.length / 2 - 1) + 2;
      x2 = Ct(f2[P2 = S2 - 2], f2[S2], f2[C2], 0.4999), w2 = Ct(f2[P2 + 1], f2[S2 + 1], f2[C2 + 1], 0.4999), E2 = Ct(f2[P2], f2[S2], f2[C2], 0.5), k2 = Ct(f2[P2 + 1], f2[S2 + 1], f2[C2 + 1], 0.5);
    }
    t3 = E2 - x2, n2 = k2 - w2;
  }
  (s2.midtgtArrowAngle = mt(t3, n2), s2.midDispX = t3, s2.midDispY = n2, t3 *= -1, n2 *= -1, d2) && ((f2 = s2.allpts).length / 2 % 2 == 0 || (t3 = -(f2[b2 = (m2 = f2.length / 2 - 1) + 2] - f2[m2]), n2 = -(f2[b2 + 1] - f2[m2 + 1])));
  if (s2.midsrcArrowAngle = mt(t3, n2), d2)
    t3 = a2 - s2.segpts[s2.segpts.length - 2], n2 = o2 - s2.segpts[s2.segpts.length - 1];
  else if (c2 || h2 || p2 || u2) {
    var D2 = (f2 = s2.allpts).length;
    t3 = a2 - Ct(f2[D2 - 6], f2[D2 - 4], f2[D2 - 2], 0.9), n2 = o2 - Ct(f2[D2 - 5], f2[D2 - 3], f2[D2 - 1], 0.9);
  } else
    t3 = a2 - g2, n2 = o2 - v2;
  s2.tgtArrowAngle = mt(t3, n2);
} };
Cl.getArrowWidth = Cl.getArrowHeight = function(e9, t3) {
  var n2 = this.arrowWidthCache = this.arrowWidthCache || {}, r2 = n2[e9 + ", " + t3];
  return r2 || (r2 = Math.max(Math.pow(13.37 * e9, 0.9), 29) * t3, n2[e9 + ", " + t3] = r2, r2);
};
var Sl = {};
function Pl(e9) {
  var t3 = [];
  if (null != e9) {
    for (var n2 = 0; n2 < e9.length; n2 += 2) {
      var r2 = e9[n2], i2 = e9[n2 + 1];
      t3.push({ x: r2, y: i2 });
    }
    return t3;
  }
}
Sl.findHaystackPoints = function(e9) {
  for (var t3 = 0; t3 < e9.length; t3++) {
    var n2 = e9[t3], r2 = n2._private, i2 = r2.rscratch;
    if (!i2.haystack) {
      var a2 = 2 * Math.random() * Math.PI;
      i2.source = { x: Math.cos(a2), y: Math.sin(a2) }, a2 = 2 * Math.random() * Math.PI, i2.target = { x: Math.cos(a2), y: Math.sin(a2) };
    }
    var o2 = r2.source, s2 = r2.target, l2 = o2.position(), u2 = s2.position(), c2 = o2.width(), d2 = s2.width(), h2 = o2.height(), p2 = s2.height(), f2 = n2.pstyle("haystack-radius").value / 2;
    i2.haystackPts = i2.allpts = [i2.source.x * c2 * f2 + l2.x, i2.source.y * h2 * f2 + l2.y, i2.target.x * d2 * f2 + u2.x, i2.target.y * p2 * f2 + u2.y], i2.midX = (i2.allpts[0] + i2.allpts[2]) / 2, i2.midY = (i2.allpts[1] + i2.allpts[3]) / 2, i2.edgeType = "haystack", i2.haystack = true, this.storeEdgeProjections(n2), this.calculateArrowAngles(n2), this.recalculateEdgeLabelProjections(n2), this.calculateLabelAngles(n2);
  }
}, Sl.findSegmentsPoints = function(e9, t3) {
  var n2 = e9._private.rscratch, r2 = t3.posPts, i2 = t3.intersectionPts, a2 = t3.vectorNormInverse, o2 = e9.pstyle("edge-distances").value, s2 = e9.pstyle("segment-weights"), l2 = e9.pstyle("segment-distances"), u2 = Math.min(s2.pfValue.length, l2.pfValue.length);
  n2.edgeType = "segments", n2.segpts = [];
  for (var c2 = 0; c2 < u2; c2++) {
    var d2 = s2.pfValue[c2], h2 = l2.pfValue[c2], p2 = 1 - d2, f2 = d2, g2 = "node-position" === o2 ? r2 : i2, v2 = { x: g2.x1 * p2 + g2.x2 * f2, y: g2.y1 * p2 + g2.y2 * f2 };
    n2.segpts.push(v2.x + a2.x * h2, v2.y + a2.y * h2);
  }
}, Sl.findLoopPoints = function(e9, t3, n2, r2) {
  var i2 = e9._private.rscratch, a2 = t3.dirCounts, o2 = t3.srcPos, s2 = e9.pstyle("control-point-distances"), l2 = s2 ? s2.pfValue[0] : void 0, u2 = e9.pstyle("loop-direction").pfValue, c2 = e9.pstyle("loop-sweep").pfValue, d2 = e9.pstyle("control-point-step-size").pfValue;
  i2.edgeType = "self";
  var h2 = n2, p2 = d2;
  r2 && (h2 = 0, p2 = l2);
  var f2 = u2 - Math.PI / 2, g2 = f2 - c2 / 2, v2 = f2 + c2 / 2, y2 = String(u2 + "_" + c2);
  h2 = void 0 === a2[y2] ? a2[y2] = 0 : ++a2[y2], i2.ctrlpts = [o2.x + 1.4 * Math.cos(g2) * p2 * (h2 / 3 + 1), o2.y + 1.4 * Math.sin(g2) * p2 * (h2 / 3 + 1), o2.x + 1.4 * Math.cos(v2) * p2 * (h2 / 3 + 1), o2.y + 1.4 * Math.sin(v2) * p2 * (h2 / 3 + 1)];
}, Sl.findCompoundLoopPoints = function(e9, t3, n2, r2) {
  var i2 = e9._private.rscratch;
  i2.edgeType = "compound";
  var a2 = t3.srcPos, o2 = t3.tgtPos, s2 = t3.srcW, l2 = t3.srcH, u2 = t3.tgtW, c2 = t3.tgtH, d2 = e9.pstyle("control-point-step-size").pfValue, h2 = e9.pstyle("control-point-distances"), p2 = h2 ? h2.pfValue[0] : void 0, f2 = n2, g2 = d2;
  r2 && (f2 = 0, g2 = p2);
  var v2 = { x: a2.x - s2 / 2, y: a2.y - l2 / 2 }, y2 = { x: o2.x - u2 / 2, y: o2.y - c2 / 2 }, m2 = { x: Math.min(v2.x, y2.x), y: Math.min(v2.y, y2.y) }, b2 = Math.max(0.5, Math.log(0.01 * s2)), x2 = Math.max(0.5, Math.log(0.01 * u2));
  i2.ctrlpts = [m2.x, m2.y - (1 + Math.pow(50, 1.12) / 100) * g2 * (f2 / 3 + 1) * b2, m2.x - (1 + Math.pow(50, 1.12) / 100) * g2 * (f2 / 3 + 1) * x2, m2.y];
}, Sl.findStraightEdgePoints = function(e9) {
  e9._private.rscratch.edgeType = "straight";
}, Sl.findBezierPoints = function(e9, t3, n2, r2, i2) {
  var a2 = e9._private.rscratch, o2 = t3.vectorNormInverse, s2 = t3.posPts, l2 = t3.intersectionPts, u2 = e9.pstyle("edge-distances").value, c2 = e9.pstyle("control-point-step-size").pfValue, d2 = e9.pstyle("control-point-distances"), h2 = e9.pstyle("control-point-weights"), p2 = d2 && h2 ? Math.min(d2.value.length, h2.value.length) : 1, f2 = d2 ? d2.pfValue[0] : void 0, g2 = h2.value[0], v2 = r2;
  a2.edgeType = v2 ? "multibezier" : "bezier", a2.ctrlpts = [];
  for (var y2 = 0; y2 < p2; y2++) {
    var m2 = (0.5 - t3.eles.length / 2 + n2) * c2 * (i2 ? -1 : 1), b2 = void 0, x2 = xt(m2);
    v2 && (f2 = d2 ? d2.pfValue[y2] : c2, g2 = h2.value[y2]);
    var w2 = void 0 !== (b2 = r2 ? f2 : void 0 !== f2 ? x2 * f2 : void 0) ? b2 : m2, E2 = 1 - g2, k2 = g2, C2 = "node-position" === u2 ? s2 : l2, S2 = { x: C2.x1 * E2 + C2.x2 * k2, y: C2.y1 * E2 + C2.y2 * k2 };
    a2.ctrlpts.push(S2.x + o2.x * w2, S2.y + o2.y * w2);
  }
}, Sl.findTaxiPoints = function(e9, t3) {
  var n2 = e9._private.rscratch;
  n2.edgeType = "segments";
  var r2 = t3.posPts, i2 = t3.srcW, a2 = t3.srcH, o2 = t3.tgtW, s2 = t3.tgtH, l2 = "node-position" !== e9.pstyle("edge-distances").value, u2 = e9.pstyle("taxi-direction").value, c2 = u2, d2 = e9.pstyle("taxi-turn"), h2 = "%" === d2.units, p2 = d2.pfValue, f2 = p2 < 0, g2 = e9.pstyle("taxi-turn-min-distance").pfValue, v2 = l2 ? (i2 + o2) / 2 : 0, y2 = l2 ? (a2 + s2) / 2 : 0, m2 = r2.x2 - r2.x1, b2 = r2.y2 - r2.y1, x2 = function(e10, t4) {
    return e10 > 0 ? Math.max(e10 - t4, 0) : Math.min(e10 + t4, 0);
  }, w2 = x2(m2, v2), E2 = x2(b2, y2), k2 = false;
  "auto" === c2 ? u2 = Math.abs(w2) > Math.abs(E2) ? "horizontal" : "vertical" : "upward" === c2 || "downward" === c2 ? (u2 = "vertical", k2 = true) : "leftward" !== c2 && "rightward" !== c2 || (u2 = "horizontal", k2 = true);
  var C2, S2 = "vertical" === u2, P2 = S2 ? E2 : w2, D2 = S2 ? b2 : m2, T2 = xt(D2), _2 = false;
  (k2 && (h2 || f2) || !("downward" === c2 && D2 < 0 || "upward" === c2 && D2 > 0 || "leftward" === c2 && D2 > 0 || "rightward" === c2 && D2 < 0) || (P2 = (T2 *= -1) * Math.abs(P2), _2 = true), h2) ? C2 = (p2 < 0 ? 1 + p2 : p2) * P2 : C2 = (p2 < 0 ? P2 : 0) + p2 * T2;
  var M2 = function(e10) {
    return Math.abs(e10) < g2 || Math.abs(e10) >= Math.abs(P2);
  }, B2 = M2(C2), N2 = M2(Math.abs(P2) - Math.abs(C2));
  if ((B2 || N2) && !_2)
    if (S2) {
      var z2 = Math.abs(D2) <= a2 / 2, I2 = Math.abs(m2) <= o2 / 2;
      if (z2) {
        var A2 = (r2.x1 + r2.x2) / 2, L2 = r2.y1, O2 = r2.y2;
        n2.segpts = [A2, L2, A2, O2];
      } else if (I2) {
        var R2 = (r2.y1 + r2.y2) / 2, V2 = r2.x1, F2 = r2.x2;
        n2.segpts = [V2, R2, F2, R2];
      } else
        n2.segpts = [r2.x1, r2.y2];
    } else {
      var j2 = Math.abs(D2) <= i2 / 2, q2 = Math.abs(b2) <= s2 / 2;
      if (j2) {
        var Y2 = (r2.y1 + r2.y2) / 2, X2 = r2.x1, W2 = r2.x2;
        n2.segpts = [X2, Y2, W2, Y2];
      } else if (q2) {
        var H2 = (r2.x1 + r2.x2) / 2, K2 = r2.y1, G2 = r2.y2;
        n2.segpts = [H2, K2, H2, G2];
      } else
        n2.segpts = [r2.x2, r2.y1];
    }
  else if (S2) {
    var U2 = r2.y1 + C2 + (l2 ? a2 / 2 * T2 : 0), Z2 = r2.x1, $2 = r2.x2;
    n2.segpts = [Z2, U2, $2, U2];
  } else {
    var Q2 = r2.x1 + C2 + (l2 ? i2 / 2 * T2 : 0), J2 = r2.y1, ee2 = r2.y2;
    n2.segpts = [Q2, J2, Q2, ee2];
  }
}, Sl.tryToCorrectInvalidPoints = function(e9, t3) {
  var n2 = e9._private.rscratch;
  if ("bezier" === n2.edgeType) {
    var r2 = t3.srcPos, i2 = t3.tgtPos, a2 = t3.srcW, o2 = t3.srcH, s2 = t3.tgtW, l2 = t3.tgtH, u2 = t3.srcShape, c2 = t3.tgtShape, d2 = !m(n2.startX) || !m(n2.startY), h2 = !m(n2.arrowStartX) || !m(n2.arrowStartY), p2 = !m(n2.endX) || !m(n2.endY), f2 = !m(n2.arrowEndX) || !m(n2.arrowEndY), g2 = 3 * (this.getArrowWidth(e9.pstyle("width").pfValue, e9.pstyle("arrow-scale").value) * this.arrowShapeWidth), v2 = wt({ x: n2.ctrlpts[0], y: n2.ctrlpts[1] }, { x: n2.startX, y: n2.startY }), y2 = v2 < g2, b2 = wt({ x: n2.ctrlpts[0], y: n2.ctrlpts[1] }, { x: n2.endX, y: n2.endY }), x2 = b2 < g2, w2 = false;
    if (d2 || h2 || y2) {
      w2 = true;
      var E2 = { x: n2.ctrlpts[0] - r2.x, y: n2.ctrlpts[1] - r2.y }, k2 = Math.sqrt(E2.x * E2.x + E2.y * E2.y), C2 = { x: E2.x / k2, y: E2.y / k2 }, S2 = Math.max(a2, o2), P2 = { x: n2.ctrlpts[0] + 2 * C2.x * S2, y: n2.ctrlpts[1] + 2 * C2.y * S2 }, D2 = u2.intersectLine(r2.x, r2.y, a2, o2, P2.x, P2.y, 0);
      y2 ? (n2.ctrlpts[0] = n2.ctrlpts[0] + C2.x * (g2 - v2), n2.ctrlpts[1] = n2.ctrlpts[1] + C2.y * (g2 - v2)) : (n2.ctrlpts[0] = D2[0] + C2.x * g2, n2.ctrlpts[1] = D2[1] + C2.y * g2);
    }
    if (p2 || f2 || x2) {
      w2 = true;
      var T2 = { x: n2.ctrlpts[0] - i2.x, y: n2.ctrlpts[1] - i2.y }, _2 = Math.sqrt(T2.x * T2.x + T2.y * T2.y), M2 = { x: T2.x / _2, y: T2.y / _2 }, B2 = Math.max(a2, o2), N2 = { x: n2.ctrlpts[0] + 2 * M2.x * B2, y: n2.ctrlpts[1] + 2 * M2.y * B2 }, z2 = c2.intersectLine(i2.x, i2.y, s2, l2, N2.x, N2.y, 0);
      x2 ? (n2.ctrlpts[0] = n2.ctrlpts[0] + M2.x * (g2 - b2), n2.ctrlpts[1] = n2.ctrlpts[1] + M2.y * (g2 - b2)) : (n2.ctrlpts[0] = z2[0] + M2.x * g2, n2.ctrlpts[1] = z2[1] + M2.y * g2);
    }
    w2 && this.findEndpoints(e9);
  }
}, Sl.storeAllpts = function(e9) {
  var t3 = e9._private.rscratch;
  if ("multibezier" === t3.edgeType || "bezier" === t3.edgeType || "self" === t3.edgeType || "compound" === t3.edgeType) {
    t3.allpts = [], t3.allpts.push(t3.startX, t3.startY);
    for (var n2 = 0; n2 + 1 < t3.ctrlpts.length; n2 += 2)
      t3.allpts.push(t3.ctrlpts[n2], t3.ctrlpts[n2 + 1]), n2 + 3 < t3.ctrlpts.length && t3.allpts.push((t3.ctrlpts[n2] + t3.ctrlpts[n2 + 2]) / 2, (t3.ctrlpts[n2 + 1] + t3.ctrlpts[n2 + 3]) / 2);
    var r2;
    t3.allpts.push(t3.endX, t3.endY), t3.ctrlpts.length / 2 % 2 == 0 ? (r2 = t3.allpts.length / 2 - 1, t3.midX = t3.allpts[r2], t3.midY = t3.allpts[r2 + 1]) : (r2 = t3.allpts.length / 2 - 3, 0.5, t3.midX = Ct(t3.allpts[r2], t3.allpts[r2 + 2], t3.allpts[r2 + 4], 0.5), t3.midY = Ct(t3.allpts[r2 + 1], t3.allpts[r2 + 3], t3.allpts[r2 + 5], 0.5));
  } else if ("straight" === t3.edgeType)
    t3.allpts = [t3.startX, t3.startY, t3.endX, t3.endY], t3.midX = (t3.startX + t3.endX + t3.arrowStartX + t3.arrowEndX) / 4, t3.midY = (t3.startY + t3.endY + t3.arrowStartY + t3.arrowEndY) / 4;
  else if ("segments" === t3.edgeType)
    if (t3.allpts = [], t3.allpts.push(t3.startX, t3.startY), t3.allpts.push.apply(t3.allpts, t3.segpts), t3.allpts.push(t3.endX, t3.endY), t3.segpts.length % 4 == 0) {
      var i2 = t3.segpts.length / 2, a2 = i2 - 2;
      t3.midX = (t3.segpts[a2] + t3.segpts[i2]) / 2, t3.midY = (t3.segpts[a2 + 1] + t3.segpts[i2 + 1]) / 2;
    } else {
      var o2 = t3.segpts.length / 2 - 1;
      t3.midX = t3.segpts[o2], t3.midY = t3.segpts[o2 + 1];
    }
}, Sl.checkForInvalidEdgeWarning = function(e9) {
  var t3 = e9[0]._private.rscratch;
  t3.nodesOverlap || m(t3.startX) && m(t3.startY) && m(t3.endX) && m(t3.endY) ? t3.loggedErr = false : t3.loggedErr || (t3.loggedErr = true, Ve("Edge `" + e9.id() + "` has invalid endpoints and so it is impossible to draw.  Adjust your edge style (e.g. control points) accordingly or use an alternative edge type.  This is expected behaviour when the source node and the target node overlap."));
}, Sl.findEdgeControlPoints = function(e9) {
  var t3 = this;
  if (e9 && 0 !== e9.length) {
    for (var n2 = this, r2 = n2.cy.hasCompoundNodes(), i2 = { map: new Ue(), get: function(e10) {
      var t4 = this.map.get(e10[0]);
      return null != t4 ? t4.get(e10[1]) : null;
    }, set: function(e10, t4) {
      var n3 = this.map.get(e10[0]);
      null == n3 && (n3 = new Ue(), this.map.set(e10[0], n3)), n3.set(e10[1], t4);
    } }, a2 = [], o2 = [], s2 = 0; s2 < e9.length; s2++) {
      var l2 = e9[s2], u2 = l2._private, c2 = l2.pstyle("curve-style").value;
      if (!l2.removed() && l2.takesUpSpace())
        if ("haystack" !== c2) {
          var d2 = "unbundled-bezier" === c2 || "segments" === c2 || "straight" === c2 || "straight-triangle" === c2 || "taxi" === c2, h2 = "unbundled-bezier" === c2 || "bezier" === c2, p2 = u2.source, f2 = u2.target, g2 = [p2.poolIndex(), f2.poolIndex()].sort(), v2 = i2.get(g2);
          null == v2 && (v2 = { eles: [] }, i2.set(g2, v2), a2.push(g2)), v2.eles.push(l2), d2 && (v2.hasUnbundled = true), h2 && (v2.hasBezier = true);
        } else
          o2.push(l2);
    }
    for (var y2 = function(e10) {
      var o3 = a2[e10], s3 = i2.get(o3), l3 = void 0;
      if (!s3.hasUnbundled) {
        var u3 = s3.eles[0].parallelEdges().filter(function(e11) {
          return e11.isBundledBezier();
        });
        He(s3.eles), u3.forEach(function(e11) {
          return s3.eles.push(e11);
        }), s3.eles.sort(function(e11, t4) {
          return e11.poolIndex() - t4.poolIndex();
        });
      }
      var c3 = s3.eles[0], d3 = c3.source(), h3 = c3.target();
      if (d3.poolIndex() > h3.poolIndex()) {
        var p3 = d3;
        d3 = h3, h3 = p3;
      }
      var f3 = s3.srcPos = d3.position(), g3 = s3.tgtPos = h3.position(), v3 = s3.srcW = d3.outerWidth(), y3 = s3.srcH = d3.outerHeight(), b3 = s3.tgtW = h3.outerWidth(), x2 = s3.tgtH = h3.outerHeight(), w2 = s3.srcShape = n2.nodeShapes[t3.getNodeShape(d3)], E2 = s3.tgtShape = n2.nodeShapes[t3.getNodeShape(h3)];
      s3.dirCounts = { north: 0, west: 0, south: 0, east: 0, northwest: 0, southwest: 0, northeast: 0, southeast: 0 };
      for (var k2 = 0; k2 < s3.eles.length; k2++) {
        var C2 = s3.eles[k2], S2 = C2[0]._private.rscratch, P2 = C2.pstyle("curve-style").value, D2 = "unbundled-bezier" === P2 || "segments" === P2 || "taxi" === P2, T2 = !d3.same(C2.source());
        if (!s3.calculatedIntersection && d3 !== h3 && (s3.hasBezier || s3.hasUnbundled)) {
          s3.calculatedIntersection = true;
          var _2 = w2.intersectLine(f3.x, f3.y, v3, y3, g3.x, g3.y, 0), M2 = s3.srcIntn = _2, B2 = E2.intersectLine(g3.x, g3.y, b3, x2, f3.x, f3.y, 0), N2 = s3.tgtIntn = B2, z2 = s3.intersectionPts = { x1: _2[0], x2: B2[0], y1: _2[1], y2: B2[1] }, I2 = s3.posPts = { x1: f3.x, x2: g3.x, y1: f3.y, y2: g3.y }, A2 = B2[1] - _2[1], L2 = B2[0] - _2[0], O2 = Math.sqrt(L2 * L2 + A2 * A2), R2 = s3.vector = { x: L2, y: A2 }, V2 = s3.vectorNorm = { x: R2.x / O2, y: R2.y / O2 }, F2 = { x: -V2.y, y: V2.x };
          s3.nodesOverlap = !m(O2) || E2.checkPoint(_2[0], _2[1], 0, b3, x2, g3.x, g3.y) || w2.checkPoint(B2[0], B2[1], 0, v3, y3, f3.x, f3.y), s3.vectorNormInverse = F2, l3 = { nodesOverlap: s3.nodesOverlap, dirCounts: s3.dirCounts, calculatedIntersection: true, hasBezier: s3.hasBezier, hasUnbundled: s3.hasUnbundled, eles: s3.eles, srcPos: g3, tgtPos: f3, srcW: b3, srcH: x2, tgtW: v3, tgtH: y3, srcIntn: N2, tgtIntn: M2, srcShape: E2, tgtShape: w2, posPts: { x1: I2.x2, y1: I2.y2, x2: I2.x1, y2: I2.y1 }, intersectionPts: { x1: z2.x2, y1: z2.y2, x2: z2.x1, y2: z2.y1 }, vector: { x: -R2.x, y: -R2.y }, vectorNorm: { x: -V2.x, y: -V2.y }, vectorNormInverse: { x: -F2.x, y: -F2.y } };
        }
        var j2 = T2 ? l3 : s3;
        S2.nodesOverlap = j2.nodesOverlap, S2.srcIntn = j2.srcIntn, S2.tgtIntn = j2.tgtIntn, r2 && (d3.isParent() || d3.isChild() || h3.isParent() || h3.isChild()) && (d3.parents().anySame(h3) || h3.parents().anySame(d3) || d3.same(h3) && d3.isParent()) ? t3.findCompoundLoopPoints(C2, j2, k2, D2) : d3 === h3 ? t3.findLoopPoints(C2, j2, k2, D2) : "segments" === P2 ? t3.findSegmentsPoints(C2, j2) : "taxi" === P2 ? t3.findTaxiPoints(C2, j2) : "straight" === P2 || !D2 && s3.eles.length % 2 == 1 && k2 === Math.floor(s3.eles.length / 2) ? t3.findStraightEdgePoints(C2) : t3.findBezierPoints(C2, j2, k2, D2, T2), t3.findEndpoints(C2), t3.tryToCorrectInvalidPoints(C2, j2), t3.checkForInvalidEdgeWarning(C2), t3.storeAllpts(C2), t3.storeEdgeProjections(C2), t3.calculateArrowAngles(C2), t3.recalculateEdgeLabelProjections(C2), t3.calculateLabelAngles(C2);
      }
    }, b2 = 0; b2 < a2.length; b2++)
      y2(b2);
    this.findHaystackPoints(o2);
  }
}, Sl.getSegmentPoints = function(e9) {
  var t3 = e9[0]._private.rscratch;
  if ("segments" === t3.edgeType)
    return this.recalculateRenderedStyle(e9), Pl(t3.segpts);
}, Sl.getControlPoints = function(e9) {
  var t3 = e9[0]._private.rscratch, n2 = t3.edgeType;
  if ("bezier" === n2 || "multibezier" === n2 || "self" === n2 || "compound" === n2)
    return this.recalculateRenderedStyle(e9), Pl(t3.ctrlpts);
}, Sl.getEdgeMidpoint = function(e9) {
  var t3 = e9[0]._private.rscratch;
  return this.recalculateRenderedStyle(e9), { x: t3.midX, y: t3.midY };
};
var Dl = { manualEndptToPx: function(e9, t3) {
  var n2 = e9.position(), r2 = e9.outerWidth(), i2 = e9.outerHeight();
  if (2 === t3.value.length) {
    var a2 = [t3.pfValue[0], t3.pfValue[1]];
    return "%" === t3.units[0] && (a2[0] = a2[0] * r2), "%" === t3.units[1] && (a2[1] = a2[1] * i2), a2[0] += n2.x, a2[1] += n2.y, a2;
  }
  var o2 = t3.pfValue[0];
  o2 = -Math.PI / 2 + o2;
  var s2 = 2 * Math.max(r2, i2), l2 = [n2.x + Math.cos(o2) * s2, n2.y + Math.sin(o2) * s2];
  return this.nodeShapes[this.getNodeShape(e9)].intersectLine(n2.x, n2.y, r2, i2, l2[0], l2[1], 0);
}, findEndpoints: function(e9) {
  var t3, n2, r2, i2, a2, o2 = this, s2 = e9.source()[0], l2 = e9.target()[0], u2 = s2.position(), c2 = l2.position(), d2 = e9.pstyle("target-arrow-shape").value, h2 = e9.pstyle("source-arrow-shape").value, p2 = e9.pstyle("target-distance-from-node").pfValue, f2 = e9.pstyle("source-distance-from-node").pfValue, g2 = e9.pstyle("curve-style").value, v2 = e9._private.rscratch, y2 = v2.edgeType, b2 = "self" === y2 || "compound" === y2, x2 = "bezier" === y2 || "multibezier" === y2 || b2, w2 = "bezier" !== y2, E2 = "straight" === y2 || "segments" === y2, k2 = "segments" === y2, C2 = x2 || w2 || E2, S2 = b2 || "taxi" === g2, P2 = e9.pstyle("source-endpoint"), D2 = S2 ? "outside-to-node" : P2.value, T2 = e9.pstyle("target-endpoint"), _2 = S2 ? "outside-to-node" : T2.value;
  if (v2.srcManEndpt = P2, v2.tgtManEndpt = T2, x2) {
    var M2 = [v2.ctrlpts[0], v2.ctrlpts[1]];
    n2 = w2 ? [v2.ctrlpts[v2.ctrlpts.length - 2], v2.ctrlpts[v2.ctrlpts.length - 1]] : M2, r2 = M2;
  } else if (E2) {
    var B2 = k2 ? v2.segpts.slice(0, 2) : [c2.x, c2.y];
    n2 = k2 ? v2.segpts.slice(v2.segpts.length - 2) : [u2.x, u2.y], r2 = B2;
  }
  if ("inside-to-node" === _2)
    t3 = [c2.x, c2.y];
  else if (T2.units)
    t3 = this.manualEndptToPx(l2, T2);
  else if ("outside-to-line" === _2)
    t3 = v2.tgtIntn;
  else if ("outside-to-node" === _2 || "outside-to-node-or-label" === _2 ? i2 = n2 : "outside-to-line" !== _2 && "outside-to-line-or-label" !== _2 || (i2 = [u2.x, u2.y]), t3 = o2.nodeShapes[this.getNodeShape(l2)].intersectLine(c2.x, c2.y, l2.outerWidth(), l2.outerHeight(), i2[0], i2[1], 0), "outside-to-node-or-label" === _2 || "outside-to-line-or-label" === _2) {
    var N2 = l2._private.rscratch, z2 = N2.labelWidth, I2 = N2.labelHeight, A2 = N2.labelX, L2 = N2.labelY, O2 = z2 / 2, R2 = I2 / 2, V2 = l2.pstyle("text-valign").value;
    "top" === V2 ? L2 -= R2 : "bottom" === V2 && (L2 += R2);
    var F2 = l2.pstyle("text-halign").value;
    "left" === F2 ? A2 -= O2 : "right" === F2 && (A2 += O2);
    var j2 = Gt(i2[0], i2[1], [A2 - O2, L2 - R2, A2 + O2, L2 - R2, A2 + O2, L2 + R2, A2 - O2, L2 + R2], c2.x, c2.y);
    if (j2.length > 0) {
      var q2 = u2, Y2 = Et(q2, yt(t3)), X2 = Et(q2, yt(j2)), W2 = Y2;
      if (X2 < Y2 && (t3 = j2, W2 = X2), j2.length > 2)
        Et(q2, { x: j2[2], y: j2[3] }) < W2 && (t3 = [j2[2], j2[3]]);
    }
  }
  var H2 = Ut(t3, n2, o2.arrowShapes[d2].spacing(e9) + p2), K2 = Ut(t3, n2, o2.arrowShapes[d2].gap(e9) + p2);
  if (v2.endX = K2[0], v2.endY = K2[1], v2.arrowEndX = H2[0], v2.arrowEndY = H2[1], "inside-to-node" === D2)
    t3 = [u2.x, u2.y];
  else if (P2.units)
    t3 = this.manualEndptToPx(s2, P2);
  else if ("outside-to-line" === D2)
    t3 = v2.srcIntn;
  else if ("outside-to-node" === D2 || "outside-to-node-or-label" === D2 ? a2 = r2 : "outside-to-line" !== D2 && "outside-to-line-or-label" !== D2 || (a2 = [c2.x, c2.y]), t3 = o2.nodeShapes[this.getNodeShape(s2)].intersectLine(u2.x, u2.y, s2.outerWidth(), s2.outerHeight(), a2[0], a2[1], 0), "outside-to-node-or-label" === D2 || "outside-to-line-or-label" === D2) {
    var G2 = s2._private.rscratch, U2 = G2.labelWidth, Z2 = G2.labelHeight, $2 = G2.labelX, Q2 = G2.labelY, J2 = U2 / 2, ee2 = Z2 / 2, te2 = s2.pstyle("text-valign").value;
    "top" === te2 ? Q2 -= ee2 : "bottom" === te2 && (Q2 += ee2);
    var ne2 = s2.pstyle("text-halign").value;
    "left" === ne2 ? $2 -= J2 : "right" === ne2 && ($2 += J2);
    var re2 = Gt(a2[0], a2[1], [$2 - J2, Q2 - ee2, $2 + J2, Q2 - ee2, $2 + J2, Q2 + ee2, $2 - J2, Q2 + ee2], u2.x, u2.y);
    if (re2.length > 0) {
      var ie2 = c2, ae2 = Et(ie2, yt(t3)), oe2 = Et(ie2, yt(re2)), se2 = ae2;
      if (oe2 < ae2 && (t3 = [re2[0], re2[1]], se2 = oe2), re2.length > 2)
        Et(ie2, { x: re2[2], y: re2[3] }) < se2 && (t3 = [re2[2], re2[3]]);
    }
  }
  var le2 = Ut(t3, r2, o2.arrowShapes[h2].spacing(e9) + f2), ue2 = Ut(t3, r2, o2.arrowShapes[h2].gap(e9) + f2);
  v2.startX = ue2[0], v2.startY = ue2[1], v2.arrowStartX = le2[0], v2.arrowStartY = le2[1], C2 && (m(v2.startX) && m(v2.startY) && m(v2.endX) && m(v2.endY) ? v2.badLine = false : v2.badLine = true);
}, getSourceEndpoint: function(e9) {
  var t3 = e9[0]._private.rscratch;
  switch (this.recalculateRenderedStyle(e9), t3.edgeType) {
    case "haystack":
      return { x: t3.haystackPts[0], y: t3.haystackPts[1] };
    default:
      return { x: t3.arrowStartX, y: t3.arrowStartY };
  }
}, getTargetEndpoint: function(e9) {
  var t3 = e9[0]._private.rscratch;
  switch (this.recalculateRenderedStyle(e9), t3.edgeType) {
    case "haystack":
      return { x: t3.haystackPts[2], y: t3.haystackPts[3] };
    default:
      return { x: t3.arrowEndX, y: t3.arrowEndY };
  }
} };
var Tl = {};
function _l(e9, t3, n2) {
  for (var r2 = function(e10, t4, n3, r3) {
    return Ct(e10, t4, n3, r3);
  }, i2 = t3._private.rstyle.bezierPts, a2 = 0; a2 < e9.bezierProjPcts.length; a2++) {
    var o2 = e9.bezierProjPcts[a2];
    i2.push({ x: r2(n2[0], n2[2], n2[4], o2), y: r2(n2[1], n2[3], n2[5], o2) });
  }
}
Tl.storeEdgeProjections = function(e9) {
  var t3 = e9._private, n2 = t3.rscratch, r2 = n2.edgeType;
  if (t3.rstyle.bezierPts = null, t3.rstyle.linePts = null, t3.rstyle.haystackPts = null, "multibezier" === r2 || "bezier" === r2 || "self" === r2 || "compound" === r2) {
    t3.rstyle.bezierPts = [];
    for (var i2 = 0; i2 + 5 < n2.allpts.length; i2 += 4)
      _l(this, e9, n2.allpts.slice(i2, i2 + 6));
  } else if ("segments" === r2) {
    var a2 = t3.rstyle.linePts = [];
    for (i2 = 0; i2 + 1 < n2.allpts.length; i2 += 2)
      a2.push({ x: n2.allpts[i2], y: n2.allpts[i2 + 1] });
  } else if ("haystack" === r2) {
    var o2 = n2.haystackPts;
    t3.rstyle.haystackPts = [{ x: o2[0], y: o2[1] }, { x: o2[2], y: o2[3] }];
  }
  t3.rstyle.arrowWidth = this.getArrowWidth(e9.pstyle("width").pfValue, e9.pstyle("arrow-scale").value) * this.arrowShapeWidth;
}, Tl.recalculateEdgeProjections = function(e9) {
  this.findEdgeControlPoints(e9);
};
var Ml = { recalculateNodeLabelProjection: function(e9) {
  var t3 = e9.pstyle("label").strValue;
  if (!S(t3)) {
    var n2, r2, i2 = e9._private, a2 = e9.width(), o2 = e9.height(), s2 = e9.padding(), l2 = e9.position(), u2 = e9.pstyle("text-halign").strValue, c2 = e9.pstyle("text-valign").strValue, d2 = i2.rscratch, h2 = i2.rstyle;
    switch (u2) {
      case "left":
        n2 = l2.x - a2 / 2 - s2;
        break;
      case "right":
        n2 = l2.x + a2 / 2 + s2;
        break;
      default:
        n2 = l2.x;
    }
    switch (c2) {
      case "top":
        r2 = l2.y - o2 / 2 - s2;
        break;
      case "bottom":
        r2 = l2.y + o2 / 2 + s2;
        break;
      default:
        r2 = l2.y;
    }
    d2.labelX = n2, d2.labelY = r2, h2.labelX = n2, h2.labelY = r2, this.calculateLabelAngles(e9), this.applyLabelDimensions(e9);
  }
} };
var Bl = function(e9, t3) {
  var n2 = Math.atan(t3 / e9);
  return 0 === e9 && n2 < 0 && (n2 *= -1), n2;
};
var Nl = function(e9, t3) {
  var n2 = t3.x - e9.x, r2 = t3.y - e9.y;
  return Bl(n2, r2);
};
Ml.recalculateEdgeLabelProjections = function(e9) {
  var t3, n2 = e9._private, r2 = n2.rscratch, i2 = this, a2 = { mid: e9.pstyle("label").strValue, source: e9.pstyle("source-label").strValue, target: e9.pstyle("target-label").strValue };
  if (a2.mid || a2.source || a2.target) {
    t3 = { x: r2.midX, y: r2.midY };
    var o2 = function(e10, t4, r3) {
      Ge(n2.rscratch, e10, t4, r3), Ge(n2.rstyle, e10, t4, r3);
    };
    o2("labelX", null, t3.x), o2("labelY", null, t3.y);
    var s2 = Bl(r2.midDispX, r2.midDispY);
    o2("labelAutoAngle", null, s2);
    var l2 = function(s3) {
      var l3, u2 = "source" === s3;
      if (a2[s3]) {
        var c2 = e9.pstyle(s3 + "-text-offset").pfValue;
        switch (r2.edgeType) {
          case "self":
          case "compound":
          case "bezier":
          case "multibezier":
            for (var d2, h2 = function e10() {
              if (e10.cache)
                return e10.cache;
              for (var t4 = [], a3 = 0; a3 + 5 < r2.allpts.length; a3 += 4) {
                var o3 = { x: r2.allpts[a3], y: r2.allpts[a3 + 1] }, s4 = { x: r2.allpts[a3 + 2], y: r2.allpts[a3 + 3] }, l4 = { x: r2.allpts[a3 + 4], y: r2.allpts[a3 + 5] };
                t4.push({ p0: o3, p1: s4, p2: l4, startDist: 0, length: 0, segments: [] });
              }
              var u3 = n2.rstyle.bezierPts, c3 = i2.bezierProjPcts.length;
              function d3(e11, t5, n3, r3, i3) {
                var a4 = wt(t5, n3), o4 = e11.segments[e11.segments.length - 1], s5 = { p0: t5, p1: n3, t0: r3, t1: i3, startDist: o4 ? o4.startDist + o4.length : 0, length: a4 };
                e11.segments.push(s5), e11.length += a4;
              }
              for (var h3 = 0; h3 < t4.length; h3++) {
                var p3 = t4[h3], f3 = t4[h3 - 1];
                f3 && (p3.startDist = f3.startDist + f3.length), d3(p3, p3.p0, u3[h3 * c3], 0, i2.bezierProjPcts[0]);
                for (var g3 = 0; g3 < c3 - 1; g3++)
                  d3(p3, u3[h3 * c3 + g3], u3[h3 * c3 + g3 + 1], i2.bezierProjPcts[g3], i2.bezierProjPcts[g3 + 1]);
                d3(p3, u3[h3 * c3 + c3 - 1], p3.p2, i2.bezierProjPcts[c3 - 1], 1);
              }
              return e10.cache = t4;
            }(), p2 = 0, f2 = 0, g2 = 0; g2 < h2.length; g2++) {
              for (var v2 = h2[u2 ? g2 : h2.length - 1 - g2], y2 = 0; y2 < v2.segments.length; y2++) {
                var m2 = v2.segments[u2 ? y2 : v2.segments.length - 1 - y2], b2 = g2 === h2.length - 1 && y2 === v2.segments.length - 1;
                if (p2 = f2, (f2 += m2.length) >= c2 || b2) {
                  d2 = { cp: v2, segment: m2 };
                  break;
                }
              }
              if (d2)
                break;
            }
            var x2 = d2.cp, w2 = d2.segment, E2 = (c2 - p2) / w2.length, k2 = w2.t1 - w2.t0, C2 = u2 ? w2.t0 + k2 * E2 : w2.t1 - k2 * E2;
            C2 = Pt(0, C2, 1), t3 = St(x2.p0, x2.p1, x2.p2, C2), l3 = function(e10, t4, n3, r3) {
              var i3 = Pt(0, r3 - 1e-3, 1), a3 = Pt(0, r3 + 1e-3, 1), o3 = St(e10, t4, n3, i3), s4 = St(e10, t4, n3, a3);
              return Nl(o3, s4);
            }(x2.p0, x2.p1, x2.p2, C2);
            break;
          case "straight":
          case "segments":
          case "haystack":
            for (var S2, P2, D2, T2, _2 = 0, M2 = r2.allpts.length, B2 = 0; B2 + 3 < M2 && (u2 ? (D2 = { x: r2.allpts[B2], y: r2.allpts[B2 + 1] }, T2 = { x: r2.allpts[B2 + 2], y: r2.allpts[B2 + 3] }) : (D2 = { x: r2.allpts[M2 - 2 - B2], y: r2.allpts[M2 - 1 - B2] }, T2 = { x: r2.allpts[M2 - 4 - B2], y: r2.allpts[M2 - 3 - B2] }), P2 = _2, !((_2 += S2 = wt(D2, T2)) >= c2)); B2 += 2)
              ;
            var N2 = (c2 - P2) / S2;
            N2 = Pt(0, N2, 1), t3 = function(e10, t4, n3, r3) {
              var i3 = t4.x - e10.x, a3 = t4.y - e10.y, o3 = wt(e10, t4), s4 = i3 / o3, l4 = a3 / o3;
              return n3 = null == n3 ? 0 : n3, r3 = null != r3 ? r3 : n3 * o3, { x: e10.x + s4 * r3, y: e10.y + l4 * r3 };
            }(D2, T2, N2), l3 = Nl(D2, T2);
        }
        o2("labelX", s3, t3.x), o2("labelY", s3, t3.y), o2("labelAutoAngle", s3, l3);
      }
    };
    l2("source"), l2("target"), this.applyLabelDimensions(e9);
  }
}, Ml.applyLabelDimensions = function(e9) {
  this.applyPrefixedLabelDimensions(e9), e9.isEdge() && (this.applyPrefixedLabelDimensions(e9, "source"), this.applyPrefixedLabelDimensions(e9, "target"));
}, Ml.applyPrefixedLabelDimensions = function(e9, t3) {
  var n2 = e9._private, r2 = this.getLabelText(e9, t3), i2 = this.calculateLabelDimensions(e9, r2), a2 = e9.pstyle("line-height").pfValue, o2 = e9.pstyle("text-wrap").strValue, s2 = Ke(n2.rscratch, "labelWrapCachedLines", t3) || [], l2 = "wrap" !== o2 ? 1 : Math.max(s2.length, 1), u2 = i2.height / l2, c2 = u2 * a2, d2 = i2.width, h2 = i2.height + (l2 - 1) * (a2 - 1) * u2;
  Ge(n2.rstyle, "labelWidth", t3, d2), Ge(n2.rscratch, "labelWidth", t3, d2), Ge(n2.rstyle, "labelHeight", t3, h2), Ge(n2.rscratch, "labelHeight", t3, h2), Ge(n2.rscratch, "labelLineHeight", t3, c2);
}, Ml.getLabelText = function(e9, t3) {
  var n2 = e9._private, r2 = t3 ? t3 + "-" : "", i2 = e9.pstyle(r2 + "label").strValue, a2 = e9.pstyle("text-transform").value, o2 = function(e10, r3) {
    return r3 ? (Ge(n2.rscratch, e10, t3, r3), r3) : Ke(n2.rscratch, e10, t3);
  };
  if (!i2)
    return "";
  "none" == a2 || ("uppercase" == a2 ? i2 = i2.toUpperCase() : "lowercase" == a2 && (i2 = i2.toLowerCase()));
  var s2 = e9.pstyle("text-wrap").value;
  if ("wrap" === s2) {
    var l2 = o2("labelKey");
    if (null != l2 && o2("labelWrapKey") === l2)
      return o2("labelWrapCachedText");
    for (var u2 = i2.split("\n"), c2 = e9.pstyle("text-max-width").pfValue, d2 = "anywhere" === e9.pstyle("text-overflow-wrap").value, h2 = [], p2 = /[\s\u200b]+/, f2 = d2 ? "" : " ", g2 = 0; g2 < u2.length; g2++) {
      var v2 = u2[g2], y2 = this.calculateLabelDimensions(e9, v2).width;
      if (d2) {
        var m2 = v2.split("").join("\u200B");
        v2 = m2;
      }
      if (y2 > c2) {
        for (var b2 = v2.split(p2), x2 = "", w2 = 0; w2 < b2.length; w2++) {
          var E2 = b2[w2], k2 = 0 === x2.length ? E2 : x2 + f2 + E2;
          this.calculateLabelDimensions(e9, k2).width <= c2 ? x2 += E2 + f2 : (x2 && h2.push(x2), x2 = E2 + f2);
        }
        x2.match(/^[\s\u200b]+$/) || h2.push(x2);
      } else
        h2.push(v2);
    }
    o2("labelWrapCachedLines", h2), i2 = o2("labelWrapCachedText", h2.join("\n")), o2("labelWrapKey", l2);
  } else if ("ellipsis" === s2) {
    var C2 = e9.pstyle("text-max-width").pfValue, S2 = "", P2 = false;
    if (this.calculateLabelDimensions(e9, i2).width < C2)
      return i2;
    for (var D2 = 0; D2 < i2.length; D2++) {
      if (this.calculateLabelDimensions(e9, S2 + i2[D2] + "\u2026").width > C2)
        break;
      S2 += i2[D2], D2 === i2.length - 1 && (P2 = true);
    }
    return P2 || (S2 += "\u2026"), S2;
  }
  return i2;
}, Ml.getLabelJustification = function(e9) {
  var t3 = e9.pstyle("text-justification").strValue, n2 = e9.pstyle("text-halign").strValue;
  if ("auto" !== t3)
    return t3;
  if (!e9.isNode())
    return "center";
  switch (n2) {
    case "left":
      return "right";
    case "right":
      return "left";
    default:
      return "center";
  }
}, Ml.calculateLabelDimensions = function(e9, t3) {
  var n2 = Pe(t3, e9._private.labelDimsKey), r2 = this.labelDimCache || (this.labelDimCache = []), i2 = r2[n2];
  if (null != i2)
    return i2;
  var a2 = e9.pstyle("font-style").strValue, o2 = e9.pstyle("font-size").pfValue, s2 = e9.pstyle("font-family").strValue, l2 = e9.pstyle("font-weight").strValue, u2 = this.labelCalcCanvas, c2 = this.labelCalcCanvasContext;
  if (!u2) {
    u2 = this.labelCalcCanvas = document.createElement("canvas"), c2 = this.labelCalcCanvasContext = u2.getContext("2d");
    var d2 = u2.style;
    d2.position = "absolute", d2.left = "-9999px", d2.top = "-9999px", d2.zIndex = "-1", d2.visibility = "hidden", d2.pointerEvents = "none";
  }
  c2.font = "".concat(a2, " ").concat(l2, " ").concat(o2, "px ").concat(s2);
  for (var h2 = 0, p2 = 0, f2 = t3.split("\n"), g2 = 0; g2 < f2.length; g2++) {
    var v2 = f2[g2], y2 = c2.measureText(v2), m2 = Math.ceil(y2.width), b2 = o2;
    h2 = Math.max(m2, h2), p2 += b2;
  }
  return h2 += 0, p2 += 0, r2[n2] = { width: h2, height: p2 };
}, Ml.calculateLabelAngle = function(e9, t3) {
  var n2 = e9._private.rscratch, r2 = e9.isEdge(), i2 = t3 ? t3 + "-" : "", a2 = e9.pstyle(i2 + "text-rotation"), o2 = a2.strValue;
  return "none" === o2 ? 0 : r2 && "autorotate" === o2 ? n2.labelAutoAngle : "autorotate" === o2 ? 0 : a2.pfValue;
}, Ml.calculateLabelAngles = function(e9) {
  var t3 = this, n2 = e9.isEdge(), r2 = e9._private.rscratch;
  r2.labelAngle = t3.calculateLabelAngle(e9), n2 && (r2.sourceLabelAngle = t3.calculateLabelAngle(e9, "source"), r2.targetLabelAngle = t3.calculateLabelAngle(e9, "target"));
};
var zl = {};
var Il = false;
zl.getNodeShape = function(e9) {
  var t3 = e9.pstyle("shape").value;
  if ("cutrectangle" === t3 && (e9.width() < 28 || e9.height() < 28))
    return Il || (Ve("The `cutrectangle` node shape can not be used at small sizes so `rectangle` is used instead"), Il = true), "rectangle";
  if (e9.isParent())
    return "rectangle" === t3 || "roundrectangle" === t3 || "round-rectangle" === t3 || "cutrectangle" === t3 || "cut-rectangle" === t3 || "barrel" === t3 ? t3 : "rectangle";
  if ("polygon" === t3) {
    var n2 = e9.pstyle("shape-polygon-points").value;
    return this.nodeShapes.makePolygon(n2).name;
  }
  return t3;
};
var Al = { registerCalculationListeners: function() {
  var e9 = this.cy, t3 = e9.collection(), n2 = this, r2 = function(e10) {
    var n3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1];
    if (t3.merge(e10), n3)
      for (var r3 = 0; r3 < e10.length; r3++) {
        var i3 = e10[r3], a2 = i3._private, o2 = a2.rstyle;
        o2.clean = false, o2.cleanConnected = false;
      }
  };
  n2.binder(e9).on("bounds.* dirty.*", function(e10) {
    var t4 = e10.target;
    r2(t4);
  }).on("style.* background.*", function(e10) {
    var t4 = e10.target;
    r2(t4, false);
  });
  var i2 = function(i3) {
    if (i3) {
      var a2 = n2.onUpdateEleCalcsFns;
      t3.cleanStyle();
      for (var o2 = 0; o2 < t3.length; o2++) {
        var s2 = t3[o2], l2 = s2._private.rstyle;
        s2.isNode() && !l2.cleanConnected && (r2(s2.connectedEdges()), l2.cleanConnected = true);
      }
      if (a2)
        for (var u2 = 0; u2 < a2.length; u2++) {
          (0, a2[u2])(i3, t3);
        }
      n2.recalculateRenderedStyle(t3), t3 = e9.collection();
    }
  };
  n2.flushRenderedStyleQueue = function() {
    i2(true);
  }, n2.beforeRender(i2, n2.beforeRenderPriorities.eleCalcs);
}, onUpdateEleCalcs: function(e9) {
  (this.onUpdateEleCalcsFns = this.onUpdateEleCalcsFns || []).push(e9);
}, recalculateRenderedStyle: function(e9, t3) {
  var n2 = function(e10) {
    return e10._private.rstyle.cleanConnected;
  }, r2 = [], i2 = [];
  if (!this.destroyed) {
    void 0 === t3 && (t3 = true);
    for (var a2 = 0; a2 < e9.length; a2++) {
      var o2 = e9[a2], s2 = o2._private, l2 = s2.rstyle;
      !o2.isEdge() || n2(o2.source()) && n2(o2.target()) || (l2.clean = false), t3 && l2.clean || o2.removed() || "none" !== o2.pstyle("display").value && ("nodes" === s2.group ? i2.push(o2) : r2.push(o2), l2.clean = true);
    }
    for (var u2 = 0; u2 < i2.length; u2++) {
      var c2 = i2[u2], d2 = c2._private.rstyle, h2 = c2.position();
      this.recalculateNodeLabelProjection(c2), d2.nodeX = h2.x, d2.nodeY = h2.y, d2.nodeW = c2.pstyle("width").pfValue, d2.nodeH = c2.pstyle("height").pfValue;
    }
    this.recalculateEdgeProjections(r2);
    for (var p2 = 0; p2 < r2.length; p2++) {
      var f2 = r2[p2]._private, g2 = f2.rstyle, v2 = f2.rscratch;
      g2.srcX = v2.arrowStartX, g2.srcY = v2.arrowStartY, g2.tgtX = v2.arrowEndX, g2.tgtY = v2.arrowEndY, g2.midX = v2.midX, g2.midY = v2.midY, g2.labelAngle = v2.labelAngle, g2.sourceLabelAngle = v2.sourceLabelAngle, g2.targetLabelAngle = v2.targetLabelAngle;
    }
  }
} };
var Ll = { updateCachedGrabbedEles: function() {
  var e9 = this.cachedZSortedEles;
  if (e9) {
    e9.drag = [], e9.nondrag = [];
    for (var t3 = [], n2 = 0; n2 < e9.length; n2++) {
      var r2 = (i2 = e9[n2])._private.rscratch;
      i2.grabbed() && !i2.isParent() ? t3.push(i2) : r2.inDragLayer ? e9.drag.push(i2) : e9.nondrag.push(i2);
    }
    for (n2 = 0; n2 < t3.length; n2++) {
      var i2 = t3[n2];
      e9.drag.push(i2);
    }
  }
}, invalidateCachedZSortedEles: function() {
  this.cachedZSortedEles = null;
}, getCachedZSortedEles: function(e9) {
  if (e9 || !this.cachedZSortedEles) {
    var t3 = this.cy.mutableElements().toArray();
    t3.sort(So), t3.interactive = t3.filter(function(e10) {
      return e10.interactive();
    }), this.cachedZSortedEles = t3, this.updateCachedGrabbedEles();
  } else
    t3 = this.cachedZSortedEles;
  return t3;
} };
var Ol = {};
[kl, Cl, Sl, Dl, Tl, Ml, zl, Al, Ll].forEach(function(e9) {
  I(Ol, e9);
});
var Rl = { getCachedImage: function(e9, t3, n2) {
  var r2 = this.imageCache = this.imageCache || {}, i2 = r2[e9];
  if (i2)
    return i2.image.complete || i2.image.addEventListener("load", n2), i2.image;
  var a2 = (i2 = r2[e9] = r2[e9] || {}).image = new Image();
  a2.addEventListener("load", n2), a2.addEventListener("error", function() {
    a2.error = true;
  });
  return "data:" === e9.substring(0, "data:".length).toLowerCase() || (a2.crossOrigin = t3), a2.src = e9, a2;
} };
var Vl = { registerBinding: function(e9, t3, n2, r2) {
  var i2 = Array.prototype.slice.apply(arguments, [1]), a2 = this.binder(e9);
  return a2.on.apply(a2, i2);
} };
Vl.binder = function(e9) {
  var t3, n2 = this, r2 = e9 === window || e9 === document || e9 === document.body || (t3 = e9, "undefined" != typeof HTMLElement && t3 instanceof HTMLElement);
  if (null == n2.supportsPassiveEvents) {
    var i2 = false;
    try {
      var a2 = Object.defineProperty({}, "passive", { get: function() {
        return i2 = true, true;
      } });
      window.addEventListener("test", null, a2);
    } catch (e10) {
    }
    n2.supportsPassiveEvents = i2;
  }
  var o2 = function(t4, i3, a3) {
    var o3 = Array.prototype.slice.call(arguments);
    return r2 && n2.supportsPassiveEvents && (o3[2] = { capture: null != a3 && a3, passive: false, once: false }), n2.bindings.push({ target: e9, args: o3 }), (e9.addEventListener || e9.on).apply(e9, o3), this;
  };
  return { on: o2, addEventListener: o2, addListener: o2, bind: o2 };
}, Vl.nodeIsDraggable = function(e9) {
  return e9 && e9.isNode() && !e9.locked() && e9.grabbable();
}, Vl.nodeIsGrabbable = function(e9) {
  return this.nodeIsDraggable(e9) && e9.interactive();
}, Vl.load = function() {
  var e9 = this, t3 = function(e10) {
    return e10.selected();
  }, n2 = function(t4, n3, r3, i3) {
    null == t4 && (t4 = e9.cy);
    for (var a3 = 0; a3 < n3.length; a3++) {
      var o3 = n3[a3];
      t4.emit({ originalEvent: r3, type: o3, position: i3 });
    }
  }, r2 = function(e10) {
    return e10.shiftKey || e10.metaKey || e10.ctrlKey;
  }, i2 = function(t4, n3) {
    var r3 = true;
    if (e9.cy.hasCompoundNodes() && t4 && t4.pannable())
      for (var i3 = 0; n3 && i3 < n3.length; i3++) {
        if ((t4 = n3[i3]).isNode() && t4.isParent() && !t4.pannable()) {
          r3 = false;
          break;
        }
      }
    else
      r3 = true;
    return r3;
  }, a2 = function(e10) {
    e10[0]._private.rscratch.inDragLayer = true;
  }, o2 = function(e10) {
    e10[0]._private.rscratch.isGrabTarget = true;
  }, s2 = function(e10, t4) {
    var n3 = t4.addToList;
    n3.has(e10) || !e10.grabbable() || e10.locked() || (n3.merge(e10), function(e11) {
      e11[0]._private.grabbed = true;
    }(e10));
  }, l2 = function(t4, n3) {
    n3 = n3 || {};
    var r3 = t4.cy().hasCompoundNodes();
    n3.inDragLayer && (t4.forEach(a2), t4.neighborhood().stdFilter(function(e10) {
      return !r3 || e10.isEdge();
    }).forEach(a2)), n3.addToList && t4.forEach(function(e10) {
      s2(e10, n3);
    }), function(e10, t5) {
      if (e10.cy().hasCompoundNodes() && (null != t5.inDragLayer || null != t5.addToList)) {
        var n4 = e10.descendants();
        t5.inDragLayer && (n4.forEach(a2), n4.connectedEdges().forEach(a2)), t5.addToList && s2(n4, t5);
      }
    }(t4, n3), d2(t4, { inDragLayer: n3.inDragLayer }), e9.updateCachedGrabbedEles();
  }, u2 = l2, c2 = function(t4) {
    t4 && (e9.getCachedZSortedEles().forEach(function(e10) {
      !function(e11) {
        e11[0]._private.grabbed = false;
      }(e10), function(e11) {
        e11[0]._private.rscratch.inDragLayer = false;
      }(e10), function(e11) {
        e11[0]._private.rscratch.isGrabTarget = false;
      }(e10);
    }), e9.updateCachedGrabbedEles());
  }, d2 = function(e10, t4) {
    if ((null != t4.inDragLayer || null != t4.addToList) && e10.cy().hasCompoundNodes()) {
      var n3 = e10.ancestors().orphans();
      if (!n3.same(e10)) {
        var r3 = n3.descendants().spawnSelf().merge(n3).unmerge(e10).unmerge(e10.descendants()), i3 = r3.connectedEdges();
        t4.inDragLayer && (i3.forEach(a2), r3.forEach(a2)), t4.addToList && r3.forEach(function(e11) {
          s2(e11, t4);
        });
      }
    }
  }, h2 = function() {
    null != document.activeElement && null != document.activeElement.blur && document.activeElement.blur();
  }, p2 = "undefined" != typeof MutationObserver, f2 = "undefined" != typeof ResizeObserver;
  p2 ? (e9.removeObserver = new MutationObserver(function(t4) {
    for (var n3 = 0; n3 < t4.length; n3++) {
      var r3 = t4[n3].removedNodes;
      if (r3)
        for (var i3 = 0; i3 < r3.length; i3++) {
          if (r3[i3] === e9.container) {
            e9.destroy();
            break;
          }
        }
    }
  }), e9.container.parentNode && e9.removeObserver.observe(e9.container.parentNode, { childList: true })) : e9.registerBinding(e9.container, "DOMNodeRemoved", function(t4) {
    e9.destroy();
  });
  var g2 = fe(function() {
    e9.cy.resize();
  }, 100);
  p2 && (e9.styleObserver = new MutationObserver(g2), e9.styleObserver.observe(e9.container, { attributes: true })), e9.registerBinding(window, "resize", g2), f2 && (e9.resizeObserver = new ResizeObserver(g2), e9.resizeObserver.observe(e9.container));
  var v2 = function() {
    e9.invalidateContainerClientCoordsCache();
  };
  !function(e10, t4) {
    for (; null != e10; )
      t4(e10), e10 = e10.parentNode;
  }(e9.container, function(t4) {
    e9.registerBinding(t4, "transitionend", v2), e9.registerBinding(t4, "animationend", v2), e9.registerBinding(t4, "scroll", v2);
  }), e9.registerBinding(e9.container, "contextmenu", function(e10) {
    e10.preventDefault();
  });
  var y2, b2, x2, w2 = function(t4) {
    for (var n3 = e9.findContainerClientCoords(), r3 = n3[0], i3 = n3[1], a3 = n3[2], o3 = n3[3], s3 = t4.touches ? t4.touches : [t4], l3 = false, u3 = 0; u3 < s3.length; u3++) {
      var c3 = s3[u3];
      if (r3 <= c3.clientX && c3.clientX <= r3 + a3 && i3 <= c3.clientY && c3.clientY <= i3 + o3) {
        l3 = true;
        break;
      }
    }
    if (!l3)
      return false;
    for (var d3 = e9.container, h3 = t4.target.parentNode, p3 = false; h3; ) {
      if (h3 === d3) {
        p3 = true;
        break;
      }
      h3 = h3.parentNode;
    }
    return !!p3;
  };
  e9.registerBinding(e9.container, "mousedown", function(t4) {
    if (w2(t4)) {
      t4.preventDefault(), h2(), e9.hoverData.capture = true, e9.hoverData.which = t4.which;
      var r3 = e9.cy, i3 = [t4.clientX, t4.clientY], a3 = e9.projectIntoViewport(i3[0], i3[1]), s3 = e9.selection, c3 = e9.findNearestElements(a3[0], a3[1], true, false), d3 = c3[0], p3 = e9.dragData.possibleDragElements;
      e9.hoverData.mdownPos = a3, e9.hoverData.mdownGPos = i3;
      if (3 == t4.which) {
        e9.hoverData.cxtStarted = true;
        var f3 = { originalEvent: t4, type: "cxttapstart", position: { x: a3[0], y: a3[1] } };
        d3 ? (d3.activate(), d3.emit(f3), e9.hoverData.down = d3) : r3.emit(f3), e9.hoverData.downTime = new Date().getTime(), e9.hoverData.cxtDragged = false;
      } else if (1 == t4.which) {
        if (d3 && d3.activate(), null != d3 && e9.nodeIsGrabbable(d3)) {
          var g3 = function(e10) {
            return { originalEvent: t4, type: e10, position: { x: a3[0], y: a3[1] } };
          };
          if (o2(d3), d3.selected()) {
            p3 = e9.dragData.possibleDragElements = r3.collection();
            var v3 = r3.$(function(t5) {
              return t5.isNode() && t5.selected() && e9.nodeIsGrabbable(t5);
            });
            l2(v3, { addToList: p3 }), d3.emit(g3("grabon")), v3.forEach(function(e10) {
              e10.emit(g3("grab"));
            });
          } else
            p3 = e9.dragData.possibleDragElements = r3.collection(), u2(d3, { addToList: p3 }), d3.emit(g3("grabon")).emit(g3("grab"));
          e9.redrawHint("eles", true), e9.redrawHint("drag", true);
        }
        e9.hoverData.down = d3, e9.hoverData.downs = c3, e9.hoverData.downTime = new Date().getTime(), n2(d3, ["mousedown", "tapstart", "vmousedown"], t4, { x: a3[0], y: a3[1] }), null == d3 ? (s3[4] = 1, e9.data.bgActivePosistion = { x: a3[0], y: a3[1] }, e9.redrawHint("select", true), e9.redraw()) : d3.pannable() && (s3[4] = 1), e9.hoverData.tapholdCancelled = false, clearTimeout(e9.hoverData.tapholdTimeout), e9.hoverData.tapholdTimeout = setTimeout(function() {
          if (!e9.hoverData.tapholdCancelled) {
            var n3 = e9.hoverData.down;
            n3 ? n3.emit({ originalEvent: t4, type: "taphold", position: { x: a3[0], y: a3[1] } }) : r3.emit({ originalEvent: t4, type: "taphold", position: { x: a3[0], y: a3[1] } });
          }
        }, e9.tapholdDuration);
      }
      s3[0] = s3[2] = a3[0], s3[1] = s3[3] = a3[1];
    }
  }, false), e9.registerBinding(window, "mousemove", function(t4) {
    if (e9.hoverData.capture || w2(t4)) {
      var a3 = false, o3 = e9.cy, s3 = o3.zoom(), u3 = [t4.clientX, t4.clientY], d3 = e9.projectIntoViewport(u3[0], u3[1]), h3 = e9.hoverData.mdownPos, p3 = e9.hoverData.mdownGPos, f3 = e9.selection, g3 = null;
      e9.hoverData.draggingEles || e9.hoverData.dragging || e9.hoverData.selecting || (g3 = e9.findNearestElement(d3[0], d3[1], true, false));
      var v3, y3 = e9.hoverData.last, b3 = e9.hoverData.down, x3 = [d3[0] - f3[2], d3[1] - f3[3]], E3 = e9.dragData.possibleDragElements;
      if (p3) {
        var k3 = u3[0] - p3[0], C3 = k3 * k3, S3 = u3[1] - p3[1], P3 = C3 + S3 * S3;
        e9.hoverData.isOverThresholdDrag = v3 = P3 >= e9.desktopTapThreshold2;
      }
      var D3 = r2(t4);
      v3 && (e9.hoverData.tapholdCancelled = true);
      a3 = true, n2(g3, ["mousemove", "vmousemove", "tapdrag"], t4, { x: d3[0], y: d3[1] });
      var T3 = function() {
        e9.data.bgActivePosistion = void 0, e9.hoverData.selecting || o3.emit({ originalEvent: t4, type: "boxstart", position: { x: d3[0], y: d3[1] } }), f3[4] = 1, e9.hoverData.selecting = true, e9.redrawHint("select", true), e9.redraw();
      };
      if (3 === e9.hoverData.which) {
        if (v3) {
          var _3 = { originalEvent: t4, type: "cxtdrag", position: { x: d3[0], y: d3[1] } };
          b3 ? b3.emit(_3) : o3.emit(_3), e9.hoverData.cxtDragged = true, e9.hoverData.cxtOver && g3 === e9.hoverData.cxtOver || (e9.hoverData.cxtOver && e9.hoverData.cxtOver.emit({ originalEvent: t4, type: "cxtdragout", position: { x: d3[0], y: d3[1] } }), e9.hoverData.cxtOver = g3, g3 && g3.emit({ originalEvent: t4, type: "cxtdragover", position: { x: d3[0], y: d3[1] } }));
        }
      } else if (e9.hoverData.dragging) {
        if (a3 = true, o3.panningEnabled() && o3.userPanningEnabled()) {
          var M3;
          if (e9.hoverData.justStartedPan) {
            var B3 = e9.hoverData.mdownPos;
            M3 = { x: (d3[0] - B3[0]) * s3, y: (d3[1] - B3[1]) * s3 }, e9.hoverData.justStartedPan = false;
          } else
            M3 = { x: x3[0] * s3, y: x3[1] * s3 };
          o3.panBy(M3), o3.emit("dragpan"), e9.hoverData.dragged = true;
        }
        d3 = e9.projectIntoViewport(t4.clientX, t4.clientY);
      } else if (1 != f3[4] || null != b3 && !b3.pannable()) {
        if (b3 && b3.pannable() && b3.active() && b3.unactivate(), b3 && b3.grabbed() || g3 == y3 || (y3 && n2(y3, ["mouseout", "tapdragout"], t4, { x: d3[0], y: d3[1] }), g3 && n2(g3, ["mouseover", "tapdragover"], t4, { x: d3[0], y: d3[1] }), e9.hoverData.last = g3), b3)
          if (v3) {
            if (o3.boxSelectionEnabled() && D3)
              b3 && b3.grabbed() && (c2(E3), b3.emit("freeon"), E3.emit("free"), e9.dragData.didDrag && (b3.emit("dragfreeon"), E3.emit("dragfree"))), T3();
            else if (b3 && b3.grabbed() && e9.nodeIsDraggable(b3)) {
              var N3 = !e9.dragData.didDrag;
              N3 && e9.redrawHint("eles", true), e9.dragData.didDrag = true, e9.hoverData.draggingEles || l2(E3, { inDragLayer: true });
              var z3 = { x: 0, y: 0 };
              if (m(x3[0]) && m(x3[1]) && (z3.x += x3[0], z3.y += x3[1], N3)) {
                var I3 = e9.hoverData.dragDelta;
                I3 && m(I3[0]) && m(I3[1]) && (z3.x += I3[0], z3.y += I3[1]);
              }
              e9.hoverData.draggingEles = true, E3.silentShift(z3).emit("position drag"), e9.redrawHint("drag", true), e9.redraw();
            }
          } else
            !function() {
              var t5 = e9.hoverData.dragDelta = e9.hoverData.dragDelta || [];
              0 === t5.length ? (t5.push(x3[0]), t5.push(x3[1])) : (t5[0] += x3[0], t5[1] += x3[1]);
            }();
        a3 = true;
      } else if (v3) {
        if (e9.hoverData.dragging || !o3.boxSelectionEnabled() || !D3 && o3.panningEnabled() && o3.userPanningEnabled()) {
          if (!e9.hoverData.selecting && o3.panningEnabled() && o3.userPanningEnabled()) {
            i2(b3, e9.hoverData.downs) && (e9.hoverData.dragging = true, e9.hoverData.justStartedPan = true, f3[4] = 0, e9.data.bgActivePosistion = yt(h3), e9.redrawHint("select", true), e9.redraw());
          }
        } else
          T3();
        b3 && b3.pannable() && b3.active() && b3.unactivate();
      }
      return f3[2] = d3[0], f3[3] = d3[1], a3 ? (t4.stopPropagation && t4.stopPropagation(), t4.preventDefault && t4.preventDefault(), false) : void 0;
    }
  }, false), e9.registerBinding(window, "mouseup", function(i3) {
    if (e9.hoverData.capture) {
      e9.hoverData.capture = false;
      var a3 = e9.cy, o3 = e9.projectIntoViewport(i3.clientX, i3.clientY), s3 = e9.selection, l3 = e9.findNearestElement(o3[0], o3[1], true, false), u3 = e9.dragData.possibleDragElements, d3 = e9.hoverData.down, h3 = r2(i3);
      if (e9.data.bgActivePosistion && (e9.redrawHint("select", true), e9.redraw()), e9.hoverData.tapholdCancelled = true, e9.data.bgActivePosistion = void 0, d3 && d3.unactivate(), 3 === e9.hoverData.which) {
        var p3 = { originalEvent: i3, type: "cxttapend", position: { x: o3[0], y: o3[1] } };
        if (d3 ? d3.emit(p3) : a3.emit(p3), !e9.hoverData.cxtDragged) {
          var f3 = { originalEvent: i3, type: "cxttap", position: { x: o3[0], y: o3[1] } };
          d3 ? d3.emit(f3) : a3.emit(f3);
        }
        e9.hoverData.cxtDragged = false, e9.hoverData.which = null;
      } else if (1 === e9.hoverData.which) {
        if (n2(l3, ["mouseup", "tapend", "vmouseup"], i3, { x: o3[0], y: o3[1] }), e9.dragData.didDrag || e9.hoverData.dragged || e9.hoverData.selecting || e9.hoverData.isOverThresholdDrag || (n2(d3, ["click", "tap", "vclick"], i3, { x: o3[0], y: o3[1] }), b2 = false, i3.timeStamp - x2 <= a3.multiClickDebounceTime() ? (y2 && clearTimeout(y2), b2 = true, x2 = null, n2(d3, ["dblclick", "dbltap", "vdblclick"], i3, { x: o3[0], y: o3[1] })) : (y2 = setTimeout(function() {
          b2 || n2(d3, ["oneclick", "onetap", "voneclick"], i3, { x: o3[0], y: o3[1] });
        }, a3.multiClickDebounceTime()), x2 = i3.timeStamp)), null != d3 || e9.dragData.didDrag || e9.hoverData.selecting || e9.hoverData.dragged || r2(i3) || (a3.$(t3).unselect(["tapunselect"]), u3.length > 0 && e9.redrawHint("eles", true), e9.dragData.possibleDragElements = u3 = a3.collection()), l3 != d3 || e9.dragData.didDrag || e9.hoverData.selecting || null != l3 && l3._private.selectable && (e9.hoverData.dragging || ("additive" === a3.selectionType() || h3 ? l3.selected() ? l3.unselect(["tapunselect"]) : l3.select(["tapselect"]) : h3 || (a3.$(t3).unmerge(l3).unselect(["tapunselect"]), l3.select(["tapselect"]))), e9.redrawHint("eles", true)), e9.hoverData.selecting) {
          var g3 = a3.collection(e9.getAllInBox(s3[0], s3[1], s3[2], s3[3]));
          e9.redrawHint("select", true), g3.length > 0 && e9.redrawHint("eles", true), a3.emit({ type: "boxend", originalEvent: i3, position: { x: o3[0], y: o3[1] } });
          var v3 = function(e10) {
            return e10.selectable() && !e10.selected();
          };
          "additive" === a3.selectionType() || h3 || a3.$(t3).unmerge(g3).unselect(), g3.emit("box").stdFilter(v3).select().emit("boxselect"), e9.redraw();
        }
        if (e9.hoverData.dragging && (e9.hoverData.dragging = false, e9.redrawHint("select", true), e9.redrawHint("eles", true), e9.redraw()), !s3[4]) {
          e9.redrawHint("drag", true), e9.redrawHint("eles", true);
          var m2 = d3 && d3.grabbed();
          c2(u3), m2 && (d3.emit("freeon"), u3.emit("free"), e9.dragData.didDrag && (d3.emit("dragfreeon"), u3.emit("dragfree")));
        }
      }
      s3[4] = 0, e9.hoverData.down = null, e9.hoverData.cxtStarted = false, e9.hoverData.draggingEles = false, e9.hoverData.selecting = false, e9.hoverData.isOverThresholdDrag = false, e9.dragData.didDrag = false, e9.hoverData.dragged = false, e9.hoverData.dragDelta = [], e9.hoverData.mdownPos = null, e9.hoverData.mdownGPos = null;
    }
  }, false);
  var E2, k2, C2, S2, P2, D2, T2, _2, M2, B2, N2, z2, I2, A2 = function(t4) {
    if (!e9.scrollingPage) {
      var n3 = e9.cy, r3 = n3.zoom(), i3 = n3.pan(), a3 = e9.projectIntoViewport(t4.clientX, t4.clientY), o3 = [a3[0] * r3 + i3.x, a3[1] * r3 + i3.y];
      if (e9.hoverData.draggingEles || e9.hoverData.dragging || e9.hoverData.cxtStarted || 0 !== e9.selection[4])
        t4.preventDefault();
      else if (n3.panningEnabled() && n3.userPanningEnabled() && n3.zoomingEnabled() && n3.userZoomingEnabled()) {
        var s3;
        t4.preventDefault(), e9.data.wheelZooming = true, clearTimeout(e9.data.wheelTimeout), e9.data.wheelTimeout = setTimeout(function() {
          e9.data.wheelZooming = false, e9.redrawHint("eles", true), e9.redraw();
        }, 150), s3 = null != t4.deltaY ? t4.deltaY / -250 : null != t4.wheelDeltaY ? t4.wheelDeltaY / 1e3 : t4.wheelDelta / 1e3, s3 *= e9.wheelSensitivity, 1 === t4.deltaMode && (s3 *= 33);
        var l3 = n3.zoom() * Math.pow(10, s3);
        "gesturechange" === t4.type && (l3 = e9.gestureStartZoom * t4.scale), n3.zoom({ level: l3, renderedPosition: { x: o3[0], y: o3[1] } }), n3.emit("gesturechange" === t4.type ? "pinchzoom" : "scrollzoom");
      }
    }
  };
  e9.registerBinding(e9.container, "wheel", A2, true), e9.registerBinding(window, "scroll", function(t4) {
    e9.scrollingPage = true, clearTimeout(e9.scrollingPageTimeout), e9.scrollingPageTimeout = setTimeout(function() {
      e9.scrollingPage = false;
    }, 250);
  }, true), e9.registerBinding(e9.container, "gesturestart", function(t4) {
    e9.gestureStartZoom = e9.cy.zoom(), e9.hasTouchStarted || t4.preventDefault();
  }, true), e9.registerBinding(e9.container, "gesturechange", function(t4) {
    e9.hasTouchStarted || A2(t4);
  }, true), e9.registerBinding(e9.container, "mouseout", function(t4) {
    var n3 = e9.projectIntoViewport(t4.clientX, t4.clientY);
    e9.cy.emit({ originalEvent: t4, type: "mouseout", position: { x: n3[0], y: n3[1] } });
  }, false), e9.registerBinding(e9.container, "mouseover", function(t4) {
    var n3 = e9.projectIntoViewport(t4.clientX, t4.clientY);
    e9.cy.emit({ originalEvent: t4, type: "mouseover", position: { x: n3[0], y: n3[1] } });
  }, false);
  var L2, O2, R2, V2, F2, j2, q2, Y2 = function(e10, t4, n3, r3) {
    return Math.sqrt((n3 - e10) * (n3 - e10) + (r3 - t4) * (r3 - t4));
  }, X2 = function(e10, t4, n3, r3) {
    return (n3 - e10) * (n3 - e10) + (r3 - t4) * (r3 - t4);
  };
  if (e9.registerBinding(e9.container, "touchstart", L2 = function(t4) {
    if (e9.hasTouchStarted = true, w2(t4)) {
      h2(), e9.touchData.capture = true, e9.data.bgActivePosistion = void 0;
      var r3 = e9.cy, i3 = e9.touchData.now, a3 = e9.touchData.earlier;
      if (t4.touches[0]) {
        var s3 = e9.projectIntoViewport(t4.touches[0].clientX, t4.touches[0].clientY);
        i3[0] = s3[0], i3[1] = s3[1];
      }
      if (t4.touches[1]) {
        s3 = e9.projectIntoViewport(t4.touches[1].clientX, t4.touches[1].clientY);
        i3[2] = s3[0], i3[3] = s3[1];
      }
      if (t4.touches[2]) {
        s3 = e9.projectIntoViewport(t4.touches[2].clientX, t4.touches[2].clientY);
        i3[4] = s3[0], i3[5] = s3[1];
      }
      if (t4.touches[1]) {
        e9.touchData.singleTouchMoved = true, c2(e9.dragData.touchDragEles);
        var d3 = e9.findContainerClientCoords();
        M2 = d3[0], B2 = d3[1], N2 = d3[2], z2 = d3[3], E2 = t4.touches[0].clientX - M2, k2 = t4.touches[0].clientY - B2, C2 = t4.touches[1].clientX - M2, S2 = t4.touches[1].clientY - B2, I2 = 0 <= E2 && E2 <= N2 && 0 <= C2 && C2 <= N2 && 0 <= k2 && k2 <= z2 && 0 <= S2 && S2 <= z2;
        var p3 = r3.pan(), f3 = r3.zoom();
        P2 = Y2(E2, k2, C2, S2), D2 = X2(E2, k2, C2, S2), _2 = [((T2 = [(E2 + C2) / 2, (k2 + S2) / 2])[0] - p3.x) / f3, (T2[1] - p3.y) / f3];
        if (D2 < 4e4 && !t4.touches[2]) {
          var g3 = e9.findNearestElement(i3[0], i3[1], true, true), v3 = e9.findNearestElement(i3[2], i3[3], true, true);
          return g3 && g3.isNode() ? (g3.activate().emit({ originalEvent: t4, type: "cxttapstart", position: { x: i3[0], y: i3[1] } }), e9.touchData.start = g3) : v3 && v3.isNode() ? (v3.activate().emit({ originalEvent: t4, type: "cxttapstart", position: { x: i3[0], y: i3[1] } }), e9.touchData.start = v3) : r3.emit({ originalEvent: t4, type: "cxttapstart", position: { x: i3[0], y: i3[1] } }), e9.touchData.start && (e9.touchData.start._private.grabbed = false), e9.touchData.cxt = true, e9.touchData.cxtDragged = false, e9.data.bgActivePosistion = void 0, void e9.redraw();
        }
      }
      if (t4.touches[2])
        r3.boxSelectionEnabled() && t4.preventDefault();
      else if (t4.touches[1])
        ;
      else if (t4.touches[0]) {
        var y3 = e9.findNearestElements(i3[0], i3[1], true, true), m2 = y3[0];
        if (null != m2 && (m2.activate(), e9.touchData.start = m2, e9.touchData.starts = y3, e9.nodeIsGrabbable(m2))) {
          var b3 = e9.dragData.touchDragEles = r3.collection(), x3 = null;
          e9.redrawHint("eles", true), e9.redrawHint("drag", true), m2.selected() ? (x3 = r3.$(function(t5) {
            return t5.selected() && e9.nodeIsGrabbable(t5);
          }), l2(x3, { addToList: b3 })) : u2(m2, { addToList: b3 }), o2(m2);
          var A3 = function(e10) {
            return { originalEvent: t4, type: e10, position: { x: i3[0], y: i3[1] } };
          };
          m2.emit(A3("grabon")), x3 ? x3.forEach(function(e10) {
            e10.emit(A3("grab"));
          }) : m2.emit(A3("grab"));
        }
        n2(m2, ["touchstart", "tapstart", "vmousedown"], t4, { x: i3[0], y: i3[1] }), null == m2 && (e9.data.bgActivePosistion = { x: s3[0], y: s3[1] }, e9.redrawHint("select", true), e9.redraw()), e9.touchData.singleTouchMoved = false, e9.touchData.singleTouchStartTime = +new Date(), clearTimeout(e9.touchData.tapholdTimeout), e9.touchData.tapholdTimeout = setTimeout(function() {
          false !== e9.touchData.singleTouchMoved || e9.pinching || e9.touchData.selecting || n2(e9.touchData.start, ["taphold"], t4, { x: i3[0], y: i3[1] });
        }, e9.tapholdDuration);
      }
      if (t4.touches.length >= 1) {
        for (var L3 = e9.touchData.startPosition = [], O3 = 0; O3 < i3.length; O3++)
          L3[O3] = a3[O3] = i3[O3];
        var R3 = t4.touches[0];
        e9.touchData.startGPosition = [R3.clientX, R3.clientY];
      }
    }
  }, false), e9.registerBinding(window, "touchmove", O2 = function(t4) {
    var r3 = e9.touchData.capture;
    if (r3 || w2(t4)) {
      var a3 = e9.selection, o3 = e9.cy, s3 = e9.touchData.now, u3 = e9.touchData.earlier, d3 = o3.zoom();
      if (t4.touches[0]) {
        var h3 = e9.projectIntoViewport(t4.touches[0].clientX, t4.touches[0].clientY);
        s3[0] = h3[0], s3[1] = h3[1];
      }
      if (t4.touches[1]) {
        h3 = e9.projectIntoViewport(t4.touches[1].clientX, t4.touches[1].clientY);
        s3[2] = h3[0], s3[3] = h3[1];
      }
      if (t4.touches[2]) {
        h3 = e9.projectIntoViewport(t4.touches[2].clientX, t4.touches[2].clientY);
        s3[4] = h3[0], s3[5] = h3[1];
      }
      var p3, f3 = e9.touchData.startGPosition;
      if (r3 && t4.touches[0] && f3) {
        for (var g3 = [], v3 = 0; v3 < s3.length; v3++)
          g3[v3] = s3[v3] - u3[v3];
        var y3 = t4.touches[0].clientX - f3[0], b3 = y3 * y3, x3 = t4.touches[0].clientY - f3[1];
        p3 = b3 + x3 * x3 >= e9.touchTapThreshold2;
      }
      if (r3 && e9.touchData.cxt) {
        t4.preventDefault();
        var T3 = t4.touches[0].clientX - M2, N3 = t4.touches[0].clientY - B2, z3 = t4.touches[1].clientX - M2, A3 = t4.touches[1].clientY - B2, L3 = X2(T3, N3, z3, A3);
        if (L3 / D2 >= 2.25 || L3 >= 22500) {
          e9.touchData.cxt = false, e9.data.bgActivePosistion = void 0, e9.redrawHint("select", true);
          var O3 = { originalEvent: t4, type: "cxttapend", position: { x: s3[0], y: s3[1] } };
          e9.touchData.start ? (e9.touchData.start.unactivate().emit(O3), e9.touchData.start = null) : o3.emit(O3);
        }
      }
      if (r3 && e9.touchData.cxt) {
        O3 = { originalEvent: t4, type: "cxtdrag", position: { x: s3[0], y: s3[1] } };
        e9.data.bgActivePosistion = void 0, e9.redrawHint("select", true), e9.touchData.start ? e9.touchData.start.emit(O3) : o3.emit(O3), e9.touchData.start && (e9.touchData.start._private.grabbed = false), e9.touchData.cxtDragged = true;
        var R3 = e9.findNearestElement(s3[0], s3[1], true, true);
        e9.touchData.cxtOver && R3 === e9.touchData.cxtOver || (e9.touchData.cxtOver && e9.touchData.cxtOver.emit({ originalEvent: t4, type: "cxtdragout", position: { x: s3[0], y: s3[1] } }), e9.touchData.cxtOver = R3, R3 && R3.emit({ originalEvent: t4, type: "cxtdragover", position: { x: s3[0], y: s3[1] } }));
      } else if (r3 && t4.touches[2] && o3.boxSelectionEnabled())
        t4.preventDefault(), e9.data.bgActivePosistion = void 0, this.lastThreeTouch = +new Date(), e9.touchData.selecting || o3.emit({ originalEvent: t4, type: "boxstart", position: { x: s3[0], y: s3[1] } }), e9.touchData.selecting = true, e9.touchData.didSelect = true, a3[4] = 1, a3 && 0 !== a3.length && void 0 !== a3[0] ? (a3[2] = (s3[0] + s3[2] + s3[4]) / 3, a3[3] = (s3[1] + s3[3] + s3[5]) / 3) : (a3[0] = (s3[0] + s3[2] + s3[4]) / 3, a3[1] = (s3[1] + s3[3] + s3[5]) / 3, a3[2] = (s3[0] + s3[2] + s3[4]) / 3 + 1, a3[3] = (s3[1] + s3[3] + s3[5]) / 3 + 1), e9.redrawHint("select", true), e9.redraw();
      else if (r3 && t4.touches[1] && !e9.touchData.didSelect && o3.zoomingEnabled() && o3.panningEnabled() && o3.userZoomingEnabled() && o3.userPanningEnabled()) {
        if (t4.preventDefault(), e9.data.bgActivePosistion = void 0, e9.redrawHint("select", true), ee2 = e9.dragData.touchDragEles) {
          e9.redrawHint("drag", true);
          for (var V3 = 0; V3 < ee2.length; V3++) {
            var F3 = ee2[V3]._private;
            F3.grabbed = false, F3.rscratch.inDragLayer = false;
          }
        }
        var j3 = e9.touchData.start, q3 = (T3 = t4.touches[0].clientX - M2, N3 = t4.touches[0].clientY - B2, z3 = t4.touches[1].clientX - M2, A3 = t4.touches[1].clientY - B2, Y2(T3, N3, z3, A3)), W3 = q3 / P2;
        if (I2) {
          var H3 = (T3 - E2 + (z3 - C2)) / 2, K3 = (N3 - k2 + (A3 - S2)) / 2, G3 = o3.zoom(), U3 = G3 * W3, Z3 = o3.pan(), $2 = _2[0] * G3 + Z3.x, Q2 = _2[1] * G3 + Z3.y, J2 = { x: -U3 / G3 * ($2 - Z3.x - H3) + $2, y: -U3 / G3 * (Q2 - Z3.y - K3) + Q2 };
          if (j3 && j3.active()) {
            var ee2 = e9.dragData.touchDragEles;
            c2(ee2), e9.redrawHint("drag", true), e9.redrawHint("eles", true), j3.unactivate().emit("freeon"), ee2.emit("free"), e9.dragData.didDrag && (j3.emit("dragfreeon"), ee2.emit("dragfree"));
          }
          o3.viewport({ zoom: U3, pan: J2, cancelOnFailedZoom: true }), o3.emit("pinchzoom"), P2 = q3, E2 = T3, k2 = N3, C2 = z3, S2 = A3, e9.pinching = true;
        }
        if (t4.touches[0]) {
          h3 = e9.projectIntoViewport(t4.touches[0].clientX, t4.touches[0].clientY);
          s3[0] = h3[0], s3[1] = h3[1];
        }
        if (t4.touches[1]) {
          h3 = e9.projectIntoViewport(t4.touches[1].clientX, t4.touches[1].clientY);
          s3[2] = h3[0], s3[3] = h3[1];
        }
        if (t4.touches[2]) {
          h3 = e9.projectIntoViewport(t4.touches[2].clientX, t4.touches[2].clientY);
          s3[4] = h3[0], s3[5] = h3[1];
        }
      } else if (t4.touches[0] && !e9.touchData.didSelect) {
        var te2 = e9.touchData.start, ne2 = e9.touchData.last;
        if (e9.hoverData.draggingEles || e9.swipePanning || (R3 = e9.findNearestElement(s3[0], s3[1], true, true)), r3 && null != te2 && t4.preventDefault(), r3 && null != te2 && e9.nodeIsDraggable(te2))
          if (p3) {
            ee2 = e9.dragData.touchDragEles;
            var re2 = !e9.dragData.didDrag;
            re2 && l2(ee2, { inDragLayer: true }), e9.dragData.didDrag = true;
            var ie2 = { x: 0, y: 0 };
            if (m(g3[0]) && m(g3[1])) {
              if (ie2.x += g3[0], ie2.y += g3[1], re2)
                e9.redrawHint("eles", true), (ae2 = e9.touchData.dragDelta) && m(ae2[0]) && m(ae2[1]) && (ie2.x += ae2[0], ie2.y += ae2[1]);
            }
            e9.hoverData.draggingEles = true, ee2.silentShift(ie2).emit("position drag"), e9.redrawHint("drag", true), e9.touchData.startPosition[0] == u3[0] && e9.touchData.startPosition[1] == u3[1] && e9.redrawHint("eles", true), e9.redraw();
          } else {
            var ae2;
            0 === (ae2 = e9.touchData.dragDelta = e9.touchData.dragDelta || []).length ? (ae2.push(g3[0]), ae2.push(g3[1])) : (ae2[0] += g3[0], ae2[1] += g3[1]);
          }
        if (n2(te2 || R3, ["touchmove", "tapdrag", "vmousemove"], t4, { x: s3[0], y: s3[1] }), te2 && te2.grabbed() || R3 == ne2 || (ne2 && ne2.emit({ originalEvent: t4, type: "tapdragout", position: { x: s3[0], y: s3[1] } }), R3 && R3.emit({ originalEvent: t4, type: "tapdragover", position: { x: s3[0], y: s3[1] } })), e9.touchData.last = R3, r3)
          for (V3 = 0; V3 < s3.length; V3++)
            s3[V3] && e9.touchData.startPosition[V3] && p3 && (e9.touchData.singleTouchMoved = true);
        if (r3 && (null == te2 || te2.pannable()) && o3.panningEnabled() && o3.userPanningEnabled()) {
          i2(te2, e9.touchData.starts) && (t4.preventDefault(), e9.data.bgActivePosistion || (e9.data.bgActivePosistion = yt(e9.touchData.startPosition)), e9.swipePanning ? (o3.panBy({ x: g3[0] * d3, y: g3[1] * d3 }), o3.emit("dragpan")) : p3 && (e9.swipePanning = true, o3.panBy({ x: y3 * d3, y: x3 * d3 }), o3.emit("dragpan"), te2 && (te2.unactivate(), e9.redrawHint("select", true), e9.touchData.start = null)));
          h3 = e9.projectIntoViewport(t4.touches[0].clientX, t4.touches[0].clientY);
          s3[0] = h3[0], s3[1] = h3[1];
        }
      }
      for (v3 = 0; v3 < s3.length; v3++)
        u3[v3] = s3[v3];
      r3 && t4.touches.length > 0 && !e9.hoverData.draggingEles && !e9.swipePanning && null != e9.data.bgActivePosistion && (e9.data.bgActivePosistion = void 0, e9.redrawHint("select", true), e9.redraw());
    }
  }, false), e9.registerBinding(window, "touchcancel", R2 = function(t4) {
    var n3 = e9.touchData.start;
    e9.touchData.capture = false, n3 && n3.unactivate();
  }), e9.registerBinding(window, "touchend", V2 = function(r3) {
    var i3 = e9.touchData.start;
    if (e9.touchData.capture) {
      0 === r3.touches.length && (e9.touchData.capture = false), r3.preventDefault();
      var a3 = e9.selection;
      e9.swipePanning = false, e9.hoverData.draggingEles = false;
      var o3, s3 = e9.cy, l3 = s3.zoom(), u3 = e9.touchData.now, d3 = e9.touchData.earlier;
      if (r3.touches[0]) {
        var h3 = e9.projectIntoViewport(r3.touches[0].clientX, r3.touches[0].clientY);
        u3[0] = h3[0], u3[1] = h3[1];
      }
      if (r3.touches[1]) {
        h3 = e9.projectIntoViewport(r3.touches[1].clientX, r3.touches[1].clientY);
        u3[2] = h3[0], u3[3] = h3[1];
      }
      if (r3.touches[2]) {
        h3 = e9.projectIntoViewport(r3.touches[2].clientX, r3.touches[2].clientY);
        u3[4] = h3[0], u3[5] = h3[1];
      }
      if (i3 && i3.unactivate(), e9.touchData.cxt) {
        if (o3 = { originalEvent: r3, type: "cxttapend", position: { x: u3[0], y: u3[1] } }, i3 ? i3.emit(o3) : s3.emit(o3), !e9.touchData.cxtDragged) {
          var p3 = { originalEvent: r3, type: "cxttap", position: { x: u3[0], y: u3[1] } };
          i3 ? i3.emit(p3) : s3.emit(p3);
        }
        return e9.touchData.start && (e9.touchData.start._private.grabbed = false), e9.touchData.cxt = false, e9.touchData.start = null, void e9.redraw();
      }
      if (!r3.touches[2] && s3.boxSelectionEnabled() && e9.touchData.selecting) {
        e9.touchData.selecting = false;
        var f3 = s3.collection(e9.getAllInBox(a3[0], a3[1], a3[2], a3[3]));
        a3[0] = void 0, a3[1] = void 0, a3[2] = void 0, a3[3] = void 0, a3[4] = 0, e9.redrawHint("select", true), s3.emit({ type: "boxend", originalEvent: r3, position: { x: u3[0], y: u3[1] } });
        f3.emit("box").stdFilter(function(e10) {
          return e10.selectable() && !e10.selected();
        }).select().emit("boxselect"), f3.nonempty() && e9.redrawHint("eles", true), e9.redraw();
      }
      if (null != i3 && i3.unactivate(), r3.touches[2])
        e9.data.bgActivePosistion = void 0, e9.redrawHint("select", true);
      else if (r3.touches[1])
        ;
      else if (r3.touches[0])
        ;
      else if (!r3.touches[0]) {
        e9.data.bgActivePosistion = void 0, e9.redrawHint("select", true);
        var g3 = e9.dragData.touchDragEles;
        if (null != i3) {
          var v3 = i3._private.grabbed;
          c2(g3), e9.redrawHint("drag", true), e9.redrawHint("eles", true), v3 && (i3.emit("freeon"), g3.emit("free"), e9.dragData.didDrag && (i3.emit("dragfreeon"), g3.emit("dragfree"))), n2(i3, ["touchend", "tapend", "vmouseup", "tapdragout"], r3, { x: u3[0], y: u3[1] }), i3.unactivate(), e9.touchData.start = null;
        } else {
          var y3 = e9.findNearestElement(u3[0], u3[1], true, true);
          n2(y3, ["touchend", "tapend", "vmouseup", "tapdragout"], r3, { x: u3[0], y: u3[1] });
        }
        var m2 = e9.touchData.startPosition[0] - u3[0], b3 = m2 * m2, x3 = e9.touchData.startPosition[1] - u3[1], w3 = (b3 + x3 * x3) * l3 * l3;
        e9.touchData.singleTouchMoved || (i3 || s3.$(":selected").unselect(["tapunselect"]), n2(i3, ["tap", "vclick"], r3, { x: u3[0], y: u3[1] }), F2 = false, r3.timeStamp - q2 <= s3.multiClickDebounceTime() ? (j2 && clearTimeout(j2), F2 = true, q2 = null, n2(i3, ["dbltap", "vdblclick"], r3, { x: u3[0], y: u3[1] })) : (j2 = setTimeout(function() {
          F2 || n2(i3, ["onetap", "voneclick"], r3, { x: u3[0], y: u3[1] });
        }, s3.multiClickDebounceTime()), q2 = r3.timeStamp)), null != i3 && !e9.dragData.didDrag && i3._private.selectable && w3 < e9.touchTapThreshold2 && !e9.pinching && ("single" === s3.selectionType() ? (s3.$(t3).unmerge(i3).unselect(["tapunselect"]), i3.select(["tapselect"])) : i3.selected() ? i3.unselect(["tapunselect"]) : i3.select(["tapselect"]), e9.redrawHint("eles", true)), e9.touchData.singleTouchMoved = true;
      }
      for (var E3 = 0; E3 < u3.length; E3++)
        d3[E3] = u3[E3];
      e9.dragData.didDrag = false, 0 === r3.touches.length && (e9.touchData.dragDelta = [], e9.touchData.startPosition = null, e9.touchData.startGPosition = null, e9.touchData.didSelect = false), r3.touches.length < 2 && (1 === r3.touches.length && (e9.touchData.startGPosition = [r3.touches[0].clientX, r3.touches[0].clientY]), e9.pinching = false, e9.redrawHint("eles", true), e9.redraw());
    }
  }, false), "undefined" == typeof TouchEvent) {
    var W2 = [], H2 = function(e10) {
      return { clientX: e10.clientX, clientY: e10.clientY, force: 1, identifier: e10.pointerId, pageX: e10.pageX, pageY: e10.pageY, radiusX: e10.width / 2, radiusY: e10.height / 2, screenX: e10.screenX, screenY: e10.screenY, target: e10.target };
    }, K2 = function(e10) {
      W2.push(function(e11) {
        return { event: e11, touch: H2(e11) };
      }(e10));
    }, G2 = function(e10) {
      for (var t4 = 0; t4 < W2.length; t4++) {
        if (W2[t4].event.pointerId === e10.pointerId)
          return void W2.splice(t4, 1);
      }
    }, U2 = function(e10) {
      e10.touches = W2.map(function(e11) {
        return e11.touch;
      });
    }, Z2 = function(e10) {
      return "mouse" === e10.pointerType || 4 === e10.pointerType;
    };
    e9.registerBinding(e9.container, "pointerdown", function(e10) {
      Z2(e10) || (e10.preventDefault(), K2(e10), U2(e10), L2(e10));
    }), e9.registerBinding(e9.container, "pointerup", function(e10) {
      Z2(e10) || (G2(e10), U2(e10), V2(e10));
    }), e9.registerBinding(e9.container, "pointercancel", function(e10) {
      Z2(e10) || (G2(e10), U2(e10), R2());
    }), e9.registerBinding(e9.container, "pointermove", function(e10) {
      Z2(e10) || (e10.preventDefault(), function(e11) {
        var t4 = W2.filter(function(t5) {
          return t5.event.pointerId === e11.pointerId;
        })[0];
        t4.event = e11, t4.touch = H2(e11);
      }(e10), U2(e10), O2(e10));
    });
  }
};
var Fl = { generatePolygon: function(e9, t3) {
  return this.nodeShapes[e9] = { renderer: this, name: e9, points: t3, draw: function(e10, t4, n2, r2, i2) {
    this.renderer.nodeShapeImpl("polygon", e10, t4, n2, r2, i2, this.points);
  }, intersectLine: function(e10, t4, n2, r2, i2, a2, o2) {
    return Gt(i2, a2, this.points, e10, t4, n2 / 2, r2 / 2, o2);
  }, checkPoint: function(e10, t4, n2, r2, i2, a2, o2) {
    return jt(e10, t4, this.points, a2, o2, r2, i2, [0, -1], n2);
  } };
} };
Fl.generateEllipse = function() {
  return this.nodeShapes.ellipse = { renderer: this, name: "ellipse", draw: function(e9, t3, n2, r2, i2) {
    this.renderer.nodeShapeImpl(this.name, e9, t3, n2, r2, i2);
  }, intersectLine: function(e9, t3, n2, r2, i2, a2, o2) {
    return function(e10, t4, n3, r3, i3, a3) {
      var o3 = n3 - e10, s2 = r3 - t4;
      o3 /= i3, s2 /= a3;
      var l2 = Math.sqrt(o3 * o3 + s2 * s2), u2 = l2 - 1;
      if (u2 < 0)
        return [];
      var c2 = u2 / l2;
      return [(n3 - e10) * c2 + e10, (r3 - t4) * c2 + t4];
    }(i2, a2, e9, t3, n2 / 2 + o2, r2 / 2 + o2);
  }, checkPoint: function(e9, t3, n2, r2, i2, a2, o2) {
    return Xt(e9, t3, r2, i2, a2, o2, n2);
  } };
}, Fl.generateRoundPolygon = function(e9, t3) {
  for (var n2 = new Array(2 * t3.length), r2 = 0; r2 < t3.length / 2; r2++) {
    var i2 = 2 * r2, a2 = void 0;
    a2 = r2 < t3.length / 2 - 1 ? 2 * (r2 + 1) : 0, n2[4 * r2] = t3[i2], n2[4 * r2 + 1] = t3[i2 + 1];
    var o2 = t3[a2] - t3[i2], s2 = t3[a2 + 1] - t3[i2 + 1], l2 = Math.sqrt(o2 * o2 + s2 * s2);
    n2[4 * r2 + 2] = o2 / l2, n2[4 * r2 + 3] = s2 / l2;
  }
  return this.nodeShapes[e9] = { renderer: this, name: e9, points: n2, draw: function(e10, t4, n3, r3, i3) {
    this.renderer.nodeShapeImpl("round-polygon", e10, t4, n3, r3, i3, this.points);
  }, intersectLine: function(e10, t4, n3, r3, i3, a3, o3) {
    return function(e11, t5, n4, r4, i4, a4, o4, s3) {
      for (var l3, u2 = [], c2 = new Array(n4.length), d2 = a4 / 2, h2 = o4 / 2, p2 = en(a4, o4), f2 = 0; f2 < n4.length / 4; f2++) {
        var g2, v2 = void 0;
        v2 = 0 === f2 ? n4.length - 2 : 4 * f2 - 2, g2 = 4 * f2 + 2;
        var y2 = r4 + d2 * n4[4 * f2], m2 = i4 + h2 * n4[4 * f2 + 1], b2 = -n4[v2] * n4[g2] - n4[v2 + 1] * n4[g2 + 1], x2 = p2 / Math.tan(Math.acos(b2) / 2), w2 = y2 - x2 * n4[v2], E2 = m2 - x2 * n4[v2 + 1], k2 = y2 + x2 * n4[g2], C2 = m2 + x2 * n4[g2 + 1];
        0 === f2 ? (c2[n4.length - 2] = w2, c2[n4.length - 1] = E2) : (c2[4 * f2 - 2] = w2, c2[4 * f2 - 1] = E2), c2[4 * f2] = k2, c2[4 * f2 + 1] = C2;
        var S2 = n4[v2 + 1], P2 = -n4[v2];
        S2 * n4[g2] + P2 * n4[g2 + 1] < 0 && (S2 *= -1, P2 *= -1), 0 !== (l3 = Wt(e11, t5, r4, i4, w2 + S2 * p2, E2 + P2 * p2, p2)).length && u2.push(l3[0], l3[1]);
      }
      for (var D2 = 0; D2 < c2.length / 4; D2++)
        0 !== (l3 = Kt(e11, t5, r4, i4, c2[4 * D2], c2[4 * D2 + 1], c2[4 * D2 + 2], c2[4 * D2 + 3], false)).length && u2.push(l3[0], l3[1]);
      if (u2.length > 2) {
        for (var T2 = [u2[0], u2[1]], _2 = Math.pow(T2[0] - e11, 2) + Math.pow(T2[1] - t5, 2), M2 = 1; M2 < u2.length / 2; M2++) {
          var B2 = Math.pow(u2[2 * M2] - e11, 2) + Math.pow(u2[2 * M2 + 1] - t5, 2);
          B2 <= _2 && (T2[0] = u2[2 * M2], T2[1] = u2[2 * M2 + 1], _2 = B2);
        }
        return T2;
      }
      return u2;
    }(i3, a3, this.points, e10, t4, n3, r3);
  }, checkPoint: function(e10, t4, n3, r3, i3, a3, o3) {
    return function(e11, t5, n4, r4, i4, a4, o4) {
      for (var s3 = new Array(n4.length), l3 = a4 / 2, u2 = o4 / 2, c2 = en(a4, o4), d2 = c2 * c2, h2 = 0; h2 < n4.length / 4; h2++) {
        var p2, f2 = void 0;
        f2 = 0 === h2 ? n4.length - 2 : 4 * h2 - 2, p2 = 4 * h2 + 2;
        var g2 = r4 + l3 * n4[4 * h2], v2 = i4 + u2 * n4[4 * h2 + 1], y2 = -n4[f2] * n4[p2] - n4[f2 + 1] * n4[p2 + 1], m2 = c2 / Math.tan(Math.acos(y2) / 2), b2 = g2 - m2 * n4[f2], x2 = v2 - m2 * n4[f2 + 1], w2 = g2 + m2 * n4[p2], E2 = v2 + m2 * n4[p2 + 1];
        s3[4 * h2] = b2, s3[4 * h2 + 1] = x2, s3[4 * h2 + 2] = w2, s3[4 * h2 + 3] = E2;
        var k2 = n4[f2 + 1], C2 = -n4[f2];
        k2 * n4[p2] + C2 * n4[p2 + 1] < 0 && (k2 *= -1, C2 *= -1);
        var S2 = b2 + k2 * c2, P2 = x2 + C2 * c2;
        if (Math.pow(S2 - e11, 2) + Math.pow(P2 - t5, 2) <= d2)
          return true;
      }
      return Ft(e11, t5, s3);
    }(e10, t4, this.points, a3, o3, r3, i3);
  } };
}, Fl.generateRoundRectangle = function() {
  return this.nodeShapes["round-rectangle"] = this.nodeShapes.roundrectangle = { renderer: this, name: "round-rectangle", points: Zt(4, 0), draw: function(e9, t3, n2, r2, i2) {
    this.renderer.nodeShapeImpl(this.name, e9, t3, n2, r2, i2);
  }, intersectLine: function(e9, t3, n2, r2, i2, a2, o2) {
    return At(i2, a2, e9, t3, n2, r2, o2);
  }, checkPoint: function(e9, t3, n2, r2, i2, a2, o2) {
    var s2 = Jt(r2, i2), l2 = 2 * s2;
    return !!jt(e9, t3, this.points, a2, o2, r2, i2 - l2, [0, -1], n2) || (!!jt(e9, t3, this.points, a2, o2, r2 - l2, i2, [0, -1], n2) || (!!Xt(e9, t3, l2, l2, a2 - r2 / 2 + s2, o2 - i2 / 2 + s2, n2) || (!!Xt(e9, t3, l2, l2, a2 + r2 / 2 - s2, o2 - i2 / 2 + s2, n2) || (!!Xt(e9, t3, l2, l2, a2 + r2 / 2 - s2, o2 + i2 / 2 - s2, n2) || !!Xt(e9, t3, l2, l2, a2 - r2 / 2 + s2, o2 + i2 / 2 - s2, n2)))));
  } };
}, Fl.generateCutRectangle = function() {
  return this.nodeShapes["cut-rectangle"] = this.nodeShapes.cutrectangle = { renderer: this, name: "cut-rectangle", cornerLength: 8, points: Zt(4, 0), draw: function(e9, t3, n2, r2, i2) {
    this.renderer.nodeShapeImpl(this.name, e9, t3, n2, r2, i2);
  }, generateCutTrianglePts: function(e9, t3, n2, r2) {
    var i2 = this.cornerLength, a2 = t3 / 2, o2 = e9 / 2, s2 = n2 - o2, l2 = n2 + o2, u2 = r2 - a2, c2 = r2 + a2;
    return { topLeft: [s2, u2 + i2, s2 + i2, u2, s2 + i2, u2 + i2], topRight: [l2 - i2, u2, l2, u2 + i2, l2 - i2, u2 + i2], bottomRight: [l2, c2 - i2, l2 - i2, c2, l2 - i2, c2 - i2], bottomLeft: [s2 + i2, c2, s2, c2 - i2, s2 + i2, c2 - i2] };
  }, intersectLine: function(e9, t3, n2, r2, i2, a2, o2) {
    var s2 = this.generateCutTrianglePts(n2 + 2 * o2, r2 + 2 * o2, e9, t3), l2 = [].concat.apply([], [s2.topLeft.splice(0, 4), s2.topRight.splice(0, 4), s2.bottomRight.splice(0, 4), s2.bottomLeft.splice(0, 4)]);
    return Gt(i2, a2, l2, e9, t3);
  }, checkPoint: function(e9, t3, n2, r2, i2, a2, o2) {
    if (jt(e9, t3, this.points, a2, o2, r2, i2 - 2 * this.cornerLength, [0, -1], n2))
      return true;
    if (jt(e9, t3, this.points, a2, o2, r2 - 2 * this.cornerLength, i2, [0, -1], n2))
      return true;
    var s2 = this.generateCutTrianglePts(r2, i2, a2, o2);
    return Ft(e9, t3, s2.topLeft) || Ft(e9, t3, s2.topRight) || Ft(e9, t3, s2.bottomRight) || Ft(e9, t3, s2.bottomLeft);
  } };
}, Fl.generateBarrel = function() {
  return this.nodeShapes.barrel = { renderer: this, name: "barrel", points: Zt(4, 0), draw: function(e9, t3, n2, r2, i2) {
    this.renderer.nodeShapeImpl(this.name, e9, t3, n2, r2, i2);
  }, intersectLine: function(e9, t3, n2, r2, i2, a2, o2) {
    var s2 = this.generateBarrelBezierPts(n2 + 2 * o2, r2 + 2 * o2, e9, t3), l2 = function(e10) {
      var t4 = St({ x: e10[0], y: e10[1] }, { x: e10[2], y: e10[3] }, { x: e10[4], y: e10[5] }, 0.15), n3 = St({ x: e10[0], y: e10[1] }, { x: e10[2], y: e10[3] }, { x: e10[4], y: e10[5] }, 0.5), r3 = St({ x: e10[0], y: e10[1] }, { x: e10[2], y: e10[3] }, { x: e10[4], y: e10[5] }, 0.85);
      return [e10[0], e10[1], t4.x, t4.y, n3.x, n3.y, r3.x, r3.y, e10[4], e10[5]];
    }, u2 = [].concat(l2(s2.topLeft), l2(s2.topRight), l2(s2.bottomRight), l2(s2.bottomLeft));
    return Gt(i2, a2, u2, e9, t3);
  }, generateBarrelBezierPts: function(e9, t3, n2, r2) {
    var i2 = t3 / 2, a2 = e9 / 2, o2 = n2 - a2, s2 = n2 + a2, l2 = r2 - i2, u2 = r2 + i2, c2 = tn(e9, t3), d2 = c2.heightOffset, h2 = c2.widthOffset, p2 = c2.ctrlPtOffsetPct * e9, f2 = { topLeft: [o2, l2 + d2, o2 + p2, l2, o2 + h2, l2], topRight: [s2 - h2, l2, s2 - p2, l2, s2, l2 + d2], bottomRight: [s2, u2 - d2, s2 - p2, u2, s2 - h2, u2], bottomLeft: [o2 + h2, u2, o2 + p2, u2, o2, u2 - d2] };
    return f2.topLeft.isTop = true, f2.topRight.isTop = true, f2.bottomLeft.isBottom = true, f2.bottomRight.isBottom = true, f2;
  }, checkPoint: function(e9, t3, n2, r2, i2, a2, o2) {
    var s2 = tn(r2, i2), l2 = s2.heightOffset, u2 = s2.widthOffset;
    if (jt(e9, t3, this.points, a2, o2, r2, i2 - 2 * l2, [0, -1], n2))
      return true;
    if (jt(e9, t3, this.points, a2, o2, r2 - 2 * u2, i2, [0, -1], n2))
      return true;
    for (var c2 = this.generateBarrelBezierPts(r2, i2, a2, o2), d2 = function(e10, t4, n3) {
      var r3, i3, a3 = n3[4], o3 = n3[2], s3 = n3[0], l3 = n3[5], u3 = n3[1], c3 = Math.min(a3, s3), d3 = Math.max(a3, s3), h3 = Math.min(l3, u3), p3 = Math.max(l3, u3);
      if (c3 <= e10 && e10 <= d3 && h3 <= t4 && t4 <= p3) {
        var f3 = [(r3 = a3) - 2 * (i3 = o3) + s3, 2 * (i3 - r3), r3], g3 = function(e11, t5, n4, r4) {
          var i4 = t5 * t5 - 4 * e11 * (n4 -= r4);
          if (i4 < 0)
            return [];
          var a4 = Math.sqrt(i4), o4 = 2 * e11;
          return [(-t5 + a4) / o4, (-t5 - a4) / o4];
        }(f3[0], f3[1], f3[2], e10).filter(function(e11) {
          return 0 <= e11 && e11 <= 1;
        });
        if (g3.length > 0)
          return g3[0];
      }
      return null;
    }, h2 = Object.keys(c2), p2 = 0; p2 < h2.length; p2++) {
      var f2 = c2[h2[p2]], g2 = d2(e9, t3, f2);
      if (null != g2) {
        var v2 = f2[5], y2 = f2[3], m2 = f2[1], b2 = Ct(v2, y2, m2, g2);
        if (f2.isTop && b2 <= t3)
          return true;
        if (f2.isBottom && t3 <= b2)
          return true;
      }
    }
    return false;
  } };
}, Fl.generateBottomRoundrectangle = function() {
  return this.nodeShapes["bottom-round-rectangle"] = this.nodeShapes.bottomroundrectangle = { renderer: this, name: "bottom-round-rectangle", points: Zt(4, 0), draw: function(e9, t3, n2, r2, i2) {
    this.renderer.nodeShapeImpl(this.name, e9, t3, n2, r2, i2);
  }, intersectLine: function(e9, t3, n2, r2, i2, a2, o2) {
    var s2 = t3 - (r2 / 2 + o2), l2 = Kt(i2, a2, e9, t3, e9 - (n2 / 2 + o2), s2, e9 + (n2 / 2 + o2), s2, false);
    return l2.length > 0 ? l2 : At(i2, a2, e9, t3, n2, r2, o2);
  }, checkPoint: function(e9, t3, n2, r2, i2, a2, o2) {
    var s2 = Jt(r2, i2), l2 = 2 * s2;
    if (jt(e9, t3, this.points, a2, o2, r2, i2 - l2, [0, -1], n2))
      return true;
    if (jt(e9, t3, this.points, a2, o2, r2 - l2, i2, [0, -1], n2))
      return true;
    var u2 = r2 / 2 + 2 * n2, c2 = i2 / 2 + 2 * n2;
    return !!Ft(e9, t3, [a2 - u2, o2 - c2, a2 - u2, o2, a2 + u2, o2, a2 + u2, o2 - c2]) || (!!Xt(e9, t3, l2, l2, a2 + r2 / 2 - s2, o2 + i2 / 2 - s2, n2) || !!Xt(e9, t3, l2, l2, a2 - r2 / 2 + s2, o2 + i2 / 2 - s2, n2));
  } };
}, Fl.registerNodeShapes = function() {
  var e9 = this.nodeShapes = {}, t3 = this;
  this.generateEllipse(), this.generatePolygon("triangle", Zt(3, 0)), this.generateRoundPolygon("round-triangle", Zt(3, 0)), this.generatePolygon("rectangle", Zt(4, 0)), e9.square = e9.rectangle, this.generateRoundRectangle(), this.generateCutRectangle(), this.generateBarrel(), this.generateBottomRoundrectangle();
  var n2 = [0, 1, 1, 0, 0, -1, -1, 0];
  this.generatePolygon("diamond", n2), this.generateRoundPolygon("round-diamond", n2), this.generatePolygon("pentagon", Zt(5, 0)), this.generateRoundPolygon("round-pentagon", Zt(5, 0)), this.generatePolygon("hexagon", Zt(6, 0)), this.generateRoundPolygon("round-hexagon", Zt(6, 0)), this.generatePolygon("heptagon", Zt(7, 0)), this.generateRoundPolygon("round-heptagon", Zt(7, 0)), this.generatePolygon("octagon", Zt(8, 0)), this.generateRoundPolygon("round-octagon", Zt(8, 0));
  var r2 = new Array(20), i2 = Qt(5, 0), a2 = Qt(5, Math.PI / 5), o2 = 0.5 * (3 - Math.sqrt(5));
  o2 *= 1.57;
  for (var s2 = 0; s2 < a2.length / 2; s2++)
    a2[2 * s2] *= o2, a2[2 * s2 + 1] *= o2;
  for (s2 = 0; s2 < 5; s2++)
    r2[4 * s2] = i2[2 * s2], r2[4 * s2 + 1] = i2[2 * s2 + 1], r2[4 * s2 + 2] = a2[2 * s2], r2[4 * s2 + 3] = a2[2 * s2 + 1];
  r2 = $t(r2), this.generatePolygon("star", r2), this.generatePolygon("vee", [-1, -1, 0, -0.333, 1, -1, 0, 1]), this.generatePolygon("rhomboid", [-1, -1, 0.333, -1, 1, 1, -0.333, 1]), this.nodeShapes.concavehexagon = this.generatePolygon("concave-hexagon", [-1, -0.95, -0.75, 0, -1, 0.95, 1, 0.95, 0.75, 0, 1, -0.95]);
  var l2 = [-1, -1, 0.25, -1, 1, 0, 0.25, 1, -1, 1];
  this.generatePolygon("tag", l2), this.generateRoundPolygon("round-tag", l2), e9.makePolygon = function(e10) {
    var n3, r3 = "polygon-" + e10.join("$");
    return (n3 = this[r3]) ? n3 : t3.generatePolygon(r3, e10);
  };
};
var jl = { timeToRender: function() {
  return this.redrawTotalTime / this.redrawCount;
}, redraw: function(e9) {
  e9 = e9 || Ye();
  var t3 = this;
  void 0 === t3.averageRedrawTime && (t3.averageRedrawTime = 0), void 0 === t3.lastRedrawTime && (t3.lastRedrawTime = 0), void 0 === t3.lastDrawTime && (t3.lastDrawTime = 0), t3.requestedFrame = true, t3.renderOptions = e9;
}, beforeRender: function(e9, t3) {
  if (!this.destroyed) {
    null == t3 && Oe("Priority is not optional for beforeRender");
    var n2 = this.beforeRenderCallbacks;
    n2.push({ fn: e9, priority: t3 }), n2.sort(function(e10, t4) {
      return t4.priority - e10.priority;
    });
  }
} };
var ql = function(e9, t3, n2) {
  for (var r2 = e9.beforeRenderCallbacks, i2 = 0; i2 < r2.length; i2++)
    r2[i2].fn(t3, n2);
};
jl.startRenderLoop = function() {
  var e9 = this, t3 = e9.cy;
  if (!e9.renderLoopStarted) {
    e9.renderLoopStarted = true;
    me(function n2(r2) {
      if (!e9.destroyed) {
        if (t3.batching())
          ;
        else if (e9.requestedFrame && !e9.skipFrame) {
          ql(e9, true, r2);
          var i2 = be();
          e9.render(e9.renderOptions);
          var a2 = e9.lastDrawTime = be();
          void 0 === e9.averageRedrawTime && (e9.averageRedrawTime = a2 - i2), void 0 === e9.redrawCount && (e9.redrawCount = 0), e9.redrawCount++, void 0 === e9.redrawTotalTime && (e9.redrawTotalTime = 0);
          var o2 = a2 - i2;
          e9.redrawTotalTime += o2, e9.lastRedrawTime = o2, e9.averageRedrawTime = e9.averageRedrawTime / 2 + o2 / 2, e9.requestedFrame = false;
        } else
          ql(e9, false, r2);
        e9.skipFrame = false, me(n2);
      }
    });
  }
};
var Yl = function(e9) {
  this.init(e9);
};
var Xl = Yl.prototype;
Xl.clientFunctions = ["redrawHint", "render", "renderTo", "matchCanvasSize", "nodeShapeImpl", "arrowShapeImpl"], Xl.init = function(e9) {
  var t3 = this;
  t3.options = e9, t3.cy = e9.cy;
  var n2 = t3.container = e9.cy.container();
  if (s) {
    var r2 = s.document, i2 = r2.head, a2 = "__________cytoscape_container", o2 = null != r2.getElementById("__________cytoscape_stylesheet");
    if (n2.className.indexOf(a2) < 0 && (n2.className = (n2.className || "") + " " + a2), !o2) {
      var l2 = r2.createElement("style");
      l2.id = "__________cytoscape_stylesheet", l2.innerHTML = "." + a2 + " { position: relative; }", i2.insertBefore(l2, i2.children[0]);
    }
    "static" === s.getComputedStyle(n2).getPropertyValue("position") && Ve("A Cytoscape container has style position:static and so can not use UI extensions properly");
  }
  t3.selection = [void 0, void 0, void 0, void 0, 0], t3.bezierProjPcts = [0.05, 0.225, 0.4, 0.5, 0.6, 0.775, 0.95], t3.hoverData = { down: null, last: null, downTime: null, triggerMode: null, dragging: false, initialPan: [null, null], capture: false }, t3.dragData = { possibleDragElements: [] }, t3.touchData = { start: null, capture: false, startPosition: [null, null, null, null, null, null], singleTouchStartTime: null, singleTouchMoved: true, now: [null, null, null, null, null, null], earlier: [null, null, null, null, null, null] }, t3.redraws = 0, t3.showFps = e9.showFps, t3.debug = e9.debug, t3.hideEdgesOnViewport = e9.hideEdgesOnViewport, t3.textureOnViewport = e9.textureOnViewport, t3.wheelSensitivity = e9.wheelSensitivity, t3.motionBlurEnabled = e9.motionBlur, t3.forcedPixelRatio = m(e9.pixelRatio) ? e9.pixelRatio : null, t3.motionBlur = e9.motionBlur, t3.motionBlurOpacity = e9.motionBlurOpacity, t3.motionBlurTransparency = 1 - t3.motionBlurOpacity, t3.motionBlurPxRatio = 1, t3.mbPxRBlurry = 1, t3.minMbLowQualFrames = 4, t3.fullQualityMb = false, t3.clearedForMotionBlur = [], t3.desktopTapThreshold = e9.desktopTapThreshold, t3.desktopTapThreshold2 = e9.desktopTapThreshold * e9.desktopTapThreshold, t3.touchTapThreshold = e9.touchTapThreshold, t3.touchTapThreshold2 = e9.touchTapThreshold * e9.touchTapThreshold, t3.tapholdDuration = 500, t3.bindings = [], t3.beforeRenderCallbacks = [], t3.beforeRenderPriorities = { animations: 400, eleCalcs: 300, eleTxrDeq: 200, lyrTxrDeq: 150, lyrTxrSkip: 100 }, t3.registerNodeShapes(), t3.registerArrowShapes(), t3.registerCalculationListeners();
}, Xl.notify = function(e9, t3) {
  var n2 = this, r2 = n2.cy;
  this.destroyed || ("init" !== e9 ? "destroy" !== e9 ? (("add" === e9 || "remove" === e9 || "move" === e9 && r2.hasCompoundNodes() || "load" === e9 || "zorder" === e9 || "mount" === e9) && n2.invalidateCachedZSortedEles(), "viewport" === e9 && n2.redrawHint("select", true), "load" !== e9 && "resize" !== e9 && "mount" !== e9 || (n2.invalidateContainerClientCoordsCache(), n2.matchCanvasSize(n2.container)), n2.redrawHint("eles", true), n2.redrawHint("drag", true), this.startRenderLoop(), this.redraw()) : n2.destroy() : n2.load());
}, Xl.destroy = function() {
  var e9 = this;
  e9.destroyed = true, e9.cy.stopAnimationLoop();
  for (var t3 = 0; t3 < e9.bindings.length; t3++) {
    var n2 = e9.bindings[t3], r2 = n2.target;
    (r2.off || r2.removeEventListener).apply(r2, n2.args);
  }
  if (e9.bindings = [], e9.beforeRenderCallbacks = [], e9.onUpdateEleCalcsFns = [], e9.removeObserver && e9.removeObserver.disconnect(), e9.styleObserver && e9.styleObserver.disconnect(), e9.resizeObserver && e9.resizeObserver.disconnect(), e9.labelCalcDiv)
    try {
      document.body.removeChild(e9.labelCalcDiv);
    } catch (e10) {
    }
}, Xl.isHeadless = function() {
  return false;
}, [El, Ol, Rl, Vl, Fl, jl].forEach(function(e9) {
  I(Xl, e9);
});
var Wl = function(e9) {
  return function() {
    var t3 = this, n2 = this.renderer;
    if (!t3.dequeueingSetup) {
      t3.dequeueingSetup = true;
      var r2 = fe(function() {
        n2.redrawHint("eles", true), n2.redrawHint("drag", true), n2.redraw();
      }, e9.deqRedrawThreshold), i2 = e9.priority || Le;
      n2.beforeRender(function(i3, a2) {
        var o2 = be(), s2 = n2.averageRedrawTime, l2 = n2.lastRedrawTime, u2 = [], c2 = n2.cy.extent(), d2 = n2.getPixelRatio();
        for (i3 || n2.flushRenderedStyleQueue(); ; ) {
          var h2 = be(), p2 = h2 - o2, f2 = h2 - a2;
          if (l2 < 1e3 / 60) {
            var g2 = 1e3 / 60 - (i3 ? s2 : 0);
            if (f2 >= e9.deqFastCost * g2)
              break;
          } else if (i3) {
            if (p2 >= e9.deqCost * l2 || p2 >= e9.deqAvgCost * s2)
              break;
          } else if (f2 >= e9.deqNoDrawCost * (1e3 / 60))
            break;
          var v2 = e9.deq(t3, d2, c2);
          if (!(v2.length > 0))
            break;
          for (var y2 = 0; y2 < v2.length; y2++)
            u2.push(v2[y2]);
        }
        u2.length > 0 && (e9.onDeqd(t3, u2), !i3 && e9.shouldRedraw(t3, u2, d2, c2) && r2());
      }, i2(t3));
    }
  };
};
var Hl = function() {
  function e9(n2) {
    var r2 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Ie;
    t(this, e9), this.idsByKey = new Ue(), this.keyForId = new Ue(), this.cachesByLvl = new Ue(), this.lvls = [], this.getKey = n2, this.doesEleInvalidateKey = r2;
  }
  return r(e9, [{ key: "getIdsFor", value: function(e10) {
    null == e10 && Oe("Can not get id list for null key");
    var t3 = this.idsByKey, n2 = this.idsByKey.get(e10);
    return n2 || (n2 = new $e(), t3.set(e10, n2)), n2;
  } }, { key: "addIdForKey", value: function(e10, t3) {
    null != e10 && this.getIdsFor(e10).add(t3);
  } }, { key: "deleteIdForKey", value: function(e10, t3) {
    null != e10 && this.getIdsFor(e10).delete(t3);
  } }, { key: "getNumberOfIdsForKey", value: function(e10) {
    return null == e10 ? 0 : this.getIdsFor(e10).size;
  } }, { key: "updateKeyMappingFor", value: function(e10) {
    var t3 = e10.id(), n2 = this.keyForId.get(t3), r2 = this.getKey(e10);
    this.deleteIdForKey(n2, t3), this.addIdForKey(r2, t3), this.keyForId.set(t3, r2);
  } }, { key: "deleteKeyMappingFor", value: function(e10) {
    var t3 = e10.id(), n2 = this.keyForId.get(t3);
    this.deleteIdForKey(n2, t3), this.keyForId.delete(t3);
  } }, { key: "keyHasChangedFor", value: function(e10) {
    var t3 = e10.id();
    return this.keyForId.get(t3) !== this.getKey(e10);
  } }, { key: "isInvalid", value: function(e10) {
    return this.keyHasChangedFor(e10) || this.doesEleInvalidateKey(e10);
  } }, { key: "getCachesAt", value: function(e10) {
    var t3 = this.cachesByLvl, n2 = this.lvls, r2 = t3.get(e10);
    return r2 || (r2 = new Ue(), t3.set(e10, r2), n2.push(e10)), r2;
  } }, { key: "getCache", value: function(e10, t3) {
    return this.getCachesAt(t3).get(e10);
  } }, { key: "get", value: function(e10, t3) {
    var n2 = this.getKey(e10), r2 = this.getCache(n2, t3);
    return null != r2 && this.updateKeyMappingFor(e10), r2;
  } }, { key: "getForCachedKey", value: function(e10, t3) {
    var n2 = this.keyForId.get(e10.id());
    return this.getCache(n2, t3);
  } }, { key: "hasCache", value: function(e10, t3) {
    return this.getCachesAt(t3).has(e10);
  } }, { key: "has", value: function(e10, t3) {
    var n2 = this.getKey(e10);
    return this.hasCache(n2, t3);
  } }, { key: "setCache", value: function(e10, t3, n2) {
    n2.key = e10, this.getCachesAt(t3).set(e10, n2);
  } }, { key: "set", value: function(e10, t3, n2) {
    var r2 = this.getKey(e10);
    this.setCache(r2, t3, n2), this.updateKeyMappingFor(e10);
  } }, { key: "deleteCache", value: function(e10, t3) {
    this.getCachesAt(t3).delete(e10);
  } }, { key: "delete", value: function(e10, t3) {
    var n2 = this.getKey(e10);
    this.deleteCache(n2, t3);
  } }, { key: "invalidateKey", value: function(e10) {
    var t3 = this;
    this.lvls.forEach(function(n2) {
      return t3.deleteCache(e10, n2);
    });
  } }, { key: "invalidate", value: function(e10) {
    var t3 = e10.id(), n2 = this.keyForId.get(t3);
    this.deleteKeyMappingFor(e10);
    var r2 = this.doesEleInvalidateKey(e10);
    return r2 && this.invalidateKey(n2), r2 || 0 === this.getNumberOfIdsForKey(n2);
  } }]), e9;
}();
var Kl = { dequeue: "dequeue", downscale: "downscale", highQuality: "highQuality" };
var Gl = Xe({ getKey: null, doesEleInvalidateKey: Ie, drawElement: null, getBoundingBox: null, getRotationPoint: null, getRotationOffset: null, isVisible: ze, allowEdgeTxrCaching: true, allowParentTxrCaching: true });
var Ul = function(e9, t3) {
  this.renderer = e9, this.onDequeues = [];
  var n2 = Gl(t3);
  I(this, n2), this.lookup = new Hl(n2.getKey, n2.doesEleInvalidateKey), this.setupDequeueing();
};
var Zl = Ul.prototype;
Zl.reasons = Kl, Zl.getTextureQueue = function(e9) {
  return this.eleImgCaches = this.eleImgCaches || {}, this.eleImgCaches[e9] = this.eleImgCaches[e9] || [];
}, Zl.getRetiredTextureQueue = function(e9) {
  var t3 = this.eleImgCaches.retired = this.eleImgCaches.retired || {};
  return t3[e9] = t3[e9] || [];
}, Zl.getElementQueue = function() {
  return this.eleCacheQueue = this.eleCacheQueue || new tt(function(e9, t3) {
    return t3.reqs - e9.reqs;
  });
}, Zl.getElementKeyToQueue = function() {
  return this.eleKeyToCacheQueue = this.eleKeyToCacheQueue || {};
}, Zl.getElement = function(e9, t3, n2, r2, i2) {
  var a2 = this, o2 = this.renderer, s2 = o2.cy.zoom(), l2 = this.lookup;
  if (!t3 || 0 === t3.w || 0 === t3.h || isNaN(t3.w) || isNaN(t3.h) || !e9.visible() || e9.removed())
    return null;
  if (!a2.allowEdgeTxrCaching && e9.isEdge() || !a2.allowParentTxrCaching && e9.isParent())
    return null;
  if (null == r2 && (r2 = Math.ceil(bt(s2 * n2))), r2 < -4)
    r2 = -4;
  else if (s2 >= 7.99 || r2 > 3)
    return null;
  var u2 = Math.pow(2, r2), c2 = t3.h * u2, d2 = t3.w * u2, h2 = o2.eleTextBiggerThanMin(e9, u2);
  if (!this.isVisible(e9, h2))
    return null;
  var p2, f2 = l2.get(e9, r2);
  if (f2 && f2.invalidated && (f2.invalidated = false, f2.texture.invalidatedWidth -= f2.width), f2)
    return f2;
  if (p2 = c2 <= 25 ? 25 : c2 <= 50 ? 50 : 50 * Math.ceil(c2 / 50), c2 > 1024 || d2 > 1024)
    return null;
  var g2 = a2.getTextureQueue(p2), v2 = g2[g2.length - 2], y2 = function() {
    return a2.recycleTexture(p2, d2) || a2.addTexture(p2, d2);
  };
  v2 || (v2 = g2[g2.length - 1]), v2 || (v2 = y2()), v2.width - v2.usedWidth < d2 && (v2 = y2());
  for (var m2, b2 = function(e10) {
    return e10 && e10.scaledLabelShown === h2;
  }, x2 = i2 && i2 === Kl.dequeue, w2 = i2 && i2 === Kl.highQuality, E2 = i2 && i2 === Kl.downscale, k2 = r2 + 1; k2 <= 3; k2++) {
    var C2 = l2.get(e9, k2);
    if (C2) {
      m2 = C2;
      break;
    }
  }
  var S2 = m2 && m2.level === r2 + 1 ? m2 : null, P2 = function() {
    v2.context.drawImage(S2.texture.canvas, S2.x, 0, S2.width, S2.height, v2.usedWidth, 0, d2, c2);
  };
  if (v2.context.setTransform(1, 0, 0, 1, 0, 0), v2.context.clearRect(v2.usedWidth, 0, d2, p2), b2(S2))
    P2();
  else if (b2(m2)) {
    if (!w2)
      return a2.queueElement(e9, m2.level - 1), m2;
    for (var D2 = m2.level; D2 > r2; D2--)
      S2 = a2.getElement(e9, t3, n2, D2, Kl.downscale);
    P2();
  } else {
    var T2;
    if (!x2 && !w2 && !E2)
      for (var _2 = r2 - 1; _2 >= -4; _2--) {
        var M2 = l2.get(e9, _2);
        if (M2) {
          T2 = M2;
          break;
        }
      }
    if (b2(T2))
      return a2.queueElement(e9, r2), T2;
    v2.context.translate(v2.usedWidth, 0), v2.context.scale(u2, u2), this.drawElement(v2.context, e9, t3, h2, false), v2.context.scale(1 / u2, 1 / u2), v2.context.translate(-v2.usedWidth, 0);
  }
  return f2 = { x: v2.usedWidth, texture: v2, level: r2, scale: u2, width: d2, height: c2, scaledLabelShown: h2 }, v2.usedWidth += Math.ceil(d2 + 8), v2.eleCaches.push(f2), l2.set(e9, r2, f2), a2.checkTextureFullness(v2), f2;
}, Zl.invalidateElements = function(e9) {
  for (var t3 = 0; t3 < e9.length; t3++)
    this.invalidateElement(e9[t3]);
}, Zl.invalidateElement = function(e9) {
  var t3 = this.lookup, n2 = [];
  if (t3.isInvalid(e9)) {
    for (var r2 = -4; r2 <= 3; r2++) {
      var i2 = t3.getForCachedKey(e9, r2);
      i2 && n2.push(i2);
    }
    if (t3.invalidate(e9))
      for (var a2 = 0; a2 < n2.length; a2++) {
        var o2 = n2[a2], s2 = o2.texture;
        s2.invalidatedWidth += o2.width, o2.invalidated = true, this.checkTextureUtility(s2);
      }
    this.removeFromQueue(e9);
  }
}, Zl.checkTextureUtility = function(e9) {
  e9.invalidatedWidth >= 0.2 * e9.width && this.retireTexture(e9);
}, Zl.checkTextureFullness = function(e9) {
  var t3 = this.getTextureQueue(e9.height);
  e9.usedWidth / e9.width > 0.8 && e9.fullnessChecks >= 10 ? We(t3, e9) : e9.fullnessChecks++;
}, Zl.retireTexture = function(e9) {
  var t3 = e9.height, n2 = this.getTextureQueue(t3), r2 = this.lookup;
  We(n2, e9), e9.retired = true;
  for (var i2 = e9.eleCaches, a2 = 0; a2 < i2.length; a2++) {
    var o2 = i2[a2];
    r2.deleteCache(o2.key, o2.level);
  }
  He(i2), this.getRetiredTextureQueue(t3).push(e9);
}, Zl.addTexture = function(e9, t3) {
  var n2 = {};
  return this.getTextureQueue(e9).push(n2), n2.eleCaches = [], n2.height = e9, n2.width = Math.max(1024, t3), n2.usedWidth = 0, n2.invalidatedWidth = 0, n2.fullnessChecks = 0, n2.canvas = this.renderer.makeOffscreenCanvas(n2.width, n2.height), n2.context = n2.canvas.getContext("2d"), n2;
}, Zl.recycleTexture = function(e9, t3) {
  for (var n2 = this.getTextureQueue(e9), r2 = this.getRetiredTextureQueue(e9), i2 = 0; i2 < r2.length; i2++) {
    var a2 = r2[i2];
    if (a2.width >= t3)
      return a2.retired = false, a2.usedWidth = 0, a2.invalidatedWidth = 0, a2.fullnessChecks = 0, He(a2.eleCaches), a2.context.setTransform(1, 0, 0, 1, 0, 0), a2.context.clearRect(0, 0, a2.width, a2.height), We(r2, a2), n2.push(a2), a2;
  }
}, Zl.queueElement = function(e9, t3) {
  var n2 = this.getElementQueue(), r2 = this.getElementKeyToQueue(), i2 = this.getKey(e9), a2 = r2[i2];
  if (a2)
    a2.level = Math.max(a2.level, t3), a2.eles.merge(e9), a2.reqs++, n2.updateItem(a2);
  else {
    var o2 = { eles: e9.spawn().merge(e9), level: t3, reqs: 1, key: i2 };
    n2.push(o2), r2[i2] = o2;
  }
}, Zl.dequeue = function(e9) {
  for (var t3 = this.getElementQueue(), n2 = this.getElementKeyToQueue(), r2 = [], i2 = this.lookup, a2 = 0; a2 < 1 && t3.size() > 0; a2++) {
    var o2 = t3.pop(), s2 = o2.key, l2 = o2.eles[0], u2 = i2.hasCache(l2, o2.level);
    if (n2[s2] = null, !u2) {
      r2.push(o2);
      var c2 = this.getBoundingBox(l2);
      this.getElement(l2, c2, e9, o2.level, Kl.dequeue);
    }
  }
  return r2;
}, Zl.removeFromQueue = function(e9) {
  var t3 = this.getElementQueue(), n2 = this.getElementKeyToQueue(), r2 = this.getKey(e9), i2 = n2[r2];
  null != i2 && (1 === i2.eles.length ? (i2.reqs = Ne, t3.updateItem(i2), t3.pop(), n2[r2] = null) : i2.eles.unmerge(e9));
}, Zl.onDequeue = function(e9) {
  this.onDequeues.push(e9);
}, Zl.offDequeue = function(e9) {
  We(this.onDequeues, e9);
}, Zl.setupDequeueing = Wl({ deqRedrawThreshold: 100, deqCost: 0.15, deqAvgCost: 0.1, deqNoDrawCost: 0.9, deqFastCost: 0.9, deq: function(e9, t3, n2) {
  return e9.dequeue(t3, n2);
}, onDeqd: function(e9, t3) {
  for (var n2 = 0; n2 < e9.onDequeues.length; n2++) {
    (0, e9.onDequeues[n2])(t3);
  }
}, shouldRedraw: function(e9, t3, n2, r2) {
  for (var i2 = 0; i2 < t3.length; i2++)
    for (var a2 = t3[i2].eles, o2 = 0; o2 < a2.length; o2++) {
      var s2 = a2[o2].boundingBox();
      if (Nt(s2, r2))
        return true;
    }
  return false;
}, priority: function(e9) {
  return e9.renderer.beforeRenderPriorities.eleTxrDeq;
} });
var $l = function(e9) {
  var t3 = this, n2 = t3.renderer = e9, r2 = n2.cy;
  t3.layersByLevel = {}, t3.firstGet = true, t3.lastInvalidationTime = be() - 500, t3.skipping = false, t3.eleTxrDeqs = r2.collection(), t3.scheduleElementRefinement = fe(function() {
    t3.refineElementTextures(t3.eleTxrDeqs), t3.eleTxrDeqs.unmerge(t3.eleTxrDeqs);
  }, 50), n2.beforeRender(function(e10, n3) {
    n3 - t3.lastInvalidationTime <= 250 ? t3.skipping = true : t3.skipping = false;
  }, n2.beforeRenderPriorities.lyrTxrSkip);
  t3.layersQueue = new tt(function(e10, t4) {
    return t4.reqs - e10.reqs;
  }), t3.setupDequeueing();
};
var Ql = $l.prototype;
var Jl = 0;
var eu = Math.pow(2, 53) - 1;
Ql.makeLayer = function(e9, t3) {
  var n2 = Math.pow(2, t3), r2 = Math.ceil(e9.w * n2), i2 = Math.ceil(e9.h * n2), a2 = this.renderer.makeOffscreenCanvas(r2, i2), o2 = { id: Jl = ++Jl % eu, bb: e9, level: t3, width: r2, height: i2, canvas: a2, context: a2.getContext("2d"), eles: [], elesQueue: [], reqs: 0 }, s2 = o2.context, l2 = -o2.bb.x1, u2 = -o2.bb.y1;
  return s2.scale(n2, n2), s2.translate(l2, u2), o2;
}, Ql.getLayers = function(e9, t3, n2) {
  var r2 = this, i2 = r2.renderer.cy.zoom(), a2 = r2.firstGet;
  if (r2.firstGet = false, null == n2) {
    if ((n2 = Math.ceil(bt(i2 * t3))) < -4)
      n2 = -4;
    else if (i2 >= 3.99 || n2 > 2)
      return null;
  }
  r2.validateLayersElesOrdering(n2, e9);
  var o2, s2, l2 = r2.layersByLevel, u2 = Math.pow(2, n2), c2 = l2[n2] = l2[n2] || [];
  if (r2.levelIsComplete(n2, e9))
    return c2;
  !function() {
    var t4 = function(t5) {
      if (r2.validateLayersElesOrdering(t5, e9), r2.levelIsComplete(t5, e9))
        return s2 = l2[t5], true;
    }, i3 = function(e10) {
      if (!s2)
        for (var r3 = n2 + e10; -4 <= r3 && r3 <= 2 && !t4(r3); r3 += e10)
          ;
    };
    i3(1), i3(-1);
    for (var a3 = c2.length - 1; a3 >= 0; a3--) {
      var o3 = c2[a3];
      o3.invalid && We(c2, o3);
    }
  }();
  var d2 = function(t4) {
    var i3 = (t4 = t4 || {}).after;
    if (function() {
      if (!o2) {
        o2 = Dt();
        for (var t5 = 0; t5 < e9.length; t5++)
          n3 = o2, r3 = e9[t5].boundingBox(), n3.x1 = Math.min(n3.x1, r3.x1), n3.x2 = Math.max(n3.x2, r3.x2), n3.w = n3.x2 - n3.x1, n3.y1 = Math.min(n3.y1, r3.y1), n3.y2 = Math.max(n3.y2, r3.y2), n3.h = n3.y2 - n3.y1;
      }
      var n3, r3;
    }(), o2.w * u2 * (o2.h * u2) > 16e6)
      return null;
    var a3 = r2.makeLayer(o2, n2);
    if (null != i3) {
      var s3 = c2.indexOf(i3) + 1;
      c2.splice(s3, 0, a3);
    } else
      (void 0 === t4.insert || t4.insert) && c2.unshift(a3);
    return a3;
  };
  if (r2.skipping && !a2)
    return null;
  for (var h2 = null, p2 = e9.length / 1, f2 = !a2, g2 = 0; g2 < e9.length; g2++) {
    var v2 = e9[g2], y2 = v2._private.rscratch, m2 = y2.imgLayerCaches = y2.imgLayerCaches || {}, b2 = m2[n2];
    if (b2)
      h2 = b2;
    else {
      if ((!h2 || h2.eles.length >= p2 || !It(h2.bb, v2.boundingBox())) && !(h2 = d2({ insert: true, after: h2 })))
        return null;
      s2 || f2 ? r2.queueLayer(h2, v2) : r2.drawEleInLayer(h2, v2, n2, t3), h2.eles.push(v2), m2[n2] = h2;
    }
  }
  return s2 || (f2 ? null : c2);
}, Ql.getEleLevelForLayerLevel = function(e9, t3) {
  return e9;
}, Ql.drawEleInLayer = function(e9, t3, n2, r2) {
  var i2 = this.renderer, a2 = e9.context, o2 = t3.boundingBox();
  0 !== o2.w && 0 !== o2.h && t3.visible() && (n2 = this.getEleLevelForLayerLevel(n2, r2), i2.setImgSmoothing(a2, false), i2.drawCachedElement(a2, t3, null, null, n2, true), i2.setImgSmoothing(a2, true));
}, Ql.levelIsComplete = function(e9, t3) {
  var n2 = this.layersByLevel[e9];
  if (!n2 || 0 === n2.length)
    return false;
  for (var r2 = 0, i2 = 0; i2 < n2.length; i2++) {
    var a2 = n2[i2];
    if (a2.reqs > 0)
      return false;
    if (a2.invalid)
      return false;
    r2 += a2.eles.length;
  }
  return r2 === t3.length;
}, Ql.validateLayersElesOrdering = function(e9, t3) {
  var n2 = this.layersByLevel[e9];
  if (n2)
    for (var r2 = 0; r2 < n2.length; r2++) {
      for (var i2 = n2[r2], a2 = -1, o2 = 0; o2 < t3.length; o2++)
        if (i2.eles[0] === t3[o2]) {
          a2 = o2;
          break;
        }
      if (a2 < 0)
        this.invalidateLayer(i2);
      else {
        var s2 = a2;
        for (o2 = 0; o2 < i2.eles.length; o2++)
          if (i2.eles[o2] !== t3[s2 + o2]) {
            this.invalidateLayer(i2);
            break;
          }
      }
    }
}, Ql.updateElementsInLayers = function(e9, t3) {
  for (var n2 = w(e9[0]), r2 = 0; r2 < e9.length; r2++)
    for (var i2 = n2 ? null : e9[r2], a2 = n2 ? e9[r2] : e9[r2].ele, o2 = a2._private.rscratch, s2 = o2.imgLayerCaches = o2.imgLayerCaches || {}, l2 = -4; l2 <= 2; l2++) {
      var u2 = s2[l2];
      u2 && (i2 && this.getEleLevelForLayerLevel(u2.level) !== i2.level || t3(u2, a2, i2));
    }
}, Ql.haveLayers = function() {
  for (var e9 = false, t3 = -4; t3 <= 2; t3++) {
    var n2 = this.layersByLevel[t3];
    if (n2 && n2.length > 0) {
      e9 = true;
      break;
    }
  }
  return e9;
}, Ql.invalidateElements = function(e9) {
  var t3 = this;
  0 !== e9.length && (t3.lastInvalidationTime = be(), 0 !== e9.length && t3.haveLayers() && t3.updateElementsInLayers(e9, function(e10, n2, r2) {
    t3.invalidateLayer(e10);
  }));
}, Ql.invalidateLayer = function(e9) {
  if (this.lastInvalidationTime = be(), !e9.invalid) {
    var t3 = e9.level, n2 = e9.eles, r2 = this.layersByLevel[t3];
    We(r2, e9), e9.elesQueue = [], e9.invalid = true, e9.replacement && (e9.replacement.invalid = true);
    for (var i2 = 0; i2 < n2.length; i2++) {
      var a2 = n2[i2]._private.rscratch.imgLayerCaches;
      a2 && (a2[t3] = null);
    }
  }
}, Ql.refineElementTextures = function(e9) {
  var t3 = this;
  t3.updateElementsInLayers(e9, function(e10, n2, r2) {
    var i2 = e10.replacement;
    if (i2 || ((i2 = e10.replacement = t3.makeLayer(e10.bb, e10.level)).replaces = e10, i2.eles = e10.eles), !i2.reqs)
      for (var a2 = 0; a2 < i2.eles.length; a2++)
        t3.queueLayer(i2, i2.eles[a2]);
  });
}, Ql.enqueueElementRefinement = function(e9) {
  this.eleTxrDeqs.merge(e9), this.scheduleElementRefinement();
}, Ql.queueLayer = function(e9, t3) {
  var n2 = this.layersQueue, r2 = e9.elesQueue, i2 = r2.hasId = r2.hasId || {};
  if (!e9.replacement) {
    if (t3) {
      if (i2[t3.id()])
        return;
      r2.push(t3), i2[t3.id()] = true;
    }
    e9.reqs ? (e9.reqs++, n2.updateItem(e9)) : (e9.reqs = 1, n2.push(e9));
  }
}, Ql.dequeue = function(e9) {
  for (var t3 = this.layersQueue, n2 = [], r2 = 0; r2 < 1 && 0 !== t3.size(); ) {
    var i2 = t3.peek();
    if (i2.replacement)
      t3.pop();
    else if (i2.replaces && i2 !== i2.replaces.replacement)
      t3.pop();
    else if (i2.invalid)
      t3.pop();
    else {
      var a2 = i2.elesQueue.shift();
      a2 && (this.drawEleInLayer(i2, a2, i2.level, e9), r2++), 0 === n2.length && n2.push(true), 0 === i2.elesQueue.length && (t3.pop(), i2.reqs = 0, i2.replaces && this.applyLayerReplacement(i2), this.requestRedraw());
    }
  }
  return n2;
}, Ql.applyLayerReplacement = function(e9) {
  var t3 = this.layersByLevel[e9.level], n2 = e9.replaces, r2 = t3.indexOf(n2);
  if (!(r2 < 0 || n2.invalid)) {
    t3[r2] = e9;
    for (var i2 = 0; i2 < e9.eles.length; i2++) {
      var a2 = e9.eles[i2]._private, o2 = a2.imgLayerCaches = a2.imgLayerCaches || {};
      o2 && (o2[e9.level] = e9);
    }
    this.requestRedraw();
  }
}, Ql.requestRedraw = fe(function() {
  var e9 = this.renderer;
  e9.redrawHint("eles", true), e9.redrawHint("drag", true), e9.redraw();
}, 100), Ql.setupDequeueing = Wl({ deqRedrawThreshold: 50, deqCost: 0.15, deqAvgCost: 0.1, deqNoDrawCost: 0.9, deqFastCost: 0.9, deq: function(e9, t3) {
  return e9.dequeue(t3);
}, onDeqd: Le, shouldRedraw: ze, priority: function(e9) {
  return e9.renderer.beforeRenderPriorities.lyrTxrDeq;
} });
var tu;
var nu = {};
function ru(e9, t3) {
  for (var n2 = 0; n2 < t3.length; n2++) {
    var r2 = t3[n2];
    e9.lineTo(r2.x, r2.y);
  }
}
function iu(e9, t3, n2) {
  for (var r2, i2 = 0; i2 < t3.length; i2++) {
    var a2 = t3[i2];
    0 === i2 && (r2 = a2), e9.lineTo(a2.x, a2.y);
  }
  e9.quadraticCurveTo(n2.x, n2.y, r2.x, r2.y);
}
function au(e9, t3, n2) {
  e9.beginPath && e9.beginPath();
  for (var r2 = t3, i2 = 0; i2 < r2.length; i2++) {
    var a2 = r2[i2];
    e9.lineTo(a2.x, a2.y);
  }
  var o2 = n2, s2 = n2[0];
  e9.moveTo(s2.x, s2.y);
  for (i2 = 1; i2 < o2.length; i2++) {
    a2 = o2[i2];
    e9.lineTo(a2.x, a2.y);
  }
  e9.closePath && e9.closePath();
}
function ou(e9, t3, n2, r2, i2) {
  e9.beginPath && e9.beginPath(), e9.arc(n2, r2, i2, 0, 2 * Math.PI, false);
  var a2 = t3, o2 = a2[0];
  e9.moveTo(o2.x, o2.y);
  for (var s2 = 0; s2 < a2.length; s2++) {
    var l2 = a2[s2];
    e9.lineTo(l2.x, l2.y);
  }
  e9.closePath && e9.closePath();
}
function su(e9, t3, n2, r2) {
  e9.arc(t3, n2, r2, 0, 2 * Math.PI, false);
}
nu.arrowShapeImpl = function(e9) {
  return (tu || (tu = { polygon: ru, "triangle-backcurve": iu, "triangle-tee": au, "circle-triangle": ou, "triangle-cross": au, circle: su }))[e9];
};
var lu = { drawElement: function(e9, t3, n2, r2, i2, a2) {
  t3.isNode() ? this.drawNode(e9, t3, n2, r2, i2, a2) : this.drawEdge(e9, t3, n2, r2, i2, a2);
}, drawElementOverlay: function(e9, t3) {
  t3.isNode() ? this.drawNodeOverlay(e9, t3) : this.drawEdgeOverlay(e9, t3);
}, drawElementUnderlay: function(e9, t3) {
  t3.isNode() ? this.drawNodeUnderlay(e9, t3) : this.drawEdgeUnderlay(e9, t3);
}, drawCachedElementPortion: function(e9, t3, n2, r2, i2, a2, o2, s2) {
  var l2 = this, u2 = n2.getBoundingBox(t3);
  if (0 !== u2.w && 0 !== u2.h) {
    var c2 = n2.getElement(t3, u2, r2, i2, a2);
    if (null != c2) {
      var d2 = s2(l2, t3);
      if (0 === d2)
        return;
      var h2, p2, f2, g2, v2, y2, m2 = o2(l2, t3), b2 = u2.x1, x2 = u2.y1, w2 = u2.w, E2 = u2.h;
      if (0 !== m2) {
        var k2 = n2.getRotationPoint(t3);
        f2 = k2.x, g2 = k2.y, e9.translate(f2, g2), e9.rotate(m2), (v2 = l2.getImgSmoothing(e9)) || l2.setImgSmoothing(e9, true);
        var C2 = n2.getRotationOffset(t3);
        h2 = C2.x, p2 = C2.y;
      } else
        h2 = b2, p2 = x2;
      1 !== d2 && (y2 = e9.globalAlpha, e9.globalAlpha = y2 * d2), e9.drawImage(c2.texture.canvas, c2.x, 0, c2.width, c2.height, h2, p2, w2, E2), 1 !== d2 && (e9.globalAlpha = y2), 0 !== m2 && (e9.rotate(-m2), e9.translate(-f2, -g2), v2 || l2.setImgSmoothing(e9, false));
    } else
      n2.drawElement(e9, t3);
  }
} };
var uu = function() {
  return 0;
};
var cu = function(e9, t3) {
  return e9.getTextAngle(t3, null);
};
var du = function(e9, t3) {
  return e9.getTextAngle(t3, "source");
};
var hu = function(e9, t3) {
  return e9.getTextAngle(t3, "target");
};
var pu = function(e9, t3) {
  return t3.effectiveOpacity();
};
var fu = function(e9, t3) {
  return t3.pstyle("text-opacity").pfValue * t3.effectiveOpacity();
};
lu.drawCachedElement = function(e9, t3, n2, r2, i2, a2) {
  var o2 = this, s2 = o2.data, l2 = s2.eleTxrCache, u2 = s2.lblTxrCache, c2 = s2.slbTxrCache, d2 = s2.tlbTxrCache, h2 = t3.boundingBox(), p2 = true === a2 ? l2.reasons.highQuality : null;
  if (0 !== h2.w && 0 !== h2.h && t3.visible() && (!r2 || Nt(h2, r2))) {
    var f2 = t3.isEdge(), g2 = t3.element()._private.rscratch.badLine;
    o2.drawElementUnderlay(e9, t3), o2.drawCachedElementPortion(e9, t3, l2, n2, i2, p2, uu, pu), f2 && g2 || o2.drawCachedElementPortion(e9, t3, u2, n2, i2, p2, cu, fu), f2 && !g2 && (o2.drawCachedElementPortion(e9, t3, c2, n2, i2, p2, du, fu), o2.drawCachedElementPortion(e9, t3, d2, n2, i2, p2, hu, fu)), o2.drawElementOverlay(e9, t3);
  }
}, lu.drawElements = function(e9, t3) {
  for (var n2 = 0; n2 < t3.length; n2++) {
    var r2 = t3[n2];
    this.drawElement(e9, r2);
  }
}, lu.drawCachedElements = function(e9, t3, n2, r2) {
  for (var i2 = 0; i2 < t3.length; i2++) {
    var a2 = t3[i2];
    this.drawCachedElement(e9, a2, n2, r2);
  }
}, lu.drawCachedNodes = function(e9, t3, n2, r2) {
  for (var i2 = 0; i2 < t3.length; i2++) {
    var a2 = t3[i2];
    a2.isNode() && this.drawCachedElement(e9, a2, n2, r2);
  }
}, lu.drawLayeredElements = function(e9, t3, n2, r2) {
  var i2 = this.data.lyrTxrCache.getLayers(t3, n2);
  if (i2)
    for (var a2 = 0; a2 < i2.length; a2++) {
      var o2 = i2[a2], s2 = o2.bb;
      0 !== s2.w && 0 !== s2.h && e9.drawImage(o2.canvas, s2.x1, s2.y1, s2.w, s2.h);
    }
  else
    this.drawCachedElements(e9, t3, n2, r2);
};
var gu = { drawEdge: function(e9, t3, n2) {
  var r2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], i2 = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], a2 = !(arguments.length > 5 && void 0 !== arguments[5]) || arguments[5], o2 = this, s2 = t3._private.rscratch;
  if ((!a2 || t3.visible()) && !s2.badLine && null != s2.allpts && !isNaN(s2.allpts[0])) {
    var l2;
    n2 && (l2 = n2, e9.translate(-l2.x1, -l2.y1));
    var u2 = a2 ? t3.pstyle("opacity").value : 1, c2 = a2 ? t3.pstyle("line-opacity").value : 1, d2 = t3.pstyle("curve-style").value, h2 = t3.pstyle("line-style").value, p2 = t3.pstyle("width").pfValue, f2 = t3.pstyle("line-cap").value, g2 = u2 * c2, v2 = u2 * c2, y2 = function() {
      var n3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : g2;
      "straight-triangle" === d2 ? (o2.eleStrokeStyle(e9, t3, n3), o2.drawEdgeTrianglePath(t3, e9, s2.allpts)) : (e9.lineWidth = p2, e9.lineCap = f2, o2.eleStrokeStyle(e9, t3, n3), o2.drawEdgePath(t3, e9, s2.allpts, h2), e9.lineCap = "butt");
    }, m2 = function() {
      i2 && o2.drawEdgeOverlay(e9, t3);
    }, b2 = function() {
      i2 && o2.drawEdgeUnderlay(e9, t3);
    }, x2 = function() {
      var n3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : v2;
      o2.drawArrowheads(e9, t3, n3);
    }, w2 = function() {
      o2.drawElementText(e9, t3, null, r2);
    };
    e9.lineJoin = "round";
    var E2 = "yes" === t3.pstyle("ghost").value;
    if (E2) {
      var k2 = t3.pstyle("ghost-offset-x").pfValue, C2 = t3.pstyle("ghost-offset-y").pfValue, S2 = t3.pstyle("ghost-opacity").value, P2 = g2 * S2;
      e9.translate(k2, C2), y2(P2), x2(P2), e9.translate(-k2, -C2);
    }
    b2(), y2(), x2(), m2(), w2(), n2 && e9.translate(l2.x1, l2.y1);
  }
} };
var vu = function(e9) {
  if (!["overlay", "underlay"].includes(e9))
    throw new Error("Invalid state");
  return function(t3, n2) {
    if (n2.visible()) {
      var r2 = n2.pstyle("".concat(e9, "-opacity")).value;
      if (0 !== r2) {
        var i2 = this, a2 = i2.usePaths(), o2 = n2._private.rscratch, s2 = 2 * n2.pstyle("".concat(e9, "-padding")).pfValue, l2 = n2.pstyle("".concat(e9, "-color")).value;
        t3.lineWidth = s2, "self" !== o2.edgeType || a2 ? t3.lineCap = "round" : t3.lineCap = "butt", i2.colorStrokeStyle(t3, l2[0], l2[1], l2[2], r2), i2.drawEdgePath(n2, t3, o2.allpts, "solid");
      }
    }
  };
};
gu.drawEdgeOverlay = vu("overlay"), gu.drawEdgeUnderlay = vu("underlay"), gu.drawEdgePath = function(e9, t3, n2, r2) {
  var i2, a2 = e9._private.rscratch, o2 = t3, s2 = false, l2 = this.usePaths(), u2 = e9.pstyle("line-dash-pattern").pfValue, c2 = e9.pstyle("line-dash-offset").pfValue;
  if (l2) {
    var d2 = n2.join("$");
    a2.pathCacheKey && a2.pathCacheKey === d2 ? (i2 = t3 = a2.pathCache, s2 = true) : (i2 = t3 = new Path2D(), a2.pathCacheKey = d2, a2.pathCache = i2);
  }
  if (o2.setLineDash)
    switch (r2) {
      case "dotted":
        o2.setLineDash([1, 1]);
        break;
      case "dashed":
        o2.setLineDash(u2), o2.lineDashOffset = c2;
        break;
      case "solid":
        o2.setLineDash([]);
    }
  if (!s2 && !a2.badLine)
    switch (t3.beginPath && t3.beginPath(), t3.moveTo(n2[0], n2[1]), a2.edgeType) {
      case "bezier":
      case "self":
      case "compound":
      case "multibezier":
        for (var h2 = 2; h2 + 3 < n2.length; h2 += 4)
          t3.quadraticCurveTo(n2[h2], n2[h2 + 1], n2[h2 + 2], n2[h2 + 3]);
        break;
      case "straight":
      case "segments":
      case "haystack":
        for (var p2 = 2; p2 + 1 < n2.length; p2 += 2)
          t3.lineTo(n2[p2], n2[p2 + 1]);
    }
  t3 = o2, l2 ? t3.stroke(i2) : t3.stroke(), t3.setLineDash && t3.setLineDash([]);
}, gu.drawEdgeTrianglePath = function(e9, t3, n2) {
  t3.fillStyle = t3.strokeStyle;
  for (var r2 = e9.pstyle("width").pfValue, i2 = 0; i2 + 1 < n2.length; i2 += 2) {
    var a2 = [n2[i2 + 2] - n2[i2], n2[i2 + 3] - n2[i2 + 1]], o2 = Math.sqrt(a2[0] * a2[0] + a2[1] * a2[1]), s2 = [a2[1] / o2, -a2[0] / o2], l2 = [s2[0] * r2 / 2, s2[1] * r2 / 2];
    t3.beginPath(), t3.moveTo(n2[i2] - l2[0], n2[i2 + 1] - l2[1]), t3.lineTo(n2[i2] + l2[0], n2[i2 + 1] + l2[1]), t3.lineTo(n2[i2 + 2], n2[i2 + 3]), t3.closePath(), t3.fill();
  }
}, gu.drawArrowheads = function(e9, t3, n2) {
  var r2 = t3._private.rscratch, i2 = "haystack" === r2.edgeType;
  i2 || this.drawArrowhead(e9, t3, "source", r2.arrowStartX, r2.arrowStartY, r2.srcArrowAngle, n2), this.drawArrowhead(e9, t3, "mid-target", r2.midX, r2.midY, r2.midtgtArrowAngle, n2), this.drawArrowhead(e9, t3, "mid-source", r2.midX, r2.midY, r2.midsrcArrowAngle, n2), i2 || this.drawArrowhead(e9, t3, "target", r2.arrowEndX, r2.arrowEndY, r2.tgtArrowAngle, n2);
}, gu.drawArrowhead = function(e9, t3, n2, r2, i2, a2, o2) {
  if (!(isNaN(r2) || null == r2 || isNaN(i2) || null == i2 || isNaN(a2) || null == a2)) {
    var s2 = t3.pstyle(n2 + "-arrow-shape").value;
    if ("none" !== s2) {
      var l2 = "hollow" === t3.pstyle(n2 + "-arrow-fill").value ? "both" : "filled", u2 = t3.pstyle(n2 + "-arrow-fill").value, c2 = t3.pstyle("width").pfValue, d2 = t3.pstyle("opacity").value;
      void 0 === o2 && (o2 = d2);
      var h2 = e9.globalCompositeOperation;
      1 === o2 && "hollow" !== u2 || (e9.globalCompositeOperation = "destination-out", this.colorFillStyle(e9, 255, 255, 255, 1), this.colorStrokeStyle(e9, 255, 255, 255, 1), this.drawArrowShape(t3, e9, l2, c2, s2, r2, i2, a2), e9.globalCompositeOperation = h2);
      var p2 = t3.pstyle(n2 + "-arrow-color").value;
      this.colorFillStyle(e9, p2[0], p2[1], p2[2], o2), this.colorStrokeStyle(e9, p2[0], p2[1], p2[2], o2), this.drawArrowShape(t3, e9, u2, c2, s2, r2, i2, a2);
    }
  }
}, gu.drawArrowShape = function(e9, t3, n2, r2, i2, a2, o2, s2) {
  var l2, u2 = this, c2 = this.usePaths() && "triangle-cross" !== i2, d2 = false, h2 = t3, p2 = { x: a2, y: o2 }, f2 = e9.pstyle("arrow-scale").value, g2 = this.getArrowWidth(r2, f2), v2 = u2.arrowShapes[i2];
  if (c2) {
    var y2 = u2.arrowPathCache = u2.arrowPathCache || [], m2 = Pe(i2), b2 = y2[m2];
    null != b2 ? (l2 = t3 = b2, d2 = true) : (l2 = t3 = new Path2D(), y2[m2] = l2);
  }
  d2 || (t3.beginPath && t3.beginPath(), c2 ? v2.draw(t3, 1, 0, { x: 0, y: 0 }, 1) : v2.draw(t3, g2, s2, p2, r2), t3.closePath && t3.closePath()), t3 = h2, c2 && (t3.translate(a2, o2), t3.rotate(s2), t3.scale(g2, g2)), "filled" !== n2 && "both" !== n2 || (c2 ? t3.fill(l2) : t3.fill()), "hollow" !== n2 && "both" !== n2 || (t3.lineWidth = (v2.matchEdgeWidth ? r2 : 1) / (c2 ? g2 : 1), t3.lineJoin = "miter", c2 ? t3.stroke(l2) : t3.stroke()), c2 && (t3.scale(1 / g2, 1 / g2), t3.rotate(-s2), t3.translate(-a2, -o2));
};
var yu = { safeDrawImage: function(e9, t3, n2, r2, i2, a2, o2, s2, l2, u2) {
  if (!(i2 <= 0 || a2 <= 0 || l2 <= 0 || u2 <= 0))
    try {
      e9.drawImage(t3, n2, r2, i2, a2, o2, s2, l2, u2);
    } catch (e10) {
      Ve(e10);
    }
}, drawInscribedImage: function(e9, t3, n2, r2, i2) {
  var a2 = this, o2 = n2.position(), s2 = o2.x, l2 = o2.y, u2 = n2.cy().style(), c2 = u2.getIndexedStyle.bind(u2), d2 = c2(n2, "background-fit", "value", r2), h2 = c2(n2, "background-repeat", "value", r2), p2 = n2.width(), f2 = n2.height(), g2 = 2 * n2.padding(), v2 = p2 + ("inner" === c2(n2, "background-width-relative-to", "value", r2) ? 0 : g2), y2 = f2 + ("inner" === c2(n2, "background-height-relative-to", "value", r2) ? 0 : g2), m2 = n2._private.rscratch, b2 = "node" === c2(n2, "background-clip", "value", r2), x2 = c2(n2, "background-image-opacity", "value", r2) * i2, w2 = c2(n2, "background-image-smoothing", "value", r2), E2 = t3.width || t3.cachedW, k2 = t3.height || t3.cachedH;
  null != E2 && null != k2 || (document.body.appendChild(t3), E2 = t3.cachedW = t3.width || t3.offsetWidth, k2 = t3.cachedH = t3.height || t3.offsetHeight, document.body.removeChild(t3));
  var C2 = E2, S2 = k2;
  if ("auto" !== c2(n2, "background-width", "value", r2) && (C2 = "%" === c2(n2, "background-width", "units", r2) ? c2(n2, "background-width", "pfValue", r2) * v2 : c2(n2, "background-width", "pfValue", r2)), "auto" !== c2(n2, "background-height", "value", r2) && (S2 = "%" === c2(n2, "background-height", "units", r2) ? c2(n2, "background-height", "pfValue", r2) * y2 : c2(n2, "background-height", "pfValue", r2)), 0 !== C2 && 0 !== S2) {
    if ("contain" === d2)
      C2 *= P2 = Math.min(v2 / C2, y2 / S2), S2 *= P2;
    else if ("cover" === d2) {
      var P2;
      C2 *= P2 = Math.max(v2 / C2, y2 / S2), S2 *= P2;
    }
    var D2 = s2 - v2 / 2, T2 = c2(n2, "background-position-x", "units", r2), _2 = c2(n2, "background-position-x", "pfValue", r2);
    D2 += "%" === T2 ? (v2 - C2) * _2 : _2;
    var M2 = c2(n2, "background-offset-x", "units", r2), B2 = c2(n2, "background-offset-x", "pfValue", r2);
    D2 += "%" === M2 ? (v2 - C2) * B2 : B2;
    var N2 = l2 - y2 / 2, z2 = c2(n2, "background-position-y", "units", r2), I2 = c2(n2, "background-position-y", "pfValue", r2);
    N2 += "%" === z2 ? (y2 - S2) * I2 : I2;
    var A2 = c2(n2, "background-offset-y", "units", r2), L2 = c2(n2, "background-offset-y", "pfValue", r2);
    N2 += "%" === A2 ? (y2 - S2) * L2 : L2, m2.pathCache && (D2 -= s2, N2 -= l2, s2 = 0, l2 = 0);
    var O2 = e9.globalAlpha;
    e9.globalAlpha = x2;
    var R2 = a2.getImgSmoothing(e9), V2 = false;
    if ("no" === w2 && R2 ? (a2.setImgSmoothing(e9, false), V2 = true) : "yes" !== w2 || R2 || (a2.setImgSmoothing(e9, true), V2 = true), "no-repeat" === h2)
      b2 && (e9.save(), m2.pathCache ? e9.clip(m2.pathCache) : (a2.nodeShapes[a2.getNodeShape(n2)].draw(e9, s2, l2, v2, y2), e9.clip())), a2.safeDrawImage(e9, t3, 0, 0, E2, k2, D2, N2, C2, S2), b2 && e9.restore();
    else {
      var F2 = e9.createPattern(t3, h2);
      e9.fillStyle = F2, a2.nodeShapes[a2.getNodeShape(n2)].draw(e9, s2, l2, v2, y2), e9.translate(D2, N2), e9.fill(), e9.translate(-D2, -N2);
    }
    e9.globalAlpha = O2, V2 && a2.setImgSmoothing(e9, R2);
  }
} };
var mu = {};
function bu(e9, t3, n2, r2, i2) {
  var a2 = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 5;
  e9.beginPath(), e9.moveTo(t3 + a2, n2), e9.lineTo(t3 + r2 - a2, n2), e9.quadraticCurveTo(t3 + r2, n2, t3 + r2, n2 + a2), e9.lineTo(t3 + r2, n2 + i2 - a2), e9.quadraticCurveTo(t3 + r2, n2 + i2, t3 + r2 - a2, n2 + i2), e9.lineTo(t3 + a2, n2 + i2), e9.quadraticCurveTo(t3, n2 + i2, t3, n2 + i2 - a2), e9.lineTo(t3, n2 + a2), e9.quadraticCurveTo(t3, n2, t3 + a2, n2), e9.closePath(), e9.fill();
}
mu.eleTextBiggerThanMin = function(e9, t3) {
  if (!t3) {
    var n2 = e9.cy().zoom(), r2 = this.getPixelRatio(), i2 = Math.ceil(bt(n2 * r2));
    t3 = Math.pow(2, i2);
  }
  return !(e9.pstyle("font-size").pfValue * t3 < e9.pstyle("min-zoomed-font-size").pfValue);
}, mu.drawElementText = function(e9, t3, n2, r2, i2) {
  var a2 = !(arguments.length > 5 && void 0 !== arguments[5]) || arguments[5], o2 = this;
  if (null == r2) {
    if (a2 && !o2.eleTextBiggerThanMin(t3))
      return;
  } else if (false === r2)
    return;
  if (t3.isNode()) {
    var s2 = t3.pstyle("label");
    if (!s2 || !s2.value)
      return;
    var l2 = o2.getLabelJustification(t3);
    e9.textAlign = l2, e9.textBaseline = "bottom";
  } else {
    var u2 = t3.element()._private.rscratch.badLine, c2 = t3.pstyle("label"), d2 = t3.pstyle("source-label"), h2 = t3.pstyle("target-label");
    if (u2 || (!c2 || !c2.value) && (!d2 || !d2.value) && (!h2 || !h2.value))
      return;
    e9.textAlign = "center", e9.textBaseline = "bottom";
  }
  var p2, f2 = !n2;
  n2 && (p2 = n2, e9.translate(-p2.x1, -p2.y1)), null == i2 ? (o2.drawText(e9, t3, null, f2, a2), t3.isEdge() && (o2.drawText(e9, t3, "source", f2, a2), o2.drawText(e9, t3, "target", f2, a2))) : o2.drawText(e9, t3, i2, f2, a2), n2 && e9.translate(p2.x1, p2.y1);
}, mu.getFontCache = function(e9) {
  var t3;
  this.fontCaches = this.fontCaches || [];
  for (var n2 = 0; n2 < this.fontCaches.length; n2++)
    if ((t3 = this.fontCaches[n2]).context === e9)
      return t3;
  return t3 = { context: e9 }, this.fontCaches.push(t3), t3;
}, mu.setupTextStyle = function(e9, t3) {
  var n2 = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2], r2 = t3.pstyle("font-style").strValue, i2 = t3.pstyle("font-size").pfValue + "px", a2 = t3.pstyle("font-family").strValue, o2 = t3.pstyle("font-weight").strValue, s2 = n2 ? t3.effectiveOpacity() * t3.pstyle("text-opacity").value : 1, l2 = t3.pstyle("text-outline-opacity").value * s2, u2 = t3.pstyle("color").value, c2 = t3.pstyle("text-outline-color").value;
  e9.font = r2 + " " + o2 + " " + i2 + " " + a2, e9.lineJoin = "round", this.colorFillStyle(e9, u2[0], u2[1], u2[2], s2), this.colorStrokeStyle(e9, c2[0], c2[1], c2[2], l2);
}, mu.getTextAngle = function(e9, t3) {
  var n2 = e9._private.rscratch, r2 = t3 ? t3 + "-" : "", i2 = e9.pstyle(r2 + "text-rotation"), a2 = Ke(n2, "labelAngle", t3);
  return "autorotate" === i2.strValue ? e9.isEdge() ? a2 : 0 : "none" === i2.strValue ? 0 : i2.pfValue;
}, mu.drawText = function(e9, t3, n2) {
  var r2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], i2 = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], a2 = t3._private, o2 = a2.rscratch, s2 = i2 ? t3.effectiveOpacity() : 1;
  if (!i2 || 0 !== s2 && 0 !== t3.pstyle("text-opacity").value) {
    "main" === n2 && (n2 = null);
    var l2, u2, c2 = Ke(o2, "labelX", n2), d2 = Ke(o2, "labelY", n2), h2 = this.getLabelText(t3, n2);
    if (null != h2 && "" !== h2 && !isNaN(c2) && !isNaN(d2)) {
      this.setupTextStyle(e9, t3, i2);
      var p2, f2 = n2 ? n2 + "-" : "", g2 = Ke(o2, "labelWidth", n2), v2 = Ke(o2, "labelHeight", n2), y2 = t3.pstyle(f2 + "text-margin-x").pfValue, m2 = t3.pstyle(f2 + "text-margin-y").pfValue, b2 = t3.isEdge(), x2 = t3.pstyle("text-halign").value, w2 = t3.pstyle("text-valign").value;
      switch (b2 && (x2 = "center", w2 = "center"), c2 += y2, d2 += m2, 0 !== (p2 = r2 ? this.getTextAngle(t3, n2) : 0) && (l2 = c2, u2 = d2, e9.translate(l2, u2), e9.rotate(p2), c2 = 0, d2 = 0), w2) {
        case "top":
          break;
        case "center":
          d2 += v2 / 2;
          break;
        case "bottom":
          d2 += v2;
      }
      var E2 = t3.pstyle("text-background-opacity").value, k2 = t3.pstyle("text-border-opacity").value, C2 = t3.pstyle("text-border-width").pfValue, S2 = t3.pstyle("text-background-padding").pfValue;
      if (E2 > 0 || C2 > 0 && k2 > 0) {
        var P2 = c2 - S2;
        switch (x2) {
          case "left":
            P2 -= g2;
            break;
          case "center":
            P2 -= g2 / 2;
        }
        var D2 = d2 - v2 - S2, T2 = g2 + 2 * S2, _2 = v2 + 2 * S2;
        if (E2 > 0) {
          var M2 = e9.fillStyle, B2 = t3.pstyle("text-background-color").value;
          e9.fillStyle = "rgba(" + B2[0] + "," + B2[1] + "," + B2[2] + "," + E2 * s2 + ")";
          var N2 = t3.pstyle("text-background-shape").strValue;
          0 === N2.indexOf("round") ? bu(e9, P2, D2, T2, _2, 2) : e9.fillRect(P2, D2, T2, _2), e9.fillStyle = M2;
        }
        if (C2 > 0 && k2 > 0) {
          var z2 = e9.strokeStyle, I2 = e9.lineWidth, A2 = t3.pstyle("text-border-color").value, L2 = t3.pstyle("text-border-style").value;
          if (e9.strokeStyle = "rgba(" + A2[0] + "," + A2[1] + "," + A2[2] + "," + k2 * s2 + ")", e9.lineWidth = C2, e9.setLineDash)
            switch (L2) {
              case "dotted":
                e9.setLineDash([1, 1]);
                break;
              case "dashed":
                e9.setLineDash([4, 2]);
                break;
              case "double":
                e9.lineWidth = C2 / 4, e9.setLineDash([]);
                break;
              case "solid":
                e9.setLineDash([]);
            }
          if (e9.strokeRect(P2, D2, T2, _2), "double" === L2) {
            var O2 = C2 / 2;
            e9.strokeRect(P2 + O2, D2 + O2, T2 - 2 * O2, _2 - 2 * O2);
          }
          e9.setLineDash && e9.setLineDash([]), e9.lineWidth = I2, e9.strokeStyle = z2;
        }
      }
      var R2 = 2 * t3.pstyle("text-outline-width").pfValue;
      if (R2 > 0 && (e9.lineWidth = R2), "wrap" === t3.pstyle("text-wrap").value) {
        var V2 = Ke(o2, "labelWrapCachedLines", n2), F2 = Ke(o2, "labelLineHeight", n2), j2 = g2 / 2, q2 = this.getLabelJustification(t3);
        switch ("auto" === q2 || ("left" === x2 ? "left" === q2 ? c2 += -g2 : "center" === q2 && (c2 += -j2) : "center" === x2 ? "left" === q2 ? c2 += -j2 : "right" === q2 && (c2 += j2) : "right" === x2 && ("center" === q2 ? c2 += j2 : "right" === q2 && (c2 += g2))), w2) {
          case "top":
            d2 -= (V2.length - 1) * F2;
            break;
          case "center":
          case "bottom":
            d2 -= (V2.length - 1) * F2;
        }
        for (var Y2 = 0; Y2 < V2.length; Y2++)
          R2 > 0 && e9.strokeText(V2[Y2], c2, d2), e9.fillText(V2[Y2], c2, d2), d2 += F2;
      } else
        R2 > 0 && e9.strokeText(h2, c2, d2), e9.fillText(h2, c2, d2);
      0 !== p2 && (e9.rotate(-p2), e9.translate(-l2, -u2));
    }
  }
};
var xu = { drawNode: function(e9, t3, n2) {
  var r2, i2, a2 = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3], o2 = !(arguments.length > 4 && void 0 !== arguments[4]) || arguments[4], s2 = !(arguments.length > 5 && void 0 !== arguments[5]) || arguments[5], l2 = this, u2 = t3._private, c2 = u2.rscratch, d2 = t3.position();
  if (m(d2.x) && m(d2.y) && (!s2 || t3.visible())) {
    var h2, p2, f2 = s2 ? t3.effectiveOpacity() : 1, g2 = l2.usePaths(), v2 = false, y2 = t3.padding();
    r2 = t3.width() + 2 * y2, i2 = t3.height() + 2 * y2, n2 && (p2 = n2, e9.translate(-p2.x1, -p2.y1));
    for (var b2 = t3.pstyle("background-image"), x2 = b2.value, w2 = new Array(x2.length), E2 = new Array(x2.length), k2 = 0, C2 = 0; C2 < x2.length; C2++) {
      var S2 = x2[C2], P2 = w2[C2] = null != S2 && "none" !== S2;
      if (P2) {
        var D2 = t3.cy().style().getIndexedStyle(t3, "background-image-crossorigin", "value", C2);
        k2++, E2[C2] = l2.getCachedImage(S2, D2, function() {
          u2.backgroundTimestamp = Date.now(), t3.emitAndNotify("background");
        });
      }
    }
    var T2 = t3.pstyle("background-blacken").value, _2 = t3.pstyle("border-width").pfValue, M2 = t3.pstyle("background-opacity").value * f2, B2 = t3.pstyle("border-color").value, N2 = t3.pstyle("border-style").value, z2 = t3.pstyle("border-opacity").value * f2;
    e9.lineJoin = "miter";
    var I2 = function() {
      var n3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : M2;
      l2.eleFillStyle(e9, t3, n3);
    }, A2 = function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : z2;
      l2.colorStrokeStyle(e9, B2[0], B2[1], B2[2], t4);
    }, L2 = t3.pstyle("shape").strValue, O2 = t3.pstyle("shape-polygon-points").pfValue;
    if (g2) {
      e9.translate(d2.x, d2.y);
      var R2 = l2.nodePathCache = l2.nodePathCache || [], V2 = De("polygon" === L2 ? L2 + "," + O2.join(",") : L2, "" + i2, "" + r2), F2 = R2[V2];
      null != F2 ? (h2 = F2, v2 = true, c2.pathCache = h2) : (h2 = new Path2D(), R2[V2] = c2.pathCache = h2);
    }
    var j2 = function() {
      if (!v2) {
        var n3 = d2;
        g2 && (n3 = { x: 0, y: 0 }), l2.nodeShapes[l2.getNodeShape(t3)].draw(h2 || e9, n3.x, n3.y, r2, i2);
      }
      g2 ? e9.fill(h2) : e9.fill();
    }, q2 = function() {
      for (var n3 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : f2, r3 = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], i3 = u2.backgrounding, a3 = 0, o3 = 0; o3 < E2.length; o3++) {
        var s3 = t3.cy().style().getIndexedStyle(t3, "background-image-containment", "value", o3);
        r3 && "over" === s3 || !r3 && "inside" === s3 ? a3++ : w2[o3] && E2[o3].complete && !E2[o3].error && (a3++, l2.drawInscribedImage(e9, E2[o3], t3, o3, n3));
      }
      u2.backgrounding = !(a3 === k2), i3 !== u2.backgrounding && t3.updateStyle(false);
    }, Y2 = function() {
      var n3 = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], a3 = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : f2;
      l2.hasPie(t3) && (l2.drawPie(e9, t3, a3), n3 && (g2 || l2.nodeShapes[l2.getNodeShape(t3)].draw(e9, d2.x, d2.y, r2, i2)));
    }, X2 = function() {
      var t4 = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : f2, n3 = (T2 > 0 ? T2 : -T2) * t4, r3 = T2 > 0 ? 0 : 255;
      0 !== T2 && (l2.colorFillStyle(e9, r3, r3, r3, n3), g2 ? e9.fill(h2) : e9.fill());
    }, W2 = function() {
      if (_2 > 0) {
        if (e9.lineWidth = _2, e9.lineCap = "butt", e9.setLineDash)
          switch (N2) {
            case "dotted":
              e9.setLineDash([1, 1]);
              break;
            case "dashed":
              e9.setLineDash([4, 2]);
              break;
            case "solid":
            case "double":
              e9.setLineDash([]);
          }
        if (g2 ? e9.stroke(h2) : e9.stroke(), "double" === N2) {
          e9.lineWidth = _2 / 3;
          var t4 = e9.globalCompositeOperation;
          e9.globalCompositeOperation = "destination-out", g2 ? e9.stroke(h2) : e9.stroke(), e9.globalCompositeOperation = t4;
        }
        e9.setLineDash && e9.setLineDash([]);
      }
    }, H2 = function() {
      o2 && l2.drawNodeOverlay(e9, t3, d2, r2, i2);
    }, K2 = function() {
      o2 && l2.drawNodeUnderlay(e9, t3, d2, r2, i2);
    }, G2 = function() {
      l2.drawElementText(e9, t3, null, a2);
    }, U2 = "yes" === t3.pstyle("ghost").value;
    if (U2) {
      var Z2 = t3.pstyle("ghost-offset-x").pfValue, $2 = t3.pstyle("ghost-offset-y").pfValue, Q2 = t3.pstyle("ghost-opacity").value, J2 = Q2 * f2;
      e9.translate(Z2, $2), I2(Q2 * M2), j2(), q2(J2, true), A2(Q2 * z2), W2(), Y2(0 !== T2 || 0 !== _2), q2(J2, false), X2(J2), e9.translate(-Z2, -$2);
    }
    g2 && e9.translate(-d2.x, -d2.y), K2(), g2 && e9.translate(d2.x, d2.y), I2(), j2(), q2(f2, true), A2(), W2(), Y2(0 !== T2 || 0 !== _2), q2(f2, false), X2(), g2 && e9.translate(-d2.x, -d2.y), G2(), H2(), n2 && e9.translate(p2.x1, p2.y1);
  }
} };
var wu = function(e9) {
  if (!["overlay", "underlay"].includes(e9))
    throw new Error("Invalid state");
  return function(t3, n2, r2, i2, a2) {
    if (n2.visible()) {
      var o2 = n2.pstyle("".concat(e9, "-padding")).pfValue, s2 = n2.pstyle("".concat(e9, "-opacity")).value, l2 = n2.pstyle("".concat(e9, "-color")).value, u2 = n2.pstyle("".concat(e9, "-shape")).value;
      if (s2 > 0) {
        if (r2 = r2 || n2.position(), null == i2 || null == a2) {
          var c2 = n2.padding();
          i2 = n2.width() + 2 * c2, a2 = n2.height() + 2 * c2;
        }
        this.colorFillStyle(t3, l2[0], l2[1], l2[2], s2), this.nodeShapes[u2].draw(t3, r2.x, r2.y, i2 + 2 * o2, a2 + 2 * o2), t3.fill();
      }
    }
  };
};
xu.drawNodeOverlay = wu("overlay"), xu.drawNodeUnderlay = wu("underlay"), xu.hasPie = function(e9) {
  return (e9 = e9[0])._private.hasPie;
}, xu.drawPie = function(e9, t3, n2, r2) {
  t3 = t3[0], r2 = r2 || t3.position();
  var i2 = t3.cy().style(), a2 = t3.pstyle("pie-size"), o2 = r2.x, s2 = r2.y, l2 = t3.width(), u2 = t3.height(), c2 = Math.min(l2, u2) / 2, d2 = 0;
  this.usePaths() && (o2 = 0, s2 = 0), "%" === a2.units ? c2 *= a2.pfValue : void 0 !== a2.pfValue && (c2 = a2.pfValue / 2);
  for (var h2 = 1; h2 <= i2.pieBackgroundN; h2++) {
    var p2 = t3.pstyle("pie-" + h2 + "-background-size").value, f2 = t3.pstyle("pie-" + h2 + "-background-color").value, g2 = t3.pstyle("pie-" + h2 + "-background-opacity").value * n2, v2 = p2 / 100;
    v2 + d2 > 1 && (v2 = 1 - d2);
    var y2 = 1.5 * Math.PI + 2 * Math.PI * d2, m2 = y2 + 2 * Math.PI * v2;
    0 === p2 || d2 >= 1 || d2 + v2 > 1 || (e9.beginPath(), e9.moveTo(o2, s2), e9.arc(o2, s2, c2, y2, m2), e9.closePath(), this.colorFillStyle(e9, f2[0], f2[1], f2[2], g2), e9.fill(), d2 += v2);
  }
};
var Eu = {};
Eu.getPixelRatio = function() {
  var e9 = this.data.contexts[0];
  if (null != this.forcedPixelRatio)
    return this.forcedPixelRatio;
  var t3 = e9.backingStorePixelRatio || e9.webkitBackingStorePixelRatio || e9.mozBackingStorePixelRatio || e9.msBackingStorePixelRatio || e9.oBackingStorePixelRatio || e9.backingStorePixelRatio || 1;
  return (window.devicePixelRatio || 1) / t3;
}, Eu.paintCache = function(e9) {
  for (var t3, n2 = this.paintCaches = this.paintCaches || [], r2 = true, i2 = 0; i2 < n2.length; i2++)
    if ((t3 = n2[i2]).context === e9) {
      r2 = false;
      break;
    }
  return r2 && (t3 = { context: e9 }, n2.push(t3)), t3;
}, Eu.createGradientStyleFor = function(e9, t3, n2, r2, i2) {
  var a2, o2 = this.usePaths(), s2 = n2.pstyle(t3 + "-gradient-stop-colors").value, l2 = n2.pstyle(t3 + "-gradient-stop-positions").pfValue;
  if ("radial-gradient" === r2)
    if (n2.isEdge()) {
      var u2 = n2.sourceEndpoint(), c2 = n2.targetEndpoint(), d2 = n2.midpoint(), h2 = wt(u2, d2), p2 = wt(c2, d2);
      a2 = e9.createRadialGradient(d2.x, d2.y, 0, d2.x, d2.y, Math.max(h2, p2));
    } else {
      var f2 = o2 ? { x: 0, y: 0 } : n2.position(), g2 = n2.paddedWidth(), v2 = n2.paddedHeight();
      a2 = e9.createRadialGradient(f2.x, f2.y, 0, f2.x, f2.y, Math.max(g2, v2));
    }
  else if (n2.isEdge()) {
    var y2 = n2.sourceEndpoint(), m2 = n2.targetEndpoint();
    a2 = e9.createLinearGradient(y2.x, y2.y, m2.x, m2.y);
  } else {
    var b2 = o2 ? { x: 0, y: 0 } : n2.position(), x2 = n2.paddedWidth() / 2, w2 = n2.paddedHeight() / 2;
    switch (n2.pstyle("background-gradient-direction").value) {
      case "to-bottom":
        a2 = e9.createLinearGradient(b2.x, b2.y - w2, b2.x, b2.y + w2);
        break;
      case "to-top":
        a2 = e9.createLinearGradient(b2.x, b2.y + w2, b2.x, b2.y - w2);
        break;
      case "to-left":
        a2 = e9.createLinearGradient(b2.x + x2, b2.y, b2.x - x2, b2.y);
        break;
      case "to-right":
        a2 = e9.createLinearGradient(b2.x - x2, b2.y, b2.x + x2, b2.y);
        break;
      case "to-bottom-right":
      case "to-right-bottom":
        a2 = e9.createLinearGradient(b2.x - x2, b2.y - w2, b2.x + x2, b2.y + w2);
        break;
      case "to-top-right":
      case "to-right-top":
        a2 = e9.createLinearGradient(b2.x - x2, b2.y + w2, b2.x + x2, b2.y - w2);
        break;
      case "to-bottom-left":
      case "to-left-bottom":
        a2 = e9.createLinearGradient(b2.x + x2, b2.y - w2, b2.x - x2, b2.y + w2);
        break;
      case "to-top-left":
      case "to-left-top":
        a2 = e9.createLinearGradient(b2.x + x2, b2.y + w2, b2.x - x2, b2.y - w2);
    }
  }
  if (!a2)
    return null;
  for (var E2 = l2.length === s2.length, k2 = s2.length, C2 = 0; C2 < k2; C2++)
    a2.addColorStop(E2 ? l2[C2] : C2 / (k2 - 1), "rgba(" + s2[C2][0] + "," + s2[C2][1] + "," + s2[C2][2] + "," + i2 + ")");
  return a2;
}, Eu.gradientFillStyle = function(e9, t3, n2, r2) {
  var i2 = this.createGradientStyleFor(e9, "background", t3, n2, r2);
  if (!i2)
    return null;
  e9.fillStyle = i2;
}, Eu.colorFillStyle = function(e9, t3, n2, r2, i2) {
  e9.fillStyle = "rgba(" + t3 + "," + n2 + "," + r2 + "," + i2 + ")";
}, Eu.eleFillStyle = function(e9, t3, n2) {
  var r2 = t3.pstyle("background-fill").value;
  if ("linear-gradient" === r2 || "radial-gradient" === r2)
    this.gradientFillStyle(e9, t3, r2, n2);
  else {
    var i2 = t3.pstyle("background-color").value;
    this.colorFillStyle(e9, i2[0], i2[1], i2[2], n2);
  }
}, Eu.gradientStrokeStyle = function(e9, t3, n2, r2) {
  var i2 = this.createGradientStyleFor(e9, "line", t3, n2, r2);
  if (!i2)
    return null;
  e9.strokeStyle = i2;
}, Eu.colorStrokeStyle = function(e9, t3, n2, r2, i2) {
  e9.strokeStyle = "rgba(" + t3 + "," + n2 + "," + r2 + "," + i2 + ")";
}, Eu.eleStrokeStyle = function(e9, t3, n2) {
  var r2 = t3.pstyle("line-fill").value;
  if ("linear-gradient" === r2 || "radial-gradient" === r2)
    this.gradientStrokeStyle(e9, t3, r2, n2);
  else {
    var i2 = t3.pstyle("line-color").value;
    this.colorStrokeStyle(e9, i2[0], i2[1], i2[2], n2);
  }
}, Eu.matchCanvasSize = function(e9) {
  var t3 = this, n2 = t3.data, r2 = t3.findContainerClientCoords(), i2 = r2[2], a2 = r2[3], o2 = t3.getPixelRatio(), s2 = t3.motionBlurPxRatio;
  e9 !== t3.data.bufferCanvases[t3.MOTIONBLUR_BUFFER_NODE] && e9 !== t3.data.bufferCanvases[t3.MOTIONBLUR_BUFFER_DRAG] || (o2 = s2);
  var l2, u2 = i2 * o2, c2 = a2 * o2;
  if (u2 !== t3.canvasWidth || c2 !== t3.canvasHeight) {
    t3.fontCaches = null;
    var d2 = n2.canvasContainer;
    d2.style.width = i2 + "px", d2.style.height = a2 + "px";
    for (var h2 = 0; h2 < t3.CANVAS_LAYERS; h2++)
      (l2 = n2.canvases[h2]).width = u2, l2.height = c2, l2.style.width = i2 + "px", l2.style.height = a2 + "px";
    for (h2 = 0; h2 < t3.BUFFER_COUNT; h2++)
      (l2 = n2.bufferCanvases[h2]).width = u2, l2.height = c2, l2.style.width = i2 + "px", l2.style.height = a2 + "px";
    t3.textureMult = 1, o2 <= 1 && (l2 = n2.bufferCanvases[t3.TEXTURE_BUFFER], t3.textureMult = 2, l2.width = u2 * t3.textureMult, l2.height = c2 * t3.textureMult), t3.canvasWidth = u2, t3.canvasHeight = c2;
  }
}, Eu.renderTo = function(e9, t3, n2, r2) {
  this.render({ forcedContext: e9, forcedZoom: t3, forcedPan: n2, drawAllLayers: true, forcedPxRatio: r2 });
}, Eu.render = function(e9) {
  var t3 = (e9 = e9 || Ye()).forcedContext, n2 = e9.drawAllLayers, r2 = e9.drawOnlyNodeLayer, i2 = e9.forcedZoom, a2 = e9.forcedPan, o2 = this, s2 = void 0 === e9.forcedPxRatio ? this.getPixelRatio() : e9.forcedPxRatio, l2 = o2.cy, u2 = o2.data, c2 = u2.canvasNeedsRedraw, d2 = o2.textureOnViewport && !t3 && (o2.pinching || o2.hoverData.dragging || o2.swipePanning || o2.data.wheelZooming), h2 = void 0 !== e9.motionBlur ? e9.motionBlur : o2.motionBlur, p2 = o2.motionBlurPxRatio, f2 = l2.hasCompoundNodes(), g2 = o2.hoverData.draggingEles, v2 = !(!o2.hoverData.selecting && !o2.touchData.selecting), y2 = h2 = h2 && !t3 && o2.motionBlurEnabled && !v2;
  t3 || (o2.prevPxRatio !== s2 && (o2.invalidateContainerClientCoordsCache(), o2.matchCanvasSize(o2.container), o2.redrawHint("eles", true), o2.redrawHint("drag", true)), o2.prevPxRatio = s2), !t3 && o2.motionBlurTimeout && clearTimeout(o2.motionBlurTimeout), h2 && (null == o2.mbFrames && (o2.mbFrames = 0), o2.mbFrames++, o2.mbFrames < 3 && (y2 = false), o2.mbFrames > o2.minMbLowQualFrames && (o2.motionBlurPxRatio = o2.mbPxRBlurry)), o2.clearingMotionBlur && (o2.motionBlurPxRatio = 1), o2.textureDrawLastFrame && !d2 && (c2[o2.NODE] = true, c2[o2.SELECT_BOX] = true);
  var m2 = l2.style(), b2 = l2.zoom(), x2 = void 0 !== i2 ? i2 : b2, w2 = l2.pan(), E2 = { x: w2.x, y: w2.y }, k2 = { zoom: b2, pan: { x: w2.x, y: w2.y } }, C2 = o2.prevViewport;
  void 0 === C2 || k2.zoom !== C2.zoom || k2.pan.x !== C2.pan.x || k2.pan.y !== C2.pan.y || g2 && !f2 || (o2.motionBlurPxRatio = 1), a2 && (E2 = a2), x2 *= s2, E2.x *= s2, E2.y *= s2;
  var S2 = o2.getCachedZSortedEles();
  function P2(e10, t4, n3, r3, i3) {
    var a3 = e10.globalCompositeOperation;
    e10.globalCompositeOperation = "destination-out", o2.colorFillStyle(e10, 255, 255, 255, o2.motionBlurTransparency), e10.fillRect(t4, n3, r3, i3), e10.globalCompositeOperation = a3;
  }
  function D2(e10, r3) {
    var s3, l3, c3, d3;
    o2.clearingMotionBlur || e10 !== u2.bufferContexts[o2.MOTIONBLUR_BUFFER_NODE] && e10 !== u2.bufferContexts[o2.MOTIONBLUR_BUFFER_DRAG] ? (s3 = E2, l3 = x2, c3 = o2.canvasWidth, d3 = o2.canvasHeight) : (s3 = { x: w2.x * p2, y: w2.y * p2 }, l3 = b2 * p2, c3 = o2.canvasWidth * p2, d3 = o2.canvasHeight * p2), e10.setTransform(1, 0, 0, 1, 0, 0), "motionBlur" === r3 ? P2(e10, 0, 0, c3, d3) : t3 || void 0 !== r3 && !r3 || e10.clearRect(0, 0, c3, d3), n2 || (e10.translate(s3.x, s3.y), e10.scale(l3, l3)), a2 && e10.translate(a2.x, a2.y), i2 && e10.scale(i2, i2);
  }
  if (d2 || (o2.textureDrawLastFrame = false), d2) {
    if (o2.textureDrawLastFrame = true, !o2.textureCache) {
      o2.textureCache = {}, o2.textureCache.bb = l2.mutableElements().boundingBox(), o2.textureCache.texture = o2.data.bufferCanvases[o2.TEXTURE_BUFFER];
      var T2 = o2.data.bufferContexts[o2.TEXTURE_BUFFER];
      T2.setTransform(1, 0, 0, 1, 0, 0), T2.clearRect(0, 0, o2.canvasWidth * o2.textureMult, o2.canvasHeight * o2.textureMult), o2.render({ forcedContext: T2, drawOnlyNodeLayer: true, forcedPxRatio: s2 * o2.textureMult }), (k2 = o2.textureCache.viewport = { zoom: l2.zoom(), pan: l2.pan(), width: o2.canvasWidth, height: o2.canvasHeight }).mpan = { x: (0 - k2.pan.x) / k2.zoom, y: (0 - k2.pan.y) / k2.zoom };
    }
    c2[o2.DRAG] = false, c2[o2.NODE] = false;
    var _2 = u2.contexts[o2.NODE], M2 = o2.textureCache.texture;
    k2 = o2.textureCache.viewport;
    _2.setTransform(1, 0, 0, 1, 0, 0), h2 ? P2(_2, 0, 0, k2.width, k2.height) : _2.clearRect(0, 0, k2.width, k2.height);
    var B2 = m2.core("outside-texture-bg-color").value, N2 = m2.core("outside-texture-bg-opacity").value;
    o2.colorFillStyle(_2, B2[0], B2[1], B2[2], N2), _2.fillRect(0, 0, k2.width, k2.height);
    b2 = l2.zoom();
    D2(_2, false), _2.clearRect(k2.mpan.x, k2.mpan.y, k2.width / k2.zoom / s2, k2.height / k2.zoom / s2), _2.drawImage(M2, k2.mpan.x, k2.mpan.y, k2.width / k2.zoom / s2, k2.height / k2.zoom / s2);
  } else
    o2.textureOnViewport && !t3 && (o2.textureCache = null);
  var z2 = l2.extent(), I2 = o2.pinching || o2.hoverData.dragging || o2.swipePanning || o2.data.wheelZooming || o2.hoverData.draggingEles || o2.cy.animated(), A2 = o2.hideEdgesOnViewport && I2, L2 = [];
  if (L2[o2.NODE] = !c2[o2.NODE] && h2 && !o2.clearedForMotionBlur[o2.NODE] || o2.clearingMotionBlur, L2[o2.NODE] && (o2.clearedForMotionBlur[o2.NODE] = true), L2[o2.DRAG] = !c2[o2.DRAG] && h2 && !o2.clearedForMotionBlur[o2.DRAG] || o2.clearingMotionBlur, L2[o2.DRAG] && (o2.clearedForMotionBlur[o2.DRAG] = true), c2[o2.NODE] || n2 || r2 || L2[o2.NODE]) {
    var O2 = h2 && !L2[o2.NODE] && 1 !== p2;
    D2(_2 = t3 || (O2 ? o2.data.bufferContexts[o2.MOTIONBLUR_BUFFER_NODE] : u2.contexts[o2.NODE]), h2 && !O2 ? "motionBlur" : void 0), A2 ? o2.drawCachedNodes(_2, S2.nondrag, s2, z2) : o2.drawLayeredElements(_2, S2.nondrag, s2, z2), o2.debug && o2.drawDebugPoints(_2, S2.nondrag), n2 || h2 || (c2[o2.NODE] = false);
  }
  if (!r2 && (c2[o2.DRAG] || n2 || L2[o2.DRAG])) {
    O2 = h2 && !L2[o2.DRAG] && 1 !== p2;
    D2(_2 = t3 || (O2 ? o2.data.bufferContexts[o2.MOTIONBLUR_BUFFER_DRAG] : u2.contexts[o2.DRAG]), h2 && !O2 ? "motionBlur" : void 0), A2 ? o2.drawCachedNodes(_2, S2.drag, s2, z2) : o2.drawCachedElements(_2, S2.drag, s2, z2), o2.debug && o2.drawDebugPoints(_2, S2.drag), n2 || h2 || (c2[o2.DRAG] = false);
  }
  if (o2.showFps || !r2 && c2[o2.SELECT_BOX] && !n2) {
    if (D2(_2 = t3 || u2.contexts[o2.SELECT_BOX]), 1 == o2.selection[4] && (o2.hoverData.selecting || o2.touchData.selecting)) {
      b2 = o2.cy.zoom();
      var R2 = m2.core("selection-box-border-width").value / b2;
      _2.lineWidth = R2, _2.fillStyle = "rgba(" + m2.core("selection-box-color").value[0] + "," + m2.core("selection-box-color").value[1] + "," + m2.core("selection-box-color").value[2] + "," + m2.core("selection-box-opacity").value + ")", _2.fillRect(o2.selection[0], o2.selection[1], o2.selection[2] - o2.selection[0], o2.selection[3] - o2.selection[1]), R2 > 0 && (_2.strokeStyle = "rgba(" + m2.core("selection-box-border-color").value[0] + "," + m2.core("selection-box-border-color").value[1] + "," + m2.core("selection-box-border-color").value[2] + "," + m2.core("selection-box-opacity").value + ")", _2.strokeRect(o2.selection[0], o2.selection[1], o2.selection[2] - o2.selection[0], o2.selection[3] - o2.selection[1]));
    }
    if (u2.bgActivePosistion && !o2.hoverData.selecting) {
      b2 = o2.cy.zoom();
      var V2 = u2.bgActivePosistion;
      _2.fillStyle = "rgba(" + m2.core("active-bg-color").value[0] + "," + m2.core("active-bg-color").value[1] + "," + m2.core("active-bg-color").value[2] + "," + m2.core("active-bg-opacity").value + ")", _2.beginPath(), _2.arc(V2.x, V2.y, m2.core("active-bg-size").pfValue / b2, 0, 2 * Math.PI), _2.fill();
    }
    var F2 = o2.lastRedrawTime;
    if (o2.showFps && F2) {
      F2 = Math.round(F2);
      var j2 = Math.round(1e3 / F2);
      _2.setTransform(1, 0, 0, 1, 0, 0), _2.fillStyle = "rgba(255, 0, 0, 0.75)", _2.strokeStyle = "rgba(255, 0, 0, 0.75)", _2.lineWidth = 1, _2.fillText("1 frame = " + F2 + " ms = " + j2 + " fps", 0, 20);
      _2.strokeRect(0, 30, 250, 20), _2.fillRect(0, 30, 250 * Math.min(j2 / 60, 1), 20);
    }
    n2 || (c2[o2.SELECT_BOX] = false);
  }
  if (h2 && 1 !== p2) {
    var q2 = u2.contexts[o2.NODE], Y2 = o2.data.bufferCanvases[o2.MOTIONBLUR_BUFFER_NODE], X2 = u2.contexts[o2.DRAG], W2 = o2.data.bufferCanvases[o2.MOTIONBLUR_BUFFER_DRAG], H2 = function(e10, t4, n3) {
      e10.setTransform(1, 0, 0, 1, 0, 0), n3 || !y2 ? e10.clearRect(0, 0, o2.canvasWidth, o2.canvasHeight) : P2(e10, 0, 0, o2.canvasWidth, o2.canvasHeight);
      var r3 = p2;
      e10.drawImage(t4, 0, 0, o2.canvasWidth * r3, o2.canvasHeight * r3, 0, 0, o2.canvasWidth, o2.canvasHeight);
    };
    (c2[o2.NODE] || L2[o2.NODE]) && (H2(q2, Y2, L2[o2.NODE]), c2[o2.NODE] = false), (c2[o2.DRAG] || L2[o2.DRAG]) && (H2(X2, W2, L2[o2.DRAG]), c2[o2.DRAG] = false);
  }
  o2.prevViewport = k2, o2.clearingMotionBlur && (o2.clearingMotionBlur = false, o2.motionBlurCleared = true, o2.motionBlur = true), h2 && (o2.motionBlurTimeout = setTimeout(function() {
    o2.motionBlurTimeout = null, o2.clearedForMotionBlur[o2.NODE] = false, o2.clearedForMotionBlur[o2.DRAG] = false, o2.motionBlur = false, o2.clearingMotionBlur = !d2, o2.mbFrames = 0, c2[o2.NODE] = true, c2[o2.DRAG] = true, o2.redraw();
  }, 100)), t3 || l2.emit("render");
};
for (ku = { drawPolygonPath: function(e9, t3, n2, r2, i2, a2) {
  var o2 = r2 / 2, s2 = i2 / 2;
  e9.beginPath && e9.beginPath(), e9.moveTo(t3 + o2 * a2[0], n2 + s2 * a2[1]);
  for (var l2 = 1; l2 < a2.length / 2; l2++)
    e9.lineTo(t3 + o2 * a2[2 * l2], n2 + s2 * a2[2 * l2 + 1]);
  e9.closePath();
}, drawRoundPolygonPath: function(e9, t3, n2, r2, i2, a2) {
  var o2 = r2 / 2, s2 = i2 / 2, l2 = en(r2, i2);
  e9.beginPath && e9.beginPath();
  for (var u2 = 0; u2 < a2.length / 4; u2++) {
    var c2, d2 = void 0;
    d2 = 0 === u2 ? a2.length - 2 : 4 * u2 - 2, c2 = 4 * u2 + 2;
    var h2 = t3 + o2 * a2[4 * u2], p2 = n2 + s2 * a2[4 * u2 + 1], f2 = -a2[d2] * a2[c2] - a2[d2 + 1] * a2[c2 + 1], g2 = l2 / Math.tan(Math.acos(f2) / 2), v2 = h2 - g2 * a2[d2], y2 = p2 - g2 * a2[d2 + 1], m2 = h2 + g2 * a2[c2], b2 = p2 + g2 * a2[c2 + 1];
    0 === u2 ? e9.moveTo(v2, y2) : e9.lineTo(v2, y2), e9.arcTo(h2, p2, m2, b2, l2);
  }
  e9.closePath();
}, drawRoundRectanglePath: function(e9, t3, n2, r2, i2) {
  var a2 = r2 / 2, o2 = i2 / 2, s2 = Jt(r2, i2);
  e9.beginPath && e9.beginPath(), e9.moveTo(t3, n2 - o2), e9.arcTo(t3 + a2, n2 - o2, t3 + a2, n2, s2), e9.arcTo(t3 + a2, n2 + o2, t3, n2 + o2, s2), e9.arcTo(t3 - a2, n2 + o2, t3 - a2, n2, s2), e9.arcTo(t3 - a2, n2 - o2, t3, n2 - o2, s2), e9.lineTo(t3, n2 - o2), e9.closePath();
}, drawBottomRoundRectanglePath: function(e9, t3, n2, r2, i2) {
  var a2 = r2 / 2, o2 = i2 / 2, s2 = Jt(r2, i2);
  e9.beginPath && e9.beginPath(), e9.moveTo(t3, n2 - o2), e9.lineTo(t3 + a2, n2 - o2), e9.lineTo(t3 + a2, n2), e9.arcTo(t3 + a2, n2 + o2, t3, n2 + o2, s2), e9.arcTo(t3 - a2, n2 + o2, t3 - a2, n2, s2), e9.lineTo(t3 - a2, n2 - o2), e9.lineTo(t3, n2 - o2), e9.closePath();
}, drawCutRectanglePath: function(e9, t3, n2, r2, i2) {
  var a2 = r2 / 2, o2 = i2 / 2;
  e9.beginPath && e9.beginPath(), e9.moveTo(t3 - a2 + 8, n2 - o2), e9.lineTo(t3 + a2 - 8, n2 - o2), e9.lineTo(t3 + a2, n2 - o2 + 8), e9.lineTo(t3 + a2, n2 + o2 - 8), e9.lineTo(t3 + a2 - 8, n2 + o2), e9.lineTo(t3 - a2 + 8, n2 + o2), e9.lineTo(t3 - a2, n2 + o2 - 8), e9.lineTo(t3 - a2, n2 - o2 + 8), e9.closePath();
}, drawBarrelPath: function(e9, t3, n2, r2, i2) {
  var a2 = r2 / 2, o2 = i2 / 2, s2 = t3 - a2, l2 = t3 + a2, u2 = n2 - o2, c2 = n2 + o2, d2 = tn(r2, i2), h2 = d2.widthOffset, p2 = d2.heightOffset, f2 = d2.ctrlPtOffsetPct * h2;
  e9.beginPath && e9.beginPath(), e9.moveTo(s2, u2 + p2), e9.lineTo(s2, c2 - p2), e9.quadraticCurveTo(s2 + f2, c2, s2 + h2, c2), e9.lineTo(l2 - h2, c2), e9.quadraticCurveTo(l2 - f2, c2, l2, c2 - p2), e9.lineTo(l2, u2 + p2), e9.quadraticCurveTo(l2 - f2, u2, l2 - h2, u2), e9.lineTo(s2 + h2, u2), e9.quadraticCurveTo(s2 + f2, u2, s2, u2 + p2), e9.closePath();
} }, Cu = Math.sin(0), Su = Math.cos(0), Pu = {}, Du = {}, Tu = Math.PI / 40, _u = 0 * Math.PI; _u < 2 * Math.PI; _u += Tu)
  Pu[_u] = Math.sin(_u), Du[_u] = Math.cos(_u);
var ku;
var Cu;
var Su;
var Pu;
var Du;
var Tu;
var _u;
ku.drawEllipsePath = function(e9, t3, n2, r2, i2) {
  if (e9.beginPath && e9.beginPath(), e9.ellipse)
    e9.ellipse(t3, n2, r2 / 2, i2 / 2, 0, 0, 2 * Math.PI);
  else
    for (var a2, o2, s2 = r2 / 2, l2 = i2 / 2, u2 = 0 * Math.PI; u2 < 2 * Math.PI; u2 += Tu)
      a2 = t3 - s2 * Pu[u2] * Cu + s2 * Du[u2] * Su, o2 = n2 + l2 * Du[u2] * Cu + l2 * Pu[u2] * Su, 0 === u2 ? e9.moveTo(a2, o2) : e9.lineTo(a2, o2);
  e9.closePath();
};
var Mu = {};
function Bu(e9) {
  var t3 = e9.indexOf(",");
  return e9.substr(t3 + 1);
}
function Nu(e9, t3, n2) {
  var r2 = function() {
    return t3.toDataURL(n2, e9.quality);
  };
  switch (e9.output) {
    case "blob-promise":
      return new hr(function(r3, i2) {
        try {
          t3.toBlob(function(e10) {
            null != e10 ? r3(e10) : i2(new Error("`canvas.toBlob()` sent a null value in its callback"));
          }, n2, e9.quality);
        } catch (e10) {
          i2(e10);
        }
      });
    case "blob":
      return function(e10, t4) {
        for (var n3 = atob(e10), r3 = new ArrayBuffer(n3.length), i2 = new Uint8Array(r3), a2 = 0; a2 < n3.length; a2++)
          i2[a2] = n3.charCodeAt(a2);
        return new Blob([r3], { type: t4 });
      }(Bu(r2()), n2);
    case "base64":
      return Bu(r2());
    case "base64uri":
    default:
      return r2();
  }
}
Mu.createBuffer = function(e9, t3) {
  var n2 = document.createElement("canvas");
  return n2.width = e9, n2.height = t3, [n2, n2.getContext("2d")];
}, Mu.bufferCanvasImage = function(e9) {
  var t3 = this.cy, n2 = t3.mutableElements().boundingBox(), r2 = this.findContainerClientCoords(), i2 = e9.full ? Math.ceil(n2.w) : r2[2], a2 = e9.full ? Math.ceil(n2.h) : r2[3], o2 = m(e9.maxWidth) || m(e9.maxHeight), s2 = this.getPixelRatio(), l2 = 1;
  if (void 0 !== e9.scale)
    i2 *= e9.scale, a2 *= e9.scale, l2 = e9.scale;
  else if (o2) {
    var u2 = 1 / 0, c2 = 1 / 0;
    m(e9.maxWidth) && (u2 = l2 * e9.maxWidth / i2), m(e9.maxHeight) && (c2 = l2 * e9.maxHeight / a2), i2 *= l2 = Math.min(u2, c2), a2 *= l2;
  }
  o2 || (i2 *= s2, a2 *= s2, l2 *= s2);
  var d2 = document.createElement("canvas");
  d2.width = i2, d2.height = a2, d2.style.width = i2 + "px", d2.style.height = a2 + "px";
  var h2 = d2.getContext("2d");
  if (i2 > 0 && a2 > 0) {
    h2.clearRect(0, 0, i2, a2), h2.globalCompositeOperation = "source-over";
    var p2 = this.getCachedZSortedEles();
    if (e9.full)
      h2.translate(-n2.x1 * l2, -n2.y1 * l2), h2.scale(l2, l2), this.drawElements(h2, p2), h2.scale(1 / l2, 1 / l2), h2.translate(n2.x1 * l2, n2.y1 * l2);
    else {
      var f2 = t3.pan(), g2 = { x: f2.x * l2, y: f2.y * l2 };
      l2 *= t3.zoom(), h2.translate(g2.x, g2.y), h2.scale(l2, l2), this.drawElements(h2, p2), h2.scale(1 / l2, 1 / l2), h2.translate(-g2.x, -g2.y);
    }
    e9.bg && (h2.globalCompositeOperation = "destination-over", h2.fillStyle = e9.bg, h2.rect(0, 0, i2, a2), h2.fill());
  }
  return d2;
}, Mu.png = function(e9) {
  return Nu(e9, this.bufferCanvasImage(e9), "image/png");
}, Mu.jpg = function(e9) {
  return Nu(e9, this.bufferCanvasImage(e9), "image/jpeg");
};
var zu = { nodeShapeImpl: function(e9, t3, n2, r2, i2, a2, o2) {
  switch (e9) {
    case "ellipse":
      return this.drawEllipsePath(t3, n2, r2, i2, a2);
    case "polygon":
      return this.drawPolygonPath(t3, n2, r2, i2, a2, o2);
    case "round-polygon":
      return this.drawRoundPolygonPath(t3, n2, r2, i2, a2, o2);
    case "roundrectangle":
    case "round-rectangle":
      return this.drawRoundRectanglePath(t3, n2, r2, i2, a2);
    case "cutrectangle":
    case "cut-rectangle":
      return this.drawCutRectanglePath(t3, n2, r2, i2, a2);
    case "bottomroundrectangle":
    case "bottom-round-rectangle":
      return this.drawBottomRoundRectanglePath(t3, n2, r2, i2, a2);
    case "barrel":
      return this.drawBarrelPath(t3, n2, r2, i2, a2);
  }
} };
var Iu = Lu;
var Au = Lu.prototype;
function Lu(e9) {
  var t3 = this;
  t3.data = { canvases: new Array(Au.CANVAS_LAYERS), contexts: new Array(Au.CANVAS_LAYERS), canvasNeedsRedraw: new Array(Au.CANVAS_LAYERS), bufferCanvases: new Array(Au.BUFFER_COUNT), bufferContexts: new Array(Au.CANVAS_LAYERS) };
  t3.data.canvasContainer = document.createElement("div");
  var n2 = t3.data.canvasContainer.style;
  t3.data.canvasContainer.style["-webkit-tap-highlight-color"] = "rgba(0,0,0,0)", n2.position = "relative", n2.zIndex = "0", n2.overflow = "hidden";
  var r2 = e9.cy.container();
  r2.appendChild(t3.data.canvasContainer), r2.style["-webkit-tap-highlight-color"] = "rgba(0,0,0,0)";
  var i2 = { "-webkit-user-select": "none", "-moz-user-select": "-moz-none", "user-select": "none", "-webkit-tap-highlight-color": "rgba(0,0,0,0)", "outline-style": "none" };
  l && l.userAgent.match(/msie|trident|edge/i) && (i2["-ms-touch-action"] = "none", i2["touch-action"] = "none");
  for (var a2 = 0; a2 < Au.CANVAS_LAYERS; a2++) {
    var o2 = t3.data.canvases[a2] = document.createElement("canvas");
    t3.data.contexts[a2] = o2.getContext("2d"), Object.keys(i2).forEach(function(e10) {
      o2.style[e10] = i2[e10];
    }), o2.style.position = "absolute", o2.setAttribute("data-id", "layer" + a2), o2.style.zIndex = String(Au.CANVAS_LAYERS - a2), t3.data.canvasContainer.appendChild(o2), t3.data.canvasNeedsRedraw[a2] = false;
  }
  t3.data.topCanvas = t3.data.canvases[0], t3.data.canvases[Au.NODE].setAttribute("data-id", "layer" + Au.NODE + "-node"), t3.data.canvases[Au.SELECT_BOX].setAttribute("data-id", "layer" + Au.SELECT_BOX + "-selectbox"), t3.data.canvases[Au.DRAG].setAttribute("data-id", "layer" + Au.DRAG + "-drag");
  for (a2 = 0; a2 < Au.BUFFER_COUNT; a2++)
    t3.data.bufferCanvases[a2] = document.createElement("canvas"), t3.data.bufferContexts[a2] = t3.data.bufferCanvases[a2].getContext("2d"), t3.data.bufferCanvases[a2].style.position = "absolute", t3.data.bufferCanvases[a2].setAttribute("data-id", "buffer" + a2), t3.data.bufferCanvases[a2].style.zIndex = String(-a2 - 1), t3.data.bufferCanvases[a2].style.visibility = "hidden";
  t3.pathsEnabled = true;
  var s2 = Dt(), u2 = function(e10) {
    return { x: -e10.w / 2, y: -e10.h / 2 };
  }, c2 = function(e10) {
    return e10.boundingBox(), e10[0]._private.bodyBounds;
  }, d2 = function(e10) {
    return e10.boundingBox(), e10[0]._private.labelBounds.main || s2;
  }, h2 = function(e10) {
    return e10.boundingBox(), e10[0]._private.labelBounds.source || s2;
  }, p2 = function(e10) {
    return e10.boundingBox(), e10[0]._private.labelBounds.target || s2;
  }, f2 = function(e10, t4) {
    return t4;
  }, g2 = function(e10, t4, n3) {
    var r3 = e10 ? e10 + "-" : "";
    return { x: t4.x + n3.pstyle(r3 + "text-margin-x").pfValue, y: t4.y + n3.pstyle(r3 + "text-margin-y").pfValue };
  }, v2 = function(e10, t4, n3) {
    var r3 = e10[0]._private.rscratch;
    return { x: r3[t4], y: r3[n3] };
  }, y2 = t3.data.eleTxrCache = new Ul(t3, { getKey: function(e10) {
    return e10[0]._private.nodeKey;
  }, doesEleInvalidateKey: function(e10) {
    var t4 = e10[0]._private;
    return !(t4.oldBackgroundTimestamp === t4.backgroundTimestamp);
  }, drawElement: function(e10, n3, r3, i3, a3) {
    return t3.drawElement(e10, n3, r3, false, false, a3);
  }, getBoundingBox: c2, getRotationPoint: function(e10) {
    return { x: ((t4 = c2(e10)).x1 + t4.x2) / 2, y: (t4.y1 + t4.y2) / 2 };
    var t4;
  }, getRotationOffset: function(e10) {
    return u2(c2(e10));
  }, allowEdgeTxrCaching: false, allowParentTxrCaching: false }), m2 = t3.data.lblTxrCache = new Ul(t3, { getKey: function(e10) {
    return e10[0]._private.labelStyleKey;
  }, drawElement: function(e10, n3, r3, i3, a3) {
    return t3.drawElementText(e10, n3, r3, i3, "main", a3);
  }, getBoundingBox: d2, getRotationPoint: function(e10) {
    return g2("", v2(e10, "labelX", "labelY"), e10);
  }, getRotationOffset: function(e10) {
    var t4 = d2(e10), n3 = u2(d2(e10));
    if (e10.isNode()) {
      switch (e10.pstyle("text-halign").value) {
        case "left":
          n3.x = -t4.w;
          break;
        case "right":
          n3.x = 0;
      }
      switch (e10.pstyle("text-valign").value) {
        case "top":
          n3.y = -t4.h;
          break;
        case "bottom":
          n3.y = 0;
      }
    }
    return n3;
  }, isVisible: f2 }), b2 = t3.data.slbTxrCache = new Ul(t3, { getKey: function(e10) {
    return e10[0]._private.sourceLabelStyleKey;
  }, drawElement: function(e10, n3, r3, i3, a3) {
    return t3.drawElementText(e10, n3, r3, i3, "source", a3);
  }, getBoundingBox: h2, getRotationPoint: function(e10) {
    return g2("source", v2(e10, "sourceLabelX", "sourceLabelY"), e10);
  }, getRotationOffset: function(e10) {
    return u2(h2(e10));
  }, isVisible: f2 }), x2 = t3.data.tlbTxrCache = new Ul(t3, { getKey: function(e10) {
    return e10[0]._private.targetLabelStyleKey;
  }, drawElement: function(e10, n3, r3, i3, a3) {
    return t3.drawElementText(e10, n3, r3, i3, "target", a3);
  }, getBoundingBox: p2, getRotationPoint: function(e10) {
    return g2("target", v2(e10, "targetLabelX", "targetLabelY"), e10);
  }, getRotationOffset: function(e10) {
    return u2(p2(e10));
  }, isVisible: f2 }), w2 = t3.data.lyrTxrCache = new $l(t3);
  t3.onUpdateEleCalcs(function(e10, t4) {
    y2.invalidateElements(t4), m2.invalidateElements(t4), b2.invalidateElements(t4), x2.invalidateElements(t4), w2.invalidateElements(t4);
    for (var n3 = 0; n3 < t4.length; n3++) {
      var r3 = t4[n3]._private;
      r3.oldBackgroundTimestamp = r3.backgroundTimestamp;
    }
  });
  var E2 = function(e10) {
    for (var t4 = 0; t4 < e10.length; t4++)
      w2.enqueueElementRefinement(e10[t4].ele);
  };
  y2.onDequeue(E2), m2.onDequeue(E2), b2.onDequeue(E2), x2.onDequeue(E2);
}
Au.CANVAS_LAYERS = 3, Au.SELECT_BOX = 0, Au.DRAG = 1, Au.NODE = 2, Au.BUFFER_COUNT = 3, Au.TEXTURE_BUFFER = 0, Au.MOTIONBLUR_BUFFER_NODE = 1, Au.MOTIONBLUR_BUFFER_DRAG = 2, Au.redrawHint = function(e9, t3) {
  var n2 = this;
  switch (e9) {
    case "eles":
      n2.data.canvasNeedsRedraw[Au.NODE] = t3;
      break;
    case "drag":
      n2.data.canvasNeedsRedraw[Au.DRAG] = t3;
      break;
    case "select":
      n2.data.canvasNeedsRedraw[Au.SELECT_BOX] = t3;
  }
};
var Ou = "undefined" != typeof Path2D;
Au.path2dEnabled = function(e9) {
  if (void 0 === e9)
    return this.pathsEnabled;
  this.pathsEnabled = !!e9;
}, Au.usePaths = function() {
  return Ou && this.pathsEnabled;
}, Au.setImgSmoothing = function(e9, t3) {
  null != e9.imageSmoothingEnabled ? e9.imageSmoothingEnabled = t3 : (e9.webkitImageSmoothingEnabled = t3, e9.mozImageSmoothingEnabled = t3, e9.msImageSmoothingEnabled = t3);
}, Au.getImgSmoothing = function(e9) {
  return null != e9.imageSmoothingEnabled ? e9.imageSmoothingEnabled : e9.webkitImageSmoothingEnabled || e9.mozImageSmoothingEnabled || e9.msImageSmoothingEnabled;
}, Au.makeOffscreenCanvas = function(t3, n2) {
  var r2;
  return "undefined" !== ("undefined" == typeof OffscreenCanvas ? "undefined" : e(OffscreenCanvas)) ? r2 = new OffscreenCanvas(t3, n2) : ((r2 = document.createElement("canvas")).width = t3, r2.height = n2), r2;
}, [nu, lu, gu, yu, mu, xu, Eu, ku, Mu, zu].forEach(function(e9) {
  I(Au, e9);
});
var Ru = [{ type: "layout", extensions: ml }, { type: "renderer", extensions: [{ name: "null", impl: bl }, { name: "base", impl: Yl }, { name: "canvas", impl: Iu }] }];
var Vu = {};
var Fu = {};
function ju(e9, t3, n2) {
  var r2 = n2, i2 = function(n3) {
    Ve("Can not register `" + t3 + "` for `" + e9 + "` since `" + n3 + "` already exists in the prototype and can not be overridden");
  };
  if ("core" === e9) {
    if (Ns.prototype[t3])
      return i2(t3);
    Ns.prototype[t3] = n2;
  } else if ("collection" === e9) {
    if (Zo.prototype[t3])
      return i2(t3);
    Zo.prototype[t3] = n2;
  } else if ("layout" === e9) {
    for (var a2 = function(e10) {
      this.options = e10, n2.call(this, e10), y(this._private) || (this._private = {}), this._private.cy = e10.cy, this._private.listeners = [], this.createEmitter();
    }, o2 = a2.prototype = Object.create(n2.prototype), s2 = [], l2 = 0; l2 < s2.length; l2++) {
      var u2 = s2[l2];
      o2[u2] = o2[u2] || function() {
        return this;
      };
    }
    o2.start && !o2.run ? o2.run = function() {
      return this.start(), this;
    } : !o2.start && o2.run && (o2.start = function() {
      return this.run(), this;
    });
    var c2 = n2.prototype.stop;
    o2.stop = function() {
      var e10 = this.options;
      if (e10 && e10.animate) {
        var t4 = this.animations;
        if (t4)
          for (var n3 = 0; n3 < t4.length; n3++)
            t4[n3].stop();
      }
      return c2 ? c2.call(this) : this.emit("layoutstop"), this;
    }, o2.destroy || (o2.destroy = function() {
      return this;
    }), o2.cy = function() {
      return this._private.cy;
    };
    var d2 = function(e10) {
      return e10._private.cy;
    }, h2 = { addEventFields: function(e10, t4) {
      t4.layout = e10, t4.cy = d2(e10), t4.target = e10;
    }, bubble: function() {
      return true;
    }, parent: function(e10) {
      return d2(e10);
    } };
    I(o2, { createEmitter: function() {
      return this._private.emitter = new go(h2, this), this;
    }, emitter: function() {
      return this._private.emitter;
    }, on: function(e10, t4) {
      return this.emitter().on(e10, t4), this;
    }, one: function(e10, t4) {
      return this.emitter().one(e10, t4), this;
    }, once: function(e10, t4) {
      return this.emitter().one(e10, t4), this;
    }, removeListener: function(e10, t4) {
      return this.emitter().removeListener(e10, t4), this;
    }, removeAllListeners: function() {
      return this.emitter().removeAllListeners(), this;
    }, emit: function(e10, t4) {
      return this.emitter().emit(e10, t4), this;
    } }), Li.eventAliasesOn(o2), r2 = a2;
  } else if ("renderer" === e9 && "null" !== t3 && "base" !== t3) {
    var p2 = qu("renderer", "base"), f2 = p2.prototype, g2 = n2, v2 = n2.prototype, m2 = function() {
      p2.apply(this, arguments), g2.apply(this, arguments);
    }, b2 = m2.prototype;
    for (var x2 in f2) {
      var w2 = f2[x2];
      if (null != v2[x2])
        return i2(x2);
      b2[x2] = w2;
    }
    for (var E2 in v2)
      b2[E2] = v2[E2];
    f2.clientFunctions.forEach(function(e10) {
      b2[e10] = b2[e10] || function() {
        Oe("Renderer does not implement `renderer." + e10 + "()` on its prototype");
      };
    }), r2 = m2;
  } else if ("__proto__" === e9 || "constructor" === e9 || "prototype" === e9)
    return Oe(e9 + " is an illegal type to be registered, possibly lead to prototype pollutions");
  return O({ map: Vu, keys: [e9, t3], value: r2 });
}
function qu(e9, t3) {
  return R({ map: Vu, keys: [e9, t3] });
}
function Yu(e9, t3, n2, r2, i2) {
  return O({ map: Fu, keys: [e9, t3, n2, r2], value: i2 });
}
function Xu(e9, t3, n2, r2) {
  return R({ map: Fu, keys: [e9, t3, n2, r2] });
}
var Wu = function() {
  return 2 === arguments.length ? qu.apply(null, arguments) : 3 === arguments.length ? ju.apply(null, arguments) : 4 === arguments.length ? Xu.apply(null, arguments) : 5 === arguments.length ? Yu.apply(null, arguments) : void Oe("Invalid extension access syntax");
};
Ns.prototype.extension = Wu, Ru.forEach(function(e9) {
  e9.extensions.forEach(function(t3) {
    ju(e9.type, t3.name, t3.impl);
  });
});
var Hu = function e8() {
  if (!(this instanceof e8))
    return new e8();
  this.length = 0;
};
var Ku = Hu.prototype;
Ku.instanceString = function() {
  return "stylesheet";
}, Ku.selector = function(e9) {
  return this[this.length++] = { selector: e9, properties: [] }, this;
}, Ku.css = function(e9, t3) {
  var n2 = this.length - 1;
  if (f(e9))
    this[n2].properties.push({ name: e9, value: t3 });
  else if (y(e9))
    for (var r2 = e9, i2 = Object.keys(r2), a2 = 0; a2 < i2.length; a2++) {
      var o2 = i2[a2], s2 = r2[o2];
      if (null != s2) {
        var l2 = Ds.properties[o2] || Ds.properties[_(o2)];
        if (null != l2) {
          var u2 = l2.name, c2 = s2;
          this[n2].properties.push({ name: u2, value: c2 });
        }
      }
    }
  return this;
}, Ku.style = Ku.css, Ku.generateStyle = function(e9) {
  var t3 = new Ds(e9);
  return this.appendToStyle(t3);
}, Ku.appendToStyle = function(e9) {
  for (var t3 = 0; t3 < this.length; t3++) {
    var n2 = this[t3], r2 = n2.selector, i2 = n2.properties;
    e9.selector(r2);
    for (var a2 = 0; a2 < i2.length; a2++) {
      var o2 = i2[a2];
      e9.css(o2.name, o2.value);
    }
  }
  return e9;
};
var Gu = function(e9) {
  return void 0 === e9 && (e9 = {}), y(e9) ? new Ns(e9) : f(e9) ? Wu.apply(Wu, arguments) : void 0;
};
Gu.use = function(e9) {
  var t3 = Array.prototype.slice.call(arguments, 1);
  return t3.unshift(Gu), e9.apply(null, t3), this;
}, Gu.warnings = function(e9) {
  return Re(e9);
}, Gu.version = "3.23.0", Gu.stylesheet = Gu.Stylesheet = Hu;

// dep:cytoscape_dist_cytoscape__esm__min__js
var cytoscape_dist_cytoscape_esm_min_js_default = Gu;
export {
  cytoscape_dist_cytoscape_esm_min_js_default as default
};
/*!
Embeddable Minimum Strictly-Compliant Promises/A+ 1.1.1 Thenable
Copyright (c) 2013-2014 Ralf S. Engelschall (http://engelschall.com)
Licensed under The MIT License (http://opensource.org/licenses/MIT)
*/
/*! Bezier curve function generator. Copyright Gaetan Renaudeau. MIT License: http://en.wikipedia.org/wiki/MIT_License */
/*! Runge-Kutta spring physics function generator. Adapted from Framer.js, copyright Koen Bok. MIT License: http://en.wikipedia.org/wiki/MIT_License */
//# sourceMappingURL=cytoscape_dist_cytoscape__esm__min__js.js.map
